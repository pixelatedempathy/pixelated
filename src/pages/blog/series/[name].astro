---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import PostCard from '@/components/blog/PostCard.astro';

export const prerender = true;

type BlogPost = CollectionEntry<'blog'>;

export async function getStaticPaths() {
  const allBlogPosts = await getCollection('blog', ({ data }: BlogPost) => 
    import.meta.env.PROD ? !data.draft : true
  );

  const allSeries = [...new Set(allBlogPosts.flatMap((post: BlogPost) => post.data.tags || []))];

  return allSeries.map((name) => ({
    params: { name },
    props: { name },
  }));
}

const { name } = Astro.props;

const allPosts = await getCollection('blog', ({ data }: BlogPost) => 
  import.meta.env.PROD ? !data.draft : true
);

const postsInSeries = allPosts
  .filter((post: BlogPost) => post.data.tags && post.data.tags.includes(name))
  .sort((a: BlogPost, b: BlogPost) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const title = `Series: ${name}`;
const description = `All posts in the '${name}' series.`;
---

<BaseLayout {title} {description}>
  <div class="max-w-6xl mx-auto py-12 px-4">
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-white">Series: {name}</h1>
      <p class="text-lg text-slate-400 mt-2">{postsInSeries.length} post{postsInSeries.length !== 1 ? 's' : ''} in this series</p>
    </div>
    <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {postsInSeries.map((post: BlogPost) => (
        <PostCard post={post} />
      ))}
    </ul>
  </div>
</BaseLayout>
