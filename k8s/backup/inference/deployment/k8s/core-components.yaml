---
apiVersion: v1
kind: Namespace
metadata:
  name: pixelated-empathy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pixelated-empathy-config
  namespace: pixelated-empathy
data:
  # General configuration
  ENV: "production"
  DEBUG: "false"
  
  # API configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  
  # Database configuration
  DB_HOST: "postgresql"
  DB_PORT: "5432"
  DB_NAME: "pixelated_ai"
  DB_USER: "pixelated_user"
  
  # Redis configuration
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"

---
apiVersion: v1
kind: Secret
metadata:
  name: pixelated-empathy-secrets
  namespace: pixelated-empathy
type: Opaque
data:
  # These should be base64 encoded actual secrets
  DB_PASS: "cGFzc3dvcmQ="  # password
  SECRET_KEY: "eW91ci1zZWNyZXQta2V5"
  JWT_SECRET: "and3dC1zZWNyZXQ="

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelated-empathy-api
  namespace: pixelated-empathy
  labels:
    app: pixelated-empathy
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pixelated-empathy
      component: api
  template:
    metadata:
      labels:
        app: pixelated-empathy
        component: api
    spec:
      containers:
      - name: api
        image: pixelated-empathy:latest
        imagePullPolicy: Always
        command: ["uv", "run", "python", "-m", "inference.pixelated_empathy_inference"]
        args: ["--host", "0.0.0.0", "--port", "8000"]
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: ENV
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DEBUG
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: pixelated-empathy-secrets
              key: DB_PASS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: REDIS_PORT
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: pixelated-empathy-api
  namespace: pixelated-empathy
  labels:
    app: pixelated-empathy
    component: api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8000
    name: http
  selector:
    app: pixelated-empathy
    component: api

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelated-empathy-pipeline-worker
  namespace: pixelated-empathy
  labels:
    app: pixelated-empathy
    component: pipeline-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: pixelated-empathy
      component: pipeline-worker
  template:
    metadata:
      labels:
        app: pixelated-empathy
        component: pipeline-worker
    spec:
      containers:
      - name: pipeline-worker
        image: pixelated-empathy:latest
        imagePullPolicy: Always
        command: ["uv", "run", "python", "-m", "pipelines.process_datasets"]
        args: ["--worker"]
        env:
        - name: ENV
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: ENV
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_USER
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: pixelated-empathy-secrets
              key: DB_PASS
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: REDIS_PORT
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: pixelated-empathy
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: pixelated-empathy
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: pixelated-empathy
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_NAME
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: pixelated-empathy-config
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pixelated-empathy-secrets
              key: DB_PASS
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: postgresql-data
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: pixelated-empathy
  labels:
    app: postgresql
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgresql