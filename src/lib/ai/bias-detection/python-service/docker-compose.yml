version: '3.8'

services:
  # Bias Detection Service
  bias-detection:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: pixelated-bias-detection
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=4
      - DATABASE_URL=postgresql://bias_user:bias_password@postgres:5432/bias_detection
      - REDIS_URL=redis://redis:6379/0
      - MODEL_CACHE_DIR=/app/models
      - TENSORFLOW_MODEL_PATH=/app/models/tensorflow
      - PYTORCH_MODEL_PATH=/app/models/pytorch
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json
      - ENABLE_CACHING=true
      - CACHE_TTL_SECONDS=900
      - ENABLE_ASYNC_PROCESSING=true
      - RATE_LIMIT_PER_MINUTE=60
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    networks:
      - bias-detection-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "com.pixelated.service=bias-detection"
      - "com.pixelated.environment=production"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pixelated-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=bias_detection
      - POSTGRES_USER=bias_user
      - POSTGRES_PASSWORD=bias_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - bias-detection-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bias_user -d bias_detection"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.pixelated.service=postgres"
      - "com.pixelated.environment=production"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pixelated-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bias-detection-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    labels:
      - "com.pixelated.service=redis"
      - "com.pixelated.environment=production"

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: pixelated-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bias-detection-network
    depends_on:
      - bias-detection
    labels:
      - "com.pixelated.service=prometheus"
      - "com.pixelated.environment=production"

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: pixelated-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - bias-detection-network
    depends_on:
      - prometheus
    labels:
      - "com.pixelated.service=grafana"
      - "com.pixelated.environment=production"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: pixelated-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - bias-detection-network
    depends_on:
      - bias-detection
    labels:
      - "com.pixelated.service=nginx"
      - "com.pixelated.environment=production"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  bias-detection-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16