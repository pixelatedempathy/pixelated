apiVersion: v1
kind: Secret
metadata:
  name: pixelated-secrets
  namespace: pixelated-prod
  labels:
    app: pixelated
    environment: production
type: Opaque
data:
  # Database Secrets (base64 encoded)
  db-host: cGl4ZWxhdGVkLWRiLXNlcnZpY2UucGl4ZWxhdGVkLXByb2Quc3ZjLmNsdXN0ZXIubG9jYWw=  # pixelated-db-service.pixelated-prod.svc.cluster.local
  db-port: NTQzMg==  # 5432
  db-name: cGl4ZWxhdGVkX3Byb2Q=  # pixelated_prod
  db-user: cGl4ZWxhdGVkX3VzZXI=  # pixelated_user
  db-password: <BASE64_ENCODED_DB_PASSWORD>  # To be filled during deployment

  # Redis Secrets
  redis-password: <BASE64_ENCODED_REDIS_PASSWORD>  # To be filled during deployment

  # AI Service Secrets
  ai-service-api-key: <BASE64_ENCODED_AI_API_KEY>  # To be filled during deployment

  # JWT Secrets
  jwt-secret: <BASE64_ENCODED_JWT_SECRET>  # To be filled during deployment
  jwt-refresh-secret: <BASE64_ENCODED_JWT_REFRESH_SECRET>  # To be filled during deployment

  # Encryption Keys
  encryption-key: <BASE64_ENCODED_ENCRYPTION_KEY>  # For data encryption at rest
  encryption-iv: <BASE64_ENCODED_ENCRYPTION_IV>  # Initialization vector

  # OAuth Secrets (if applicable)
  google-oauth-client-id: <BASE64_ENCODED_GOOGLE_CLIENT_ID>
  google-oauth-client-secret: <BASE64_ENCODED_GOOGLE_CLIENT_SECRET>

  # Email Service Secrets
  smtp-username: <BASE64_ENCODED_SMTP_USERNAME>
  smtp-password: <BASE64_ENCODED_SMTP_PASSWORD>

  # Monitoring Secrets
  datadog-api-key: <BASE64_ENCODED_DATADOG_API_KEY>
  new-relic-license-key: <BASE64_ENCODED_NEW_RELIC_LICENSE_KEY>

  # Cloud Provider Secrets
  aws-access-key-id: <BASE64_ENCODED_AWS_ACCESS_KEY>
  aws-secret-access-key: <BASE64_ENCODED_AWS_SECRET_KEY>
  gcp-service-account-key: <BASE64_ENCODED_GCP_SERVICE_ACCOUNT_KEY>

  # HIPAA Compliance Secrets
  hipaa-encryption-key: <BASE64_ENCODED_HIPAA_ENCRYPTION_KEY>
  audit-log-encryption-key: <BASE64_ENCODED_AUDIT_ENCRYPTION_KEY>

  # Webhook Secrets
  webhook-secret: <BASE64_ENCODED_WEBHOOK_SECRET>

  # CDN Secrets
  cloudflare-api-token: <BASE64_ENCODED_CLOUDFLARE_TOKEN>

  # Database Backup Secrets
  backup-encryption-key: <BASE64_ENCODED_BACKUP_ENCRYPTION_KEY>
  backup-s3-access-key: <BASE64_ENCODED_BACKUP_S3_ACCESS_KEY>
  backup-s3-secret-key: <BASE64_ENCODED_BACKUP_S3_SECRET_KEY>

---
# TLS Certificate Secret (for HTTPS)
apiVersion: v1
kind: Secret
metadata:
  name: pixelated-tls-cert
  namespace: pixelated-prod
  labels:
    app: pixelated
    environment: production
type: kubernetes.io/tls
data:
  tls.crt: <BASE64_ENCODED_TLS_CERTIFICATE>
  tls.key: <BASE64_ENCODED_TLS_PRIVATE_KEY>

---
# Docker Registry Secret
apiVersion: v1
kind: Secret
metadata:
  name: pixelated-registry-secret
  namespace: pixelated-prod
  labels:
    app: pixelated
    environment: production
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: <BASE64_ENCODED_DOCKER_CONFIG>

---
# Service Account Token Secret (if needed)
apiVersion: v1
kind: Secret
metadata:
  name: pixelated-service-account-token
  namespace: pixelated-prod
  labels:
    app: pixelated
    environment: production
type: kubernetes.io/service-account-token
data:
  # This will be automatically populated by Kubernetes
