apiVersion: v1
kind: Service
metadata:
  name: pixelated-web-service
  namespace: pixelated-prod
  labels:
    app: pixelated
    component: web
    environment: production
  annotations:
    # AWS Load Balancer annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:region:account:certificate/certificate-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"

    # Health check configuration
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/api/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-port: "3000"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-protocol: "HTTP"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "5"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-unhealthy-threshold: "2"

spec:
  type: LoadBalancer
  selector:
    app: pixelated
    component: web
    environment: production
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3000
    protocol: TCP
  sessionAffinity: None
  loadBalancerSourceRanges:
  - "0.0.0.0/0"  # Configure appropriately for security

---
apiVersion: v1
kind: Service
metadata:
  name: pixelated-web-headless
  namespace: pixelated-prod
  labels:
    app: pixelated
    component: web
    environment: production
spec:
  clusterIP: None
  selector:
    app: pixelated
    component: web
    environment: production
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
