diff --git a/dist/index.mjs b/dist/index.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..c10663b3c20d78b7024277f112e6458d80935bc0
--- /dev/null
+++ b/dist/index.mjs
@@ -0,0 +1,99 @@
+import { writeFile } from "node:fs/promises";
+import { join } from "node:path";
+import { fileURLToPath } from "node:url";
+
+export default function awsAmplify() {
+  let _config;
+
+  return {
+    name: "astro-aws-amplify",
+    hooks: {
+      "astro:config:setup": ({ config, updateConfig }) => {
+        updateConfig({
+          build: {
+            client: new URL(
+              `./.amplify-hosting/static${config.base}`,
+              config.root,
+            ),
+            server: new URL("./.amplify-hosting/compute/default/", config.root),
+          },
+        });
+      },
+      "astro:config:done": ({ config, setAdapter }) => {
+        setAdapter({
+          name: "astro-aws-amplify",
+          serverEntrypoint: "astro-aws-amplify/server",
+          supportedAstroFeatures: {
+            serverOutput: "stable",
+            hybridOutput: "stable",
+            staticOutput: "unsupported",
+            assets: {
+              supportKind: "stable",
+              isSharpCompatible: true,
+              isSquooshCompatible: true,
+            },
+          },
+          args: {
+            client: config.build.client?.toString(),
+            server: config.build.server?.toString(),
+            host: config.server.host,
+            port: 3000,
+            assets: config.build.assets,
+          },
+        });
+
+        _config = config;
+      },
+      "astro:build:done": async () => {
+        const deployManifestConfig = {
+          version: 1,
+          routes: [
+            {
+              path: `${_config.base}assets/*`,
+              target: {
+                kind: "Static",
+              },
+            },
+            {
+              path: `${_config.base}*.*`,
+              target: {
+                kind: "Static",
+              },
+              fallback: {
+                kind: "Compute",
+                src: "default",
+              },
+            },
+            {
+              path: "/*",
+              target: {
+                kind: "Compute",
+                src: "default",
+              },
+            },
+          ],
+          computeResources: [
+            {
+              name: "default",
+              entrypoint: "entry.mjs",
+              runtime: "nodejs18.x",
+            },
+          ],
+          framework: {
+            name: "astro",
+            version: "4.0.0",
+          },
+        };
+
+        const functionsConfigPath = join(
+          fileURLToPath(_config.root),
+          "/.amplify-hosting/deploy-manifest.json",
+        );
+        await writeFile(
+          functionsConfigPath,
+          JSON.stringify(deployManifestConfig),
+        );
+      },
+    },
+  };
+}
diff --git a/dist/server.mjs b/dist/server.mjs
new file mode 100644
index 0000000000000000000000000000000000000000..131352b0236b2379d919065e9dfc61e4306004f4
--- /dev/null
+++ b/dist/server.mjs
@@ -0,0 +1,20 @@
+import "dotenv/config";
+
+import { NodeApp, applyPolyfills } from "astro/app/node";
+
+import startServer from "astrojs-node-aws-amplify/standalone.js";
+
+applyPolyfills();
+
+export function createExports(manifest, options) {
+  const app = new NodeApp(manifest);
+  return {
+    options: options,
+    startServer: () => startServer(app, options),
+  };
+}
+
+export function start(manifest, options) {
+  const app = new NodeApp(manifest);
+  startServer(app, options);
+}
diff --git a/package.json b/package.json
index c082d98098ec10017d7f63ba7dc673c165fc01fe..812d5733d10c486876921d83ab505834f9f3d721 100644
--- a/package.json
+++ b/package.json
@@ -20,8 +20,8 @@
     "access": "public"
   },
   "exports": {
-    ".": "./src/index.ts",
-    "./server": "./src/server.ts"
+    ".": "./dist/index.mjs",
+    "./server": "./dist/server.mjs"
   },
   "dependencies": {
     "astrojs-node-aws-amplify": "^7.0.1",
