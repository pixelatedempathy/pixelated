# Production Dockerfile for Pixelated Empathy Platform
FROM node:24-alpine AS base

# Install dependencies for native modules
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    git \
    postgresql-client \
    redis \
    curl \
    dumb-init

# Create app user for security
RUN addgroup -g 1001 -S nodejs && adduser -S pixelated -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install dependencies (including dev dependencies for build)
RUN npm install -g pnpm@latest && pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build application
RUN pnpm build:production

# Production stage
FROM node:24-alpine AS production

# Install production dependencies
RUN apk add --no-cache \
    dumb-init \
    curl \
    postgresql-client

# Create app user
RUN addgroup -g 1001 -S nodejs && adduser -S pixelated -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml ./

# Install production dependencies only
RUN npm install -g pnpm@latest && pnpm install --frozen-lockfile --prod

# Copy built application from build stage
COPY --from=base /app/dist ./dist
COPY --from=base /app/src ./src
COPY --from=base /app/astro.config.mjs ./
COPY --from=base /app/astro.config.optimized.mjs ./

# Copy production configuration
COPY docker/production-entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Create directories for secrets and logs
RUN mkdir -p /app/config/secrets /app/logs && \
    chown -R pixelated:nodejs /app

# Switch to non-root user
USER pixelated

# Expose port
EXPOSE 4321

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:4321/api/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["/usr/bin/dumb-init", "--"]

# Start application
CMD ["/usr/local/bin/entrypoint.sh"]