---
import BaseLayout from '@/layouts/BaseLayout.astro'
import BrutalistCard from '@/components/ui/BrutalistCard.astro'
import BrutalistButton from '@/components/ui/BrutalistButton.astro'
import BrutalistBadge from '@/components/ui/BrutalistBadge.astro'
import { ChatDemo } from '../../components/demo'

export const prerender = false
---

<BaseLayout
  title="Mental Health AI Chat - Live Demo"
  description="Experience our therapeutic AI chat system with real-time sentiment analysis and crisis detection capabilities"
>
  <!-- Hero Section -->
  <section class="brutalist-section">
    <div class="brutalist-container">
      <div class="text-center mb-12">
        <div class="status-indicator status-indicator--online inline-flex mb-6">
          <div class="pulse-dot pulse-dot--green"></div>
          <span class="font-bold">LIVE DEMO ACTIVE</span>
        </div>
        
        <h1 class="brutalist-heading text-5xl md:text-7xl mb-6">
          THERAPEUTIC
          <br />
          <span class="text-green-400">AI CHAT</span>
        </h1>
        
        <p class="text-xl text-gray-300 max-w-4xl mx-auto mb-8">
          Experience advanced AI chat with therapeutic response generation, real-time sentiment analysis, and crisis detection.
        </p>

        <div class="flex flex-wrap justify-center gap-4 mb-12">
          <div class="brutalist-badge brutalist-badge--success">ðŸ’¬ REAL-TIME CHAT</div>
          <div class="brutalist-badge brutalist-badge--info">ðŸ§  SENTIMENT ANALYSIS</div>
          <div class="brutalist-badge brutalist-badge--warning">ðŸš¨ CRISIS DETECTION</div>
          <div class="brutalist-badge brutalist-badge--success">ðŸ”’ HIPAA SECURE</div>
        </div>
      </div>
    </div>
  </section>

  <!-- Main Chat Demo -->
  <section class="brutalist-section bg-gray-900/50">
    <div class="brutalist-container">
      <div class="max-w-6xl mx-auto">
        <BrutalistCard variant="elevated" class="mb-12">
          <div class="space-y-6">
            <div class="border-b border-gray-700 pb-4">
              <h3 class="brutalist-subheading text-2xl mb-2">ðŸ’¬ LIVE CHAT INTERFACE</h3>
              <p class="text-gray-400">Send a message to start a therapeutic conversation with our AI</p>
            </div>

            <!-- Chat Demo Container -->
            <div class="chat-container rounded-lg">
              <ChatDemo client:load />
            </div>

            <!-- Quick Start Actions -->
            <div class="flex gap-3 pt-4 border-t border-gray-700">
              <BrutalistButton variant="primary" class="flex-1" id="sample-anxiety">
                ðŸ˜° Try Anxiety Sample
              </BrutalistButton>
              <BrutalistButton variant="secondary" class="flex-1" id="sample-depression">
                ðŸ˜” Try Depression Sample
              </BrutalistButton>
              <BrutalistButton variant="outline" class="flex-1" id="sample-crisis">
                ðŸš¨ Try Crisis Sample
              </BrutalistButton>
            </div>
          </div>
        </BrutalistCard>
      </div>
    </div>
  </section>

  <!-- Features Showcase -->
  <section class="brutalist-section">
    <div class="brutalist-container">
      <div class="text-center mb-12">
        <h2 class="brutalist-heading text-3xl md:text-5xl mb-4">
          ADVANCED
          <span class="confidence-boost">CAPABILITIES</span>
        </h2>
        <p class="text-lg text-gray-300">Real-time AI analysis and therapeutic response generation</p>
      </div>

      <div class="brutalist-grid brutalist-grid--2 max-w-5xl mx-auto">
        <BrutalistCard hover={true}>
          <div class="text-center">
            <div class="text-5xl mb-6">ðŸ§ </div>
            <h3 class="brutalist-subheading text-xl mb-4">REAL-TIME ANALYSIS</h3>
            <div class="space-y-3 text-left">
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-green-400 rounded-full"></span>
                <span class="text-gray-300">Sentiment analysis of every message</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-blue-400 rounded-full"></span>
                <span class="text-gray-300">Emotional state tracking</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-yellow-400 rounded-full"></span>
                <span class="text-gray-300">Crisis detection & alerting</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-purple-400 rounded-full"></span>
                <span class="text-gray-300">Therapeutic response generation</span>
              </div>
            </div>
          </div>
        </BrutalistCard>

        <BrutalistCard hover={true}>
          <div class="text-center">
            <div class="text-5xl mb-6">ðŸ”’</div>
            <h3 class="brutalist-subheading text-xl mb-4">SECURITY & COMPLIANCE</h3>
            <div class="space-y-3 text-left">
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-green-400 rounded-full"></span>
                <span class="text-gray-300">HIPAA-compliant architecture</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-blue-400 rounded-full"></span>
                <span class="text-gray-300">End-to-end encryption</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-yellow-400 rounded-full"></span>
                <span class="text-gray-300">Comprehensive audit logging</span>
              </div>
              <div class="flex items-center gap-3">
                <span class="w-3 h-3 bg-purple-400 rounded-full"></span>
                <span class="text-gray-300">Zero data retention in demo</span>
              </div>
            </div>
          </div>
        </BrutalistCard>
      </div>
    </div>
  </section>

  <!-- Technical Details -->
  <section class="brutalist-section bg-gray-900/50">
    <div class="brutalist-container">
      <div class="text-center mb-12">
        <h2 class="brutalist-heading text-3xl md:text-5xl mb-4">
          HOW IT
          <span class="text-blue-400">WORKS</span>
        </h2>
        <p class="text-lg text-gray-300">Advanced AI integration with therapeutic training</p>
      </div>

      <div class="brutalist-grid brutalist-grid--3">
        <BrutalistCard hover={true}>
          <div class="text-center">
            <div class="text-4xl mb-4">âš¡</div>
            <h3 class="brutalist-subheading text-lg mb-3">STREAMING RESPONSES</h3>
            <p class="text-gray-400 text-sm mb-4">
              Real-time streaming responses using TogetherAI API for natural conversation flow.
            </p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-green-400 rounded-full"></span>
                <span>Sub-second response times</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-green-400 rounded-full"></span>
                <span>Natural conversation flow</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-green-400 rounded-full"></span>
                <span>Context-aware responses</span>
              </div>
            </div>
          </div>
        </BrutalistCard>

        <BrutalistCard hover={true}>
          <div class="text-center">
            <div class="text-4xl mb-4">ðŸ“Š</div>
            <h3 class="brutalist-subheading text-lg mb-3">SENTIMENT ANALYSIS</h3>
            <p class="text-gray-400 text-sm mb-4">
              Real-time emotional state analysis with configurable sensitivity thresholds.
            </p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-blue-400 rounded-full"></span>
                <span>Emotion classification</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-blue-400 rounded-full"></span>
                <span>Intensity scoring</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-blue-400 rounded-full"></span>
                <span>Trend tracking</span>
              </div>
            </div>
          </div>
        </BrutalistCard>

        <BrutalistCard hover={true}>
          <div class="text-center">
            <div class="text-4xl mb-4">ðŸš¨</div>
            <h3 class="brutalist-subheading text-lg mb-3">CRISIS DETECTION</h3>
            <p class="text-gray-400 text-sm mb-4">
              Advanced pattern recognition for identifying crisis situations with immediate alerts.
            </p>
            <div class="space-y-2 text-sm">
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-orange-400 rounded-full"></span>
                <span>Suicide risk assessment</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-orange-400 rounded-full"></span>
                <span>Self-harm detection</span>
              </div>
              <div class="flex items-center gap-2">
                <span class="w-2 h-2 bg-orange-400 rounded-full"></span>
                <span>Immediate escalation</span>
              </div>
            </div>
          </div>
        </BrutalistCard>
      </div>
    </div>
  </section>

  <!-- Performance Metrics -->
  <section class="brutalist-section">
    <div class="brutalist-container">
      <div class="text-center mb-12">
        <h2 class="brutalist-heading text-3xl md:text-5xl mb-4">
          REAL-TIME
          <span class="confidence-boost">METRICS</span>
        </h2>
        <p class="text-lg text-gray-300">Live system performance and analysis data</p>
      </div>

      <div class="dashboard-grid">
        <div class="metric-card">
          <div class="metric-value" id="response-time">0.8s</div>
          <div class="metric-label">Avg Response Time</div>
        </div>
        <div class="metric-card">
          <div class="metric-value" id="accuracy-rate">94.7%</div>
          <div class="metric-label">Sentiment Accuracy</div>
        </div>
        <div class="metric-card">
          <div class="metric-value" id="uptime">99.9%</div>
          <div class="metric-label">System Uptime</div>
        </div>
        <div class="metric-card">
          <div class="metric-value" id="active-sessions">247</div>
          <div class="metric-label">Active Sessions</div>
        </div>
      </div>
    </div>
  </section>

  <!-- CTA Section -->
  <section class="brutalist-section bg-gray-900/50">
    <div class="brutalist-container">
      <div class="mental-health-safe max-w-4xl mx-auto text-center">
        <div class="text-5xl mb-6">ðŸš€</div>
        
        <h2 class="brutalist-heading text-3xl md:text-5xl mb-6">
          READY TO INTEGRATE
          <br />
          <span class="confidence-boost">THERAPEUTIC AI?</span>
        </h2>
        
        <p class="text-xl text-gray-300 mb-8">
          Deploy our AI chat system in your practice. Full API access, custom training, and enterprise support.
        </p>

        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <BrutalistButton href="/contact" variant="primary" size="lg">
            GET API ACCESS â†’
          </BrutalistButton>
          <BrutalistButton href="/demo-hub" variant="secondary" size="lg">
            EXPLORE MORE DEMOS
          </BrutalistButton>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  class ChatDemoInterface {
    constructor() {
      this.initializeSampleButtons()
      this.startMetricsUpdate()
    }

    initializeSampleButtons() {
      const anxietyBtn = document.getElementById('sample-anxiety')
      const depressionBtn = document.getElementById('sample-depression')
      const crisisBtn = document.getElementById('sample-crisis')

      anxietyBtn?.addEventListener('click', () => {
        this.sendSampleMessage("I'm feeling really anxious about my presentation tomorrow. My heart won't stop racing and I can't sleep.")
      })

      depressionBtn?.addEventListener('click', () => {
        this.sendSampleMessage("I've been feeling empty and hopeless lately. Nothing seems to bring me joy anymore.")
      })

      crisisBtn?.addEventListener('click', () => {
        this.sendSampleMessage("I don't think I can handle this anymore. Everything feels overwhelming and pointless.")
      })
    }

    sendSampleMessage(message: string) {
      // This would integrate with the ChatDemo component
      // For now, we'll simulate the action
      const chatInput = document.querySelector('textarea[placeholder*="message"]') as HTMLTextAreaElement
      if (chatInput) {
        chatInput.value = message
        chatInput.focus()
        
        // Trigger input event to notify the component
        const event = new Event('input', { bubbles: true })
        chatInput.dispatchEvent(event)
      }
    }

    startMetricsUpdate() {
      // Simulate real-time metrics updates
      setInterval(() => {
        this.updateMetrics()
      }, 5000)
    }

    updateMetrics() {
      const responseTime = document.getElementById('response-time')
      const accuracyRate = document.getElementById('accuracy-rate')
      const uptime = document.getElementById('uptime')
      const activeSessions = document.getElementById('active-sessions')

      if (responseTime) {
        const time = (0.6 + Math.random() * 0.4).toFixed(1)
        responseTime.textContent = time + 's'
      }

      if (accuracyRate) {
        const accuracy = (94.0 + Math.random() * 2).toFixed(1)
        accuracyRate.textContent = accuracy + '%'
      }

      if (uptime) {
        const up = (99.8 + Math.random() * 0.2).toFixed(1)
        uptime.textContent = up + '%'
      }

      if (activeSessions) {
        const sessions = Math.floor(240 + Math.random() * 20)
        activeSessions.textContent = sessions.toString()
      }
    }
  }

  // Initialize demo interface
  document.addEventListener('DOMContentLoaded', () => {
    new ChatDemoInterface()
  })
</script>

<style>
  /* Enhanced chat container styling */
  .chat-container {
    min-height: 600px;
    background: var(--bg-secondary);
    border: 2px solid var(--border-primary);
    border-radius: var(--radius-lg);
  }

  /* Sample button hover effects */
  #sample-anxiety:hover,
  #sample-depression:hover,
  #sample-crisis:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  /* Metric card animations */
  .metric-card {
    transition: all var(--transition-normal);
  }

  .metric-card:hover {
    transform: translateY(-4px);
    border-color: var(--accent-primary);
  }

  /* Custom animations */
  @keyframes pulse-metrics {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
  }

  .metric-value {
    animation: pulse-metrics 3s ease-in-out infinite;
  }
</style>
