name: 'Prepare uv venv'
description: 'Ensure uv is available and create a uv virtual environment in the given service directory. Outputs `use-system` which will be "--system" when venv creation failed, or empty when venv succeeded.'
inputs:
  service-dir:
    description: 'Path to the Python service directory (relative to repo root)'
    required: true
    default: '.'
outputs:
  use-system:
    description: 'If non-empty, contains the --system flag to use for uv pip installs'
    value: ${{ steps.create_venv.outputs.use-system }}
runs:
  using: 'composite'
  steps:
  - name: Ensure `uv` shim is available
    shell: bash
    run: |
      if ! command -v uv >/dev/null 2>&1; then
        echo "uv not found - installing via pip"
        python -m pip install --upgrade pip || true
        python -m pip install uv || true
      else
        echo "uv already installed"
      fi

  - name: Create uv virtual environment (or fallback)
    id: create_venv
    shell: bash
    run: |
      set -e
      cd "${{ inputs.service-dir }}"

      # Try to create a uv venv. If it fails, return --system as output.
      if uv venv; then
        echo "use-system=" >> "$GITHUB_OUTPUT"
        echo "Created uv virtual environment in ${PWD}"
      else
        echo "uv venv failed; falling back to system installs" >&2
        echo "use-system=--system" >> "$GITHUB_OUTPUT"
      fi
