apiVersion: v1
kind: ConfigMap
metadata:
  name: pixelated-package-json
  namespace: default
data:
  package.json: |
    {
      "name": "pixelated-empathy",
      "version": "1.0.0",
      "description": "Pixelated Empathy Application",
      "main": "dist/server/entry.mjs",
      "scripts": {
        "start": "node dist/server/entry.mjs",
        "build": "astro build",
        "dev": "astro dev"
      },
      "dependencies": {
        "@astrojs/react": "^4.2.5",
        "@astrojs/tailwind": "^6.0.2",
        "astro": "^5.15.1",
        "react": "^19.2.2",
        "react-dom": "^19.2.1",
        "tailwindcss": "^3.4.17"
      },
      "engines": {
        "node": ">=24.0.0"
      },
      "private": true
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pixelated-astro-config
  namespace: default
data:
  astro.config.mjs: |
    import { defineConfig } from 'astro/config';
    import react from '@astrojs/react';
    import tailwind from '@astrojs/tailwind';
    
    export default defineConfig({
      integrations: [react(), tailwind()],
      output: 'static',
      build: {
        format: 'directory'
      }
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelated-empathy-app
  namespace: default
  labels:
    app: pixelated-empathy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pixelated-empathy
  template:
    metadata:
      labels:
        app: pixelated-empathy
    spec:
      containers:
      - name: pixelated-empathy
        image: node:24-alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -e
            echo "Starting Pixelated Empathy deployment..."
            
            # Install pnpm
            npm install -g pnpm@10.20.0
            
            # Create app directory
            mkdir -p /app
            cd /app
            
            # Copy package.json and install dependencies
            cp /config/package.json .
            pnpm install --no-frozen-lockfile
            
            # Create basic Astro project structure
            mkdir -p src/pages src/components public
            
            # Create basic index page
            cat > src/pages/index.astro << 'EOF'
            ---
            import Layout from '../layouts/Layout.astro';
            ---
            <Layout title="Pixelated Empathy">
              <main>
                <h1>Welcome to Pixelated Empathy</h1>
                <p>Application is running on Civo Cloud!</p>
              </main>
            </Layout>
            EOF
            
            # Create basic layout
            mkdir -p src/layouts
            cat > src/layouts/Layout.astro << 'EOF'
            ---
            export interface Props {
              title: string;
            }
            const { title } = Astro.props;
            ---
            <!DOCTYPE html>
            <html lang="en">
              <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>{title}</title>
              </head>
              <body>
                <slot />
              </body>
            </html>
            EOF
            
            # Copy astro config
            cp /config/astro.config.mjs .
            
            # Build the application
            pnpm build
            
            # Create a simple server to serve the static files
            cat > server.js << 'EOF'
            const express = require('express');
            const path = require('path');
            const app = express();
            const port = process.env.PORT || 3000;
            
            app.use(express.static('dist'));
            
            app.get('*', (req, res) => {
              res.sendFile(path.join(__dirname, 'dist', 'index.html'));
            });
            
            app.listen(port, () => {
              console.log(`Pixelated Empathy server running on port ${port}`);
            });
            EOF
            
            # Install express
            pnpm add express
            
            # Start the server
            echo "Starting server..."
            node server.js
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        volumeMounts:
        - name: config-volume
          mountPath: /config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: pixelated-package-json
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: pixelated-empathy-service
  namespace: default
spec:
  selector:
    app: pixelated-empathy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
  type: ClusterIP