{
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "typescript.suggest.autoImports": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.importModuleSpecifier": "relative",
    "typescript.preferences.quoteStyle": "single",
    "typescript.format.insertSpaceAfterCommaDelimiter": true,
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,
    "typescript.format.insertSpaceAfterTypeAssertion": false,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": false,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,
    "typescript.suggest.completeFunctionCalls": false,
    "typescript.suggest.includeAutomaticOptionalChainCompletions": true,
    "typescript.suggest.objectLiteralMethodSnippets.enabled": true,
    "typescript.workspaceSymbols.scope": "allOpenProjects",
    "typescript.suggest.enabled": true,
    "typescript.validate.enable": true,
    "typescript.format.enable": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": false,
    "typescript.inlayHints.parameterTypes.enabled": false,
    "typescript.inlayHints.variableTypes.enabled": false,
    "typescript.inlayHints.propertyDeclarationTypes.enabled": false,
    "typescript.inlayHints.enumMemberValues.enabled": false,
    "typescript.tsserver.log": "off",
    "typescript.tsserver.maxTsServerMemory": 4096,
    "typescript.tsserver.enableTracing": false,
    "typescript.tsserver.experimental.enableProjectDiagnostics": false,
    "typescript.tsserver.useSyntaxServer": "always",
    "typescript.tsserver.watchOptions": {
        "watchFile": "useFsEvents",
        "watchDirectory": "useFsEvents",
        "fallbackPolling": "dynamicPriorityPolling",
        "synchronousWatchDirectory": false,
        "excludeDirectories": [
            "**/node_modules",
            "dist",
            ".astro",
            "public/test-results",
            "performance-results",
            "youtube-transcription-pipeline",
            "secret-scan-artifacts",
            "security-scan-artifacts",
            "ai",
            "tests",
            "scripts",
            "docs",
            "deploy",
            "docker",
            "infra",
            "lint",
            "LogFiles",
            "memory",
            "patches",
            "reports",
            "supabase",
            "templates",
            "test_pixel_logs",
            "types"
        ]
    },
    "typescript.disableAutomaticTypeAcquisition": true,
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true,
        "**/dist/**": true,
        "**/.astro/**": true,
        "**/coverage/**": true,
        "**/.nyc_output/**": true,
        "**/test-results/**": true,
        "**/performance-results/**": true,
        "**/youtube-transcription-pipeline/**": true,
        "**/public/test-results/**": true,
        "**/secret-scan-artifacts/**": true,
        "**/security-scan-artifacts/**": true
    },
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/node_modules": true,
        "**/dist": true,
        "**/.astro": true,
        "**/coverage": true,
        "**/.nyc_output": true,
        "**/test-results": true,
        "**/performance-results": true,
        "**/youtube-transcription-pipeline": true,
        "**/public/test-results": true,
        "**/secret-scan-artifacts": true,
        "**/security-scan-artifacts": true
    },
    "search.exclude": {
        "**/node_modules": true,
        "**/dist": true,
        "**/.astro": true,
        "**/coverage": true,
        "**/.nyc_output": true,
        "**/test-results": true,
        "**/performance-results": true,
        "**/youtube-transcription-pipeline": true,
        "**/public/test-results": true,
        "**/secret-scan-artifacts": true,
        "**/security-scan-artifacts": true
    },
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll.eslint": "explicit"
    },
    "typescript.tsdk": "node_modules/typescript/lib",
    "python-envs.defaultEnvManager": "ms-python.python:system",
    "python-envs.defaultPackageManager": "ms-python.python:pip",
    "python-envs.pythonProjects": [],
    "roo-cline.newTaskRequireTodos": true,
    "roo-cline.preventCompletionWithOpenTodos": true,
    "github.copilot.chat.customOAIModels": {
        "moonshotai/kimi-k2-instruct-0905": {
            "name": "Kimi-K2-Instruct",
            "url": "https://integrate.api.nvidia.com/v1",
            "requiresAPIKey": true,
            "toolCalling": true,
            "vision": false,
            "maxInputTokens": 256000,
            "maxOutputTokens": 4096
        },
        "qwen/qwen3-next-80b-a3b-instruct": {
            "name": "Qwen3-Next-Instruct",
            "url": "https://integrate.api.nvidia.com/v1",
            "requiresAPIKey": true,
            "toolCalling": true,
            "vision": false,
            "maxInputTokens": 256000,
            "maxOutputTokens": 4096
        }
    },
    "files.autoSave": "afterDelay",
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll.ruff": "explicit"
        }
    },
    "black-formatter.args": [
        "--line-length",
        "88"
    ],
    "ruff.enable": true,
    "ruff.lint.args": [
        "--line-length",
        "88"
    ],
}
