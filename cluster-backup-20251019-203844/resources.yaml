apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-01T19:11:48Z"
    generateName: cert-manager-cainjector-fd9bf654b-
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: fd9bf654b
    name: cert-manager-cainjector-fd9bf654b-tmc7l
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-cainjector-fd9bf654b
      uid: 394e5209-2f07-4c0f-a71c-27b81fd49f22
    resourceVersion: "1759345925413423010"
    uid: f2ecaa22-207f-4e38-8f50-d82d46ccbc5f
  spec:
    containers:
    - args:
      - --v=2
      - --leader-election-namespace=kube-system
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-cainjector:v1.14.5
      imagePullPolicy: IfNotPresent
      name: cert-manager-cainjector
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9swr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-cainjector
    serviceAccountName: cert-manager-cainjector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-w9swr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:05Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:05Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c60f0c307806a11babd653a8ac60f60c984adc641493804470bec8b4fe22b6f2
      image: quay.io/jetstack/cert-manager-cainjector:v1.14.5
      imageID: quay.io/jetstack/cert-manager-cainjector@sha256:4ffda7facb4da16dab20a88e7607b75ebdab4e6c9069a840216a89f47261ee0b
      lastState: {}
      name: cert-manager-cainjector
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9swr
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.3
    podIPs:
    - ip: 10.72.5.3
    qosClass: BestEffort
    startTime: "2025-10-01T19:11:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9402"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:08:12Z"
    generateName: cert-manager-ff4b94468-
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: ff4b94468
    name: cert-manager-ff4b94468-qlqsl
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-ff4b94468
      uid: ad0ea625-13b2-4d0a-8272-04011ff1e8c2
    resourceVersion: "1759345707184255013"
    uid: b52ec4ad-8d15-4d14-97f7-3910d50256ea
  spec:
    containers:
    - args:
      - --v=2
      - --cluster-resource-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=kube-system
      - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5
      - --max-concurrent-challenges=60
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-controller:v1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          path: /livez
          port: http-healthz
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: cert-manager-controller
      ports:
      - containerPort: 9402
        name: http-metrics
        protocol: TCP
      - containerPort: 9403
        name: http-healthz
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pjqz6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager
    serviceAccountName: cert-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-pjqz6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dce091539a0418f9e8f57086cf5b55388359cfbd3982da34c057a8b5e01c5d7c
      image: quay.io/jetstack/cert-manager-controller:v1.14.5
      imageID: quay.io/jetstack/cert-manager-controller@sha256:9c0527cab629b61bd60c20f0c25615a8593314d3504add968b42bc5b891b253a
      lastState: {}
      name: cert-manager-controller
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:26Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pjqz6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.4
    podIPs:
    - ip: 10.72.0.4
    qosClass: BestEffort
    startTime: "2025-10-01T19:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-11T19:48:59Z"
    generateName: cert-manager-webhook-5ff45f766f-
    generation: 1
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: 5ff45f766f
    name: cert-manager-webhook-5ff45f766f-c8gfm
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cert-manager-webhook-5ff45f766f
      uid: d286a24f-fb4e-45f7-b3eb-05524c6e218a
    resourceVersion: "1760212152160463003"
    uid: 8ff8c128-d3d0-4383-83c8-ec2951312503
  spec:
    containers:
    - args:
      - --v=2
      - --secure-port=10250
      - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
      - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
      - --dynamic-serving-dns-names=cert-manager-webhook
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
      - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/jetstack/cert-manager-webhook:v1.14.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: 6080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: cert-manager-webhook
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      - containerPort: 6080
        name: healthcheck
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 6080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 2m
          memory: 14Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wdzr5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cert-manager-webhook
    serviceAccountName: cert-manager-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-wdzr5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-11T19:49:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-11T19:49:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-11T19:49:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-11T19:49:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-11T19:49:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 2m
        memory: 14Mi
      containerID: containerd://09b9088599cad8849bc47785594775de22a73ecc96d082d727bb4e9b85774c18
      image: quay.io/jetstack/cert-manager-webhook:v1.14.5
      imageID: quay.io/jetstack/cert-manager-webhook@sha256:ef419261a209c5409fb1539dbd45c805d05936e955b4530b8ec4ac780577f151
      lastState: {}
      name: cert-manager-webhook
      ready: true
      resources:
        requests:
          cpu: 2m
          memory: 14Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-11T19:49:04Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wdzr5
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.72.1.30
    podIPs:
    - ip: 10.72.1.30
    qosClass: Burstable
    startTime: "2025-10-11T19:49:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:11:49Z"
    generateName: helm-controller-5c898f4887-
    generation: 1
    labels:
      app: helm-controller
      pod-template-hash: 5c898f4887
    name: helm-controller-5c898f4887-fn4sg
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: helm-controller-5c898f4887
      uid: fc42ab9d-c9b9-40b7-b599-b7f5b4850570
    resourceVersion: "1759345929520015020"
    uid: d4c85ff7-dcdd-4eb6-a53f-ffd12718bee4
  spec:
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qnfqh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: helm-controller
    serviceAccountName: helm-controller
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-qnfqh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://46008c332140036f088b725c550692d0d929d53b269cc6bef862d4dfb312d66f
      image: ghcr.io/fluxcd/helm-controller:v1.3.0
      imageID: ghcr.io/fluxcd/helm-controller@sha256:db55d9d9f9b5106acd8c21da6916b8e285fcfc5572f214361ececd1a8571a4f0
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:08Z"
      user:
        linux:
          gid: 65534
          supplementalGroups:
          - 1337
          - 65534
          uid: 65534
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qnfqh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.5
    podIPs:
    - ip: 10.72.5.5
    qosClass: Burstable
    startTime: "2025-10-01T19:11:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:11:49Z"
    generateName: kustomize-controller-7bcf986f97-
    generation: 1
    labels:
      app: kustomize-controller
      pod-template-hash: 7bcf986f97
    name: kustomize-controller-7bcf986f97-4b5rj
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kustomize-controller-7bcf986f97
      uid: e71bae62-13bf-4cda-92e5-1f0de314e8b9
    resourceVersion: "1759345932587439011"
    uid: 204e5958-cae8-4d7f-99df-73a3167a2220
  spec:
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-229d2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: kustomize-controller
    serviceAccountName: kustomize-controller
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-229d2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://8696dae3f0894745a53f8139016881cf2622e834d5a594ac26a7455708ffd670
      image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
      imageID: ghcr.io/fluxcd/kustomize-controller@sha256:1a50730537bafb7827365b9af95c4eb71ca3d9b0bed9bc9bc765880e976972ef
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:11Z"
      user:
        linux:
          gid: 65534
          supplementalGroups:
          - 1337
          - 65534
          uid: 65534
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-229d2
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.6
    podIPs:
    - ip: 10.72.5.6
    qosClass: Burstable
    startTime: "2025-10-01T19:11:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:11:49Z"
    generateName: notification-controller-5f66f99d4d-
    generation: 1
    labels:
      app: notification-controller
      pod-template-hash: 5f66f99d4d
    name: notification-controller-5f66f99d4d-w4wds
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: notification-controller-5f66f99d4d
      uid: e0643e09-5491-45a8-8321-8882216758d7
    resourceVersion: "1759345936747391017"
    uid: 5d9161d2-6fa1-41f2-b295-0850471f09c7
  spec:
    containers:
    - args:
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      - containerPort: 9292
        name: http-webhook
        protocol: TCP
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fndd6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: notification-controller
    serviceAccountName: notification-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: temp
    - name: kube-api-access-fndd6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
        memory: 64Mi
      containerID: containerd://deb94a8127441417d735beb00d441550a7f0df511bd4625ecb362a113201151f
      image: ghcr.io/fluxcd/notification-controller:v1.6.0
      imageID: ghcr.io/fluxcd/notification-controller@sha256:80174ff676407af7a6feff67b0c2f100de9f7f89df4c26fc871e4d4c4006544d
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:15Z"
      user:
        linux:
          gid: 65534
          supplementalGroups:
          - 1337
          - 65534
          uid: 65534
      volumeMounts:
      - mountPath: /tmp
        name: temp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fndd6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.7
    podIPs:
    - ip: 10.72.5.7
    qosClass: Burstable
    startTime: "2025-10-01T19:11:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:11:49Z"
    generateName: source-controller-54bc45dc6-
    generation: 1
    labels:
      app: source-controller
      pod-template-hash: 54bc45dc6
    name: source-controller-54bc45dc6-cl9pb
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: source-controller-54bc45dc6
      uid: 9f6bd5c1-603a-44a3-87a4-1b92027d5b00
    resourceVersion: "1759345942708511016"
    uid: 6a549865-85ad-4e24-9f48-819c63970445
  spec:
    containers:
    - args:
      - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
      - --watch-all-namespaces=true
      - --log-level=info
      - --log-encoding=json
      - --enable-leader-election
      - --storage-path=/data
      - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
      env:
      - name: RUNTIME_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: TUF_ROOT
        value: /tmp/.sigstore
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.cpu
      - name: GOMEMLIMIT
        valueFrom:
          resourceFieldRef:
            containerName: manager
            divisor: "0"
            resource: limits.memory
      image: ghcr.io/fluxcd/source-controller:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: manager
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      - containerPort: 8080
        name: http-prom
        protocol: TCP
      - containerPort: 9440
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2ft6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1337
    serviceAccount: source-controller
    serviceAccountName: source-controller
    terminationGracePeriodSeconds: 10
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-g2ft6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 64Mi
      containerID: containerd://213e3376f1e398e44e306059d2e7e32b5c9113de07665f142785757b91de427c
      image: ghcr.io/fluxcd/source-controller:v1.6.2
      imageID: ghcr.io/fluxcd/source-controller@sha256:11c8e14df885eff86586533d9941293ec8a1e9fff71bacf119edc79fdf3c63e3
      lastState: {}
      name: manager
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 50m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:20Z"
      user:
        linux:
          gid: 65534
          supplementalGroups:
          - 1337
          - 65534
          uid: 65534
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g2ft6
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.9
    podIPs:
    - ip: 10.72.5.9
    qosClass: Burstable
    startTime: "2025-10-01T19:11:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/token: 55f5c01a246138d54313d5f4851193148f00db36af874870b62f45df4f9eafed
      prometheus.io/path: /metrics
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:08:13Z"
    generateName: pixelkube-gitlab-agent-v2-7bf855d56f-
    generation: 1
    labels:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gitlab-agent
      app.kubernetes.io/version: v18.3.2
      helm.sh/chart: gitlab-agent-2.18.1
      pod-template-hash: 7bf855d56f
    name: pixelkube-gitlab-agent-v2-7bf855d56f-hwx2h
    namespace: gitlab-agent-pixelkube
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pixelkube-gitlab-agent-v2-7bf855d56f
      uid: b8f02c8a-b889-470a-aecb-d3e7f986f839
    resourceVersion: "1759345722483279013"
    uid: 69456b80-6a68-4dba-a276-8ef526c1c65d
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - --token-file=/etc/agentk/secrets/token
      - --kas-address=wss://kas.gitlab.com
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GITLAB_AGENT_TELEMETRY_installation_method
        value: helm-chart
      - name: GITLAB_AGENT_TELEMETRY_helm_chart_version
        value: 2.18.1
      - name: SERVICE_ACCOUNT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: OCS_ENABLED
        value: "true"
      - name: OCS_SERVICE_ACCOUNT_NAME
        value: pixelkube-gitlab-agent-ocs-scanning-pod-sa
      image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /liveness
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: gitlab-agent
      ports:
      - containerPort: 8080
        name: observability
        protocol: TCP
      - containerPort: 8082
        name: api
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: service-account-token-volume
        readOnly: true
      - mountPath: /etc/agentk/secrets
        name: secret-volume
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: pixelkube-gitlab-agent
    serviceAccountName: pixelkube-gitlab-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: service-account-token-volume
      projected:
        defaultMode: 292
        sources:
        - configMap:
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
    - name: secret-volume
      secret:
        defaultMode: 292
        secretName: pixelkube-gitlab-agent-token
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://12b021fc02155f7560cded0d0e093dd8e1faf4d7061d61a61ca66dce0824e383
      image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
      imageID: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk@sha256:2f62adc37265f9b151966b49af82f9551c4d623cd6fa9aff8e45cf92e1abc93e
      lastState: {}
      name: gitlab-agent
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:31Z"
      user:
        linux:
          gid: 65532
          supplementalGroups:
          - 65532
          uid: 65532
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: service-account-token-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/agentk/secrets
        name: secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.6
    podIPs:
    - ip: 10.72.0.6
    qosClass: BestEffort
    startTime: "2025-10-01T19:08:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/token: 55f5c01a246138d54313d5f4851193148f00db36af874870b62f45df4f9eafed
      prometheus.io/path: /metrics
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:17:28Z"
    generateName: pixelkube-gitlab-agent-v2-7bf855d56f-
    generation: 1
    labels:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gitlab-agent
      app.kubernetes.io/version: v18.3.2
      helm.sh/chart: gitlab-agent-2.18.1
      pod-template-hash: 7bf855d56f
    name: pixelkube-gitlab-agent-v2-7bf855d56f-m8fr2
    namespace: gitlab-agent-pixelkube
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pixelkube-gitlab-agent-v2-7bf855d56f
      uid: b8f02c8a-b889-470a-aecb-d3e7f986f839
    resourceVersion: "1759346278723935019"
    uid: 4e7a0e63-75ec-4bf4-b926-df507890d107
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - --token-file=/etc/agentk/secrets/token
      - --kas-address=wss://kas.gitlab.com
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: GITLAB_AGENT_TELEMETRY_installation_method
        value: helm-chart
      - name: GITLAB_AGENT_TELEMETRY_helm_chart_version
        value: 2.18.1
      - name: SERVICE_ACCOUNT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: OCS_ENABLED
        value: "true"
      - name: OCS_SERVICE_ACCOUNT_NAME
        value: pixelkube-gitlab-agent-ocs-scanning-pod-sa
      image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /liveness
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: gitlab-agent
      ports:
      - containerPort: 8080
        name: observability
        protocol: TCP
      - containerPort: 8082
        name: api
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: service-account-token-volume
        readOnly: true
      - mountPath: /etc/agentk/secrets
        name: secret-volume
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: pixelkube-gitlab-agent
    serviceAccountName: pixelkube-gitlab-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: service-account-token-volume
      projected:
        defaultMode: 292
        sources:
        - configMap:
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
    - name: secret-volume
      secret:
        defaultMode: 292
        secretName: pixelkube-gitlab-agent-token
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:46Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://44789b57adcaa9b58adc3dffc8de8f9b397d2bfc6698b8db236a3d6e6ee72685
      image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
      imageID: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk@sha256:2f62adc37265f9b151966b49af82f9551c4d623cd6fa9aff8e45cf92e1abc93e
      lastState: {}
      name: gitlab-agent
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:45Z"
      user:
        linux:
          gid: 65532
          supplementalGroups:
          - 65532
          uid: 65532
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: service-account-token-volume
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/agentk/secrets
        name: secret-volume
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.72.1.4
    podIPs:
    - ip: 10.72.1.4
    qosClass: BestEffort
    startTime: "2025-10-01T19:17:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.33.4-gke.3
    creationTimestamp: "2025-10-08T17:32:12Z"
    generateName: kube-state-metrics-
    generation: 1
    labels:
      app.kubernetes.io/name: gke-managed-kube-state-metrics
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: kube-state-metrics-db7bd94d7
      statefulset.kubernetes.io/pod-name: kube-state-metrics-0
    name: kube-state-metrics-0
    namespace: gke-managed-cim
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: kube-state-metrics
      uid: 6f77bc89-1b3a-43d2-9b87-df34efbb7535
    resourceVersion: "1759944747593887013"
    uid: 06ae3875-d44c-4a80-b763-15cdfb93bd72
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64
              - arm64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - --pod=$(POD_NAME)
      - --pod-namespace=$(POD_NAMESPACE)
      - --port=8080
      - --telemetry-port=8081
      - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
      - --metric-allowlist=kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition,kube_jobset_restarts,kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled,kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated
      - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
      - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.25@sha256:85ee4852b28396e773f56f16afddeefa1e6e751d69b6721642c46c03eab5399a
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kube-state-metrics
      ports:
      - containerPort: 8080
        name: k8s-objects
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: ksm-metrics-collector
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/ksm-metrics-collector-config-data.textproto
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: ksm-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: kube-state-metrics-0
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    subdomain: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - configMap:
        defaultMode: 420
        items:
        - key: ksm-metrics-collector-config-data
          path: ksm-metrics-collector-config-data.textproto
        name: ksm-metrics-collector-config-map
      name: ksm-metrics-collector-config-map-vol
    - configMap:
        defaultMode: 420
        items:
        - key: custom-resource-state-config.yaml
          path: custom-resource-state-config.yaml
        name: kube-state-metrics-cr-metrics
      name: kube-state-metrics-cr-metrics-vol
    - name: kube-api-access-qt7fw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://82fd5041e653aae359ff043dcc6ed14533ea7b17773db7040064eb5e5c7c327a
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: ksm-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:15Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: ksm-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 100m
        memory: 100Mi
      containerID: containerd://47ad450c595b30dd349ca9cc994e0484c5a059a83df757a89f144fe7501ba39d
      image: sha256:d3aa4eb44e08a97dbe91e633106aa567ca2fdb5d68b3370d4a6eb6692271cf5b
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics@sha256:85ee4852b28396e773f56f16afddeefa1e6e751d69b6721642c46c03eab5399a
      lastState: {}
      name: kube-state-metrics
      ready: true
      resources:
        limits:
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:15Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: kube-state-metrics-cr-metrics-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://06d7693e3bb9c27490139d29754777fa12596f422d20df9d7c42b14e8efbdf0c
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://06d7693e3bb9c27490139d29754777fa12596f422d20df9d7c42b14e8efbdf0c
          exitCode: 0
          finishedAt: "2025-10-08T17:32:13Z"
          reason: Completed
          startedAt: "2025-10-08T17:32:13Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7fw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.1.28
    podIPs:
    - ip: 10.72.1.28
    qosClass: Burstable
    startTime: "2025-10-08T17:32:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
    creationTimestamp: "2025-10-01T19:08:01Z"
    generateName: collector-
    generation: 1
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.4
      controller-revision-hash: 69bbdb4fcc
      pod-template-generation: "1"
    name: collector-bnffq
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: db927574-301b-498a-a94a-36971401f267
    resourceVersion: "1759345718744303006"
    uid: 74b96ba7-c75f-4878-9ffa-18351a467675
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      - name: GCE_METADATA_HOST
        value: 169.254.169.254
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-s69kh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:07Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 4M
      containerID: containerd://ef4a80b490e0a60bef7d27b6a6b78ac19fe1d328f48a84b234642aec854e5649
      image: sha256:f8a081f430fdd094de5513b63b22477c5ac35efb0508d3bed40232c4cb2b480c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        limits:
          memory: 31250Ki
        requests:
          cpu: 1m
          memory: 4M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:37Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 4m
        memory: 32M
      containerID: containerd://98c9897e088d28c655c898c3cdd1d0cbbae2da69134146f2e3df0ad62d75b228
      image: sha256:d17d7c93e5dd67d59402e791e14e34a54e2c37c234513ee82404c47373b6319c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      lastState: {}
      name: prometheus
      ready: true
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:18Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    initContainerStatuses:
    - containerID: containerd://0d606f0d908ba0a0be9aa486f57907e2dbeb63c74bfd8cecfb8263b92b97c246
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: config-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0d606f0d908ba0a0be9aa486f57907e2dbeb63c74bfd8cecfb8263b92b97c246
          exitCode: 0
          finishedAt: "2025-10-01T19:08:07Z"
          reason: Completed
          startedAt: "2025-10-01T19:08:07Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://15d0045f4aef547514fd6b0ebbd5e954b385dcdf96c941181b5d64283cfb9813
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://15d0045f4aef547514fd6b0ebbd5e954b385dcdf96c941181b5d64283cfb9813
          exitCode: 0
          finishedAt: "2025-10-01T19:08:09Z"
          reason: Completed
          startedAt: "2025-10-01T19:08:09Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s69kh
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.0.2
    podIPs:
    - ip: 10.72.0.2
    qosClass: Burstable
    startTime: "2025-10-01T19:08:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
    creationTimestamp: "2025-10-01T19:17:12Z"
    generateName: collector-
    generation: 1
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.4
      controller-revision-hash: 69bbdb4fcc
      pod-template-generation: "1"
    name: collector-h8grb
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: db927574-301b-498a-a94a-36971401f267
    resourceVersion: "1759346276166239003"
    uid: 2a7984e7-28e0-47fc-b45f-44e49aaf3269
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      - name: GCE_METADATA_HOST
        value: 169.254.169.254
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-6n5h9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 4M
      containerID: containerd://165a11875413791d83e09e1f54663575e8fab3d8e9b2a502fd39e90f64b2054c
      image: sha256:f8a081f430fdd094de5513b63b22477c5ac35efb0508d3bed40232c4cb2b480c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        limits:
          memory: 31250Ki
        requests:
          cpu: 1m
          memory: 4M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:55Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 4m
        memory: 32M
      containerID: containerd://550cc58d52ea44333ccb9786e6f5cc754e020940919b1b3b3e57083294097263
      image: sha256:d17d7c93e5dd67d59402e791e14e34a54e2c37c234513ee82404c47373b6319c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      lastState: {}
      name: prometheus
      ready: true
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:42Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://69daf9a69b4650added3676b62f19b01545e2e8c87488cf692bcddb43ed11a86
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: config-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://69daf9a69b4650added3676b62f19b01545e2e8c87488cf692bcddb43ed11a86
          exitCode: 0
          finishedAt: "2025-10-01T19:17:19Z"
          reason: Completed
          startedAt: "2025-10-01T19:17:19Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://26c92f3ed121c8d3f0668cc738795d907a1de3347d65f4351d8d569d67ffdc50
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://26c92f3ed121c8d3f0668cc738795d907a1de3347d65f4351d8d569d67ffdc50
          exitCode: 0
          finishedAt: "2025-10-01T19:17:21Z"
          reason: Completed
          startedAt: "2025-10-01T19:17:21Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6n5h9
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.1.2
    podIPs:
    - ip: 10.72.1.2
    qosClass: Burstable
    startTime: "2025-10-01T19:17:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
    creationTimestamp: "2025-10-01T19:11:41Z"
    generateName: collector-
    generation: 1
    labels:
      app: managed-prometheus-collector
      app.kubernetes.io/name: collector
      app.kubernetes.io/version: 0.15.4
      controller-revision-hash: 69bbdb4fcc
      pod-template-generation: "1"
    name: collector-m2t6m
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: collector
      uid: db927574-301b-498a-a94a-36971401f267
    resourceVersion: "1759345945834143017"
    uid: b9dd1265-5be1-4a36-985f-ef099a65139e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/prometheus/config_out/config.yaml
      - --enable-feature=exemplar-storage
      - --enable-feature=google-kubernetes-secret-provider
      - --storage.tsdb.path=/prometheus/data
      - --storage.tsdb.no-lockfile
      - --gmp.storage.delete-data-on-start
      - --storage.tsdb.retention.time=30m
      - --storage.tsdb.wal-compression
      - --storage.tsdb.min-block-duration=10m
      - --storage.tsdb.max-block-duration=10m
      - --web.listen-address=:19090
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --export.user-agent-mode=gke
      - --log.format=json
      env:
      - name: GOGC
        value: "25"
      - name: GCE_METADATA_HOST
        value: 169.254.169.254
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/healthy
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus
      ports:
      - containerPort: 19090
        name: prom-metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /-/ready
          port: 19090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
    - args:
      - --config-file=/prometheus/config/config.yaml
      - --config-file-output=/prometheus/config_out/config.yaml
      - --reload-url=http://127.0.0.1:19090/-/reload
      - --ready-url=http://127.0.0.1:19090/-/ready
      - --listen-address=:19091
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      imagePullPolicy: IfNotPresent
      name: config-reloader
      ports:
      - containerPort: 19091
        name: cfg-rel-metrics
        protocol: TCP
      resources:
        limits:
          memory: 32M
        requests:
          cpu: 1m
          memory: 4M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - touch /prometheus/config_out/config.yaml
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: config-init
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: collector
    serviceAccountName: collector
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - emptyDir: {}
      name: storage
    - configMap:
        defaultMode: 420
        name: collector
      name: config
    - emptyDir: {}
      name: config-out
    - name: collection-secret
      secret:
        defaultMode: 420
        secretName: collection
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-696gc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:48Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 4M
      containerID: containerd://83af09a3d7dee6d160e5db2361664860cf7e56b27faf4343540abb0187c4cdf8
      image: sha256:f8a081f430fdd094de5513b63b22477c5ac35efb0508d3bed40232c4cb2b480c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
      lastState: {}
      name: config-reloader
      ready: true
      resources:
        limits:
          memory: 31250Ki
        requests:
          cpu: 1m
          memory: 4M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:25Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config
        name: config
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 4m
        memory: 32M
      containerID: containerd://ee2d5c12e7db3752878d97ccfb7c77d96e5ac715b75c77cb754c9f4518523970
      image: sha256:d17d7c93e5dd67d59402e791e14e34a54e2c37c234513ee82404c47373b6319c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
      lastState: {}
      name: prometheus
      ready: true
      resources:
        limits:
          memory: 3G
        requests:
          cpu: 4m
          memory: 32M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:13Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/data
        name: storage
      - mountPath: /prometheus/config_out
        name: config-out
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/secrets
        name: collection-secret
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    initContainerStatuses:
    - containerID: containerd://1c222f3a7dc6eb71c82902ccd4f19589ddce14788ad94f51f46004a47f311a93
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: config-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1c222f3a7dc6eb71c82902ccd4f19589ddce14788ad94f51f46004a47f311a93
          exitCode: 0
          finishedAt: "2025-10-01T19:11:48Z"
          reason: Completed
          startedAt: "2025-10-01T19:11:48Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /prometheus/config_out
        name: config-out
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://b0063efef5a1e69224abc7f857dfb33eb7058aa963e2c33cd0c0fe92770932e4
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b0063efef5a1e69224abc7f857dfb33eb7058aa963e2c33cd0c0fe92770932e4
          exitCode: 0
          finishedAt: "2025-10-01T19:11:50Z"
          reason: Completed
          startedAt: "2025-10-01T19:11:50Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-696gc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.5.2
    podIPs:
    - ip: 10.72.5.2
    qosClass: Burstable
    startTime: "2025-10-01T19:11:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
    creationTimestamp: "2025-10-16T13:21:16Z"
    generateName: gmp-operator-689bc8477d-
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 689bc8477d
    name: gmp-operator-689bc8477d-xl2l8
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: gmp-operator-689bc8477d
      uid: ccf03bd5-631b-4d03-8433-4fcf91bc036c
    resourceVersion: "1760620881217231014"
    uid: 6a8b2032-eebc-4ce5-a950-1f1276c0919c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - arm64
              - amd64
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    automountServiceAccountToken: true
    containers:
    - args:
      - --operator-namespace=gmp-system
      - --public-namespace=gmp-public
      - --webhook-addr=:10250
      - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIakNDQW9hZ0F3SUJBZ0lRUFZaK2kzeTJQQ3FVbVlCNkxHcjkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM1pUVXhaVGxtTnkwME0yVTJMVFF6WkdFdE9UTTJNaTA0TW1ZNU9USTNaR0UwT1RVdwpIaGNOTWpVeE1ERTJNVE14TURBeFdoY05NekF4TURFMU1UTXhNakF4V2pBME1USXdNQVlEVlFRREV5bG5iWEF0CmIzQmxjbUYwYjNJdVoyMXdMWE41YzNSbGJTNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFJM0lzWEM0VnlXQ3RtaU9TemVZVTNKaFo0U25aZ1BmdU1tOQpQenpKTGJzYUpRVHVCUUczUm1BN0YwK0RKVXY1cHVzOFBEVWpxUWZFeWVSRUlrUjFOUndEc0xXQnVYTzZTRkFhCkhIajdoY0lJQlhtMnpXTHlOWHd6am8veldXcXdKSVQxelBIMVVWQlFxZWxVdmlKNHZpVmdSU2pKN1dvWlpHb0EKNU5HUWtLVmJZVXMxcXNjUWRPMXI3Mzh5ZmFSL1QrNWtqNWNIQjNxUFJZTmRDTDI5SGZuQVVVcUxrWTZ2cTlBWQpXOUtBV1pzVDI2alltS3BkREdFcHhBRGhwcFNRSjN4ejVWV2JnbXhZWENYODBRZDJQdU5ueHlBRGFYR0llZ1NuCklvdjhVaE8rQnkwMXczeGp1QnBrSnFac2V4SjJwRkZOY0pUMWw2TUVpTG1SZi9MeFczTUNBd0VBQWFPQnNEQ0IKclRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVWbkdyOWlrTEtycUhzenYvVXZjSkFYdFhvYlF3ClRRWURWUjBSQkVZd1JJSU1aMjF3TFc5d1pYSmhkRzl5Z2hkbmJYQXRiM0JsY21GMGIzSXVaMjF3TFhONWMzUmwKYllJYloyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpnUUI0KzdFSlZxYzBzUWFCSEJ2RlRNRlNHNHh6cXhqaVJ4YlJhZlF0S1FDc3dsMG9INTdxS3M5NzNyN3BBaS9HCnVTOEtZRDc5RS92aHBlVHhYUkpVNTNycXNZVFpKbHdnTjZEaW1ScTdVeW56eEN0dnlmMlpwLzZVTFg5U095ZlQKbmtwcXVPTUVCdUVzOFZIR0p5MjZKbncrb2E3Y1ljY0NPOGd4M1RVMnQ4dzU2OGdsd0Rla3hvdzFMbEdqS1pyaQpJWk1ibUd5dm0zb3VQWGFIRTBhYkwxM0RuNFJnRTg4VDVnbUxMcER3ekwwVFVERGhhcVdDbks5QkZiOHFsNlR2Cm00THhjK0VlVG4zbEJuTEIyeFcraWdyNjJRdTY0UWlLSEF5YjB0VE84RzZSd01OSWFNWnlrODBQWDdCSlFhMkcKcllWdnNNdHE4NURSUEpMaENzRGM5TFF4TEZZdXJrZGluemtVV3FoY3VyWC93NmQyblJORUZNMEM0eDA0UUlXbgpjaEQ4bTFuMG1tSjlOaGJ6OGJ5eVZCVG1MWFZRVXNaQlNKZVpCMDdERVRXQ1JIMVZTSmQvZmlENlREOG9KY2VRCmdBK2dBL0prSjJQZjZiTDM1RnJyckNxUGNlTDZMQ2RTaVNaUFdUangxM2FvVk9pMmp1bmpFVWFpQW9nOEdnS3IKZW1NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBamNpeGNMaFhKWUsyYUk1TE41aFRjbUZuaEtkbUE5KzR5YjAvUE1rdHV4b2xCTzRGCkFiZEdZRHNYVDRNbFMvbW02enc4TlNPcEI4VEo1RVFpUkhVMUhBT3d0WUc1YzdwSVVCb2NlUHVGd2dnRmViYk4KWXZJMWZET09qL05aYXJBa2hQWE04ZlZSVUZDcDZWUytJbmkrSldCRktNbnRhaGxrYWdEazBaQ1FwVnRoU3pXcQp4eEIwN1d2dmZ6SjlwSDlQN21TUGx3Y0hlbzlGZzEwSXZiMGQrY0JSU291UmpxK3IwQmhiMG9CWm14UGJxTmlZCnFsME1ZU25FQU9HbWxKQW5mSFBsVlp1Q2JGaGNKZnpSQjNZKzQyZkhJQU5wY1loNkJLY2lpL3hTRTc0SExUWEQKZkdPNEdtUW1wbXg3RW5ha1VVMXdsUFdYb3dTSXVaRi84dkZiY3dJREFRQUJBb0lCQUExWW0rTkpadUtnQ0QyVgpUMTAvV0hPRzJiQ3g5VGRlSXMzU281WThOYkxNQmpvTmtha1VzR28waGNBMVR4aDB1cEtnQytiUW9ZT2FzWXBzCkkzR2dPc3lWU0ZmOWl4QnFzNDNldDFsb0M3STFBUmJ3N3lwbU5FU3BzYnk1SW15WmdnYUdBTEd4N3VLSmhVVHkKZGlkV2lFZUtaVmd1a2N1UDhsVE1HcjNqUnNwWnlNekkwVmU3TGNFSUFhY0JoR01odGU2YUhlL0p4Q3NvRVNEWgpvUDZIMkRjKzlXeVNZcFRPbllrRStWdDRPaUdadEJKSW9sQnJNaW9sZDRsUEhqSzllT2hOdERyZkhrVW1uSnlECnNJQ0gxZXpETXlkN0tXVXNMd3FSdTZoeGZITytMTUdOajVTdEFFL0VBKzZ6UjJXS1pCclhHR1ZsbXhTWnBGOGsKNmxLVWtNRUNnWUVBeGhUYVFwYkUwMWdzVmpBL1FMcndXNkQ4MVU4Vkd5NlRSd20wSjZaS09GODZsN1dnWlZHUwpXcFlMN1RPdGR3dGw3UEhNY1p6UzQ5eWQ5SndJMUhjMzBEbDB3K0VzdWl4UWVrS1RYMUszdlVMT1E0RWkvS051CjNvb0kvWnFWU2ZHYW5VUVRGb1AxNk03ZUlWVTdrMFdndEpwMFRUVG1HQnVKZXZ4U0FPekNwRk1DZ1lFQXR6M0MKY05iRFZRMWxBR054YXAyeVJDdzBkSnd5cVZLU25va21BR3B6ZlFaK0Q4QXEwdmdOMHd3TVFCL2JreG1nQUxuQgp6aDd5bFlTdm1DdHRwd0VaUjJDWnhWam52aEp0K2hPSmNEUDJZby9wa1I3aVlXdTU1NDRCc0NrcloxeC83dUdICk9DVHVrL1o3SG85RFU1UFRsZkhrS3JNdU9tMUQvTHZvZjFYbmlHRUNnWUVBdlBtUDhROWQ0RE95dU5kMndRNlgKMlJNUm8zKzdKeCtjS3AyN1hraHJiclNMZGNrMXFQUFZxTTZWdWtzZkp2K2MwaDB0YXdhdXUrenlWVGUzeE51bwpSK05JM3Nlb29FVSswaVZKN0J0Q2FER2dEdzdZamladDA2bmxRZTJFbC9NRUN4MnpDRHdGRTRLb3NTeGJsZmxMCmhJSUdpdEg0NHU4Q2ptN0MzVmNEcXprQ2dZQkphV1RNOEQyeGhYeEJlNVdrc1NrS1J1dDlERmIvbnlVK2ZwUEsKOXRydDYvdjFNM2Ywcll4Y1VTZFhTV3dlc3RWM2RQUkFNQVhnQVJpWVRrM1A2cERHRjkyRFF1c1ZLeTBFVTI5cwpsR1RSZC9hTFBXUlV3MlBuY08wY05tSTlOc0hLWW5CWi9mSFhOWmg5MWNlVFpGWVFiS2lNc3R5Q2ErUWhET2RJCm5KSDJBUUtCZ0g0QXlRYnY1NnRyZVhMNVdXVkJYRVY3bUFNa0JnNjhWZUo0bG15NzN0eUFxcm5YWmFTeDBpNkoKWS8wc0lrYnNITTRjVzc0YzFZNkwxdCtOU0JWVFJQZUU0NmlOSDBzakpXU3orYWpmYVhmY1A2QUcxVm1qdExjbQo2VVVlZjFzLzVzOTVEalBXODhXTGMxZjJXWXk1WkFqR3R3VWozejhVNkdIV1Ywc0lveUh4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
      - --project-id=pixelated-463209-e5
      - --location=us-east1
      - --cluster=pixelcluster
      env:
      - name: GCE_METADATA_HOST
        value: 169.254.169.254
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: operator
      ports:
      - containerPort: 10250
        name: web
        protocol: TCP
      - containerPort: 18080
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 18081
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 2G
        requests:
          cpu: 1m
          memory: 16M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        privileged: false
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pr4d4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: gmp-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: operator
    serviceAccountName: operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: amd64
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: certs
    - name: kube-api-access-pr4d4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 1m
        memory: 16M
      containerID: containerd://f387bf23979f79d735d630c96941400045be09d06f44cbeba47ea56c45339a6d
      image: sha256:51e8ff58d0d2fcf44b8190c8bd4a48c97d522380623ae93b241fa250327d939f
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
      lastState: {}
      name: operator
      ready: true
      resources:
        limits:
          memory: 1953125Ki
        requests:
          cpu: 1m
          memory: 16M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:20Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /etc/tls/private
        name: certs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pr4d4
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.22
    podIPs:
    - ip: 10.72.5.22
    qosClass: Burstable
    startTime: "2025-10-16T13:21:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: event-exporter
      components.gke.io/component-version: 1.33.9-gke.0
    creationTimestamp: "2025-10-01T19:11:50Z"
    generateName: event-exporter-gke-cbf579745-
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: cbf579745
      version: v0.4.0
    name: event-exporter-gke-cbf579745-5mr7t
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: event-exporter-gke-cbf579745
      uid: a4b6fc80-2af1-43b3-ba17-9c3261f79214
    resourceVersion: "1759345948034927022"
    uid: c2327d97-8088-4319-bb67-4d0097ccb159
  spec:
    containers:
    - command:
      - /event-exporter
      - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
      - -prometheus-endpoint=:8080
      - -enable-pod-owner-label=true
      - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
      imagePullPolicy: IfNotPresent
      name: event-exporter
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
    - command:
      - /monitor
      - --api-override=https://monitoring.googleapis.com/
      - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
      - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
      - --pod-id=$(POD_NAME)
      - --namespace-id=$(POD_NAMESPACE)
      - --node-name=$(NODE_NAME)
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
      imagePullPolicy: IfNotPresent
      name: prometheus-to-sd-exporter
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: event-exporter-sa
    serviceAccountName: event-exporter-sa
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: Directory
      name: ssl-certs
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-6vnjc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 3m
        memory: 100Mi
      containerID: containerd://29ac13c0ab604888f6be6f94f29fb4d5a4d997aff1536eb232a306a6bbf155cd
      image: sha256:446cd422360ffa39fd12ba5462bfe4085ad59c6de92520f2a7e2b40b718d8ac3
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
      lastState: {}
      name: event-exporter
      ready: true
      resources:
        requests:
          cpu: 3m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:19Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://bf92bb74463941f1d3ec2701bc7373be907bfb543906e428b65b4efca2fc2026
      image: sha256:113f994e40b0e2e5c648610729487c14cf3814c08108d93c1703f38a942fef30
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
      lastState: {}
      name: prometheus-to-sd-exporter
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:26Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    initContainerStatuses:
    - containerID: containerd://4d0973aeaa5c56051b2118712c6e3fd8917c51a318caa933456f310433c868a8
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://4d0973aeaa5c56051b2118712c6e3fd8917c51a318caa933456f310433c868a8
          exitCode: 0
          finishedAt: "2025-10-01T19:11:53Z"
          reason: Completed
          startedAt: "2025-10-01T19:11:53Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6vnjc
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.5.8
    podIPs:
    - ip: 10.72.5.8
    qosClass: Burstable
    startTime: "2025-10-01T19:11:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.33.6-gke.0
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-10-01T19:08:01Z"
    generateName: fluentbit-gke-
    generation: 1
    labels:
      component: fluentbit-gke
      controller-revision-hash: 5f66cb97d6
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "1"
    name: fluentbit-gke-4pxtt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke
      uid: 9c42f0d8-85ab-4bb8-8df0-16bd843300ae
    resourceVersion: "1759345721734511005"
    uid: f59693ae-20fb-4292-a206-ba2fd402d9b2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    containers:
    - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=2
      - --max-log-connections=2
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
    - env:
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-gpfz7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://e09f8873c6667ce05324f2e0b637637beb1a8f17d8a73de0aa9825abb0bba4c9
      image: sha256:fbb57da790096c4b53b9662c60eb8842adcd329247dbb7b0bced3569c0f927f3
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      lastState: {}
      name: fluentbit
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:25Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://c57677461605fcc500d643a69dc0266386194bd3630979ce19e28c8b142ef42d
      image: sha256:4e2ee5c133af291b8551e51c71cab8947086adf99923cafcfc20e0cce1065e9e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      lastState: {}
      name: fluentbit-gke
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:39Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://2fea91b391671858fd4eb9c438f9f5e403041becd18712dfc7630dcdb95b81dd
      image: sha256:8994440bb2d1c2e7b00555512c6c6bd3a8a4e428db328a9fd87a76b86c22938d
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:41Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    initContainerStatuses:
    - containerID: containerd://32663260cf3b36ac808c9ea06d749e78ccba83c93cf1fe9f81ff9e0acca6c21f
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://32663260cf3b36ac808c9ea06d749e78ccba83c93cf1fe9f81ff9e0acca6c21f
          exitCode: 0
          finishedAt: "2025-10-01T19:08:05Z"
          reason: Completed
          startedAt: "2025-10-01T19:08:05Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://5b9909ebd03938c0c3363ce10082a42ed419647d3610101578139e50de219340
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5b9909ebd03938c0c3363ce10082a42ed419647d3610101578139e50de219340
          exitCode: 0
          finishedAt: "2025-10-01T19:08:09Z"
          reason: Completed
          startedAt: "2025-10-01T19:08:09Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gpfz7
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.21
    podIPs:
    - ip: 10.142.0.21
    qosClass: Burstable
    startTime: "2025-10-01T19:08:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.33.6-gke.0
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-10-01T19:17:12Z"
    generateName: fluentbit-gke-
    generation: 1
    labels:
      component: fluentbit-gke
      controller-revision-hash: 5f66cb97d6
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "1"
    name: fluentbit-gke-bkf6n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke
      uid: 9c42f0d8-85ab-4bb8-8df0-16bd843300ae
    resourceVersion: "1759346278065279011"
    uid: 59fb1035-19c8-4942-8912-ff3b43c32932
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    containers:
    - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=2
      - --max-log-connections=2
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
    - env:
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-phz4h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:16Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://6eb31fae3f4dc156e82fc0a1fdbce1b2b15a61c930b507ccca048fad15b27cee
      image: sha256:fbb57da790096c4b53b9662c60eb8842adcd329247dbb7b0bced3569c0f927f3
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      lastState: {}
      name: fluentbit
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:36Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://01cea6d9e3f126bc301b0161b8aefb73c7289f15c3bfa49ff587a12ed0b2d26c
      image: sha256:4e2ee5c133af291b8551e51c71cab8947086adf99923cafcfc20e0cce1065e9e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      lastState: {}
      name: fluentbit-gke
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:53Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://807aa2cbd1df48a2c0d4197896d0bf2d1008f6ddc906b65d60f0e7e86032ceca
      image: sha256:8994440bb2d1c2e7b00555512c6c6bd3a8a4e428db328a9fd87a76b86c22938d
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:57Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://5eec6d8a7e268b10d2a6caf7710109a0f3c09336504f0b9b04bbe9730ecc39be
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://5eec6d8a7e268b10d2a6caf7710109a0f3c09336504f0b9b04bbe9730ecc39be
          exitCode: 0
          finishedAt: "2025-10-01T19:17:15Z"
          reason: Completed
          startedAt: "2025-10-01T19:17:15Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://cdf0fef094908e84506139cf31a72f68fd715831108bef3bdd1cdc9316565dc8
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://cdf0fef094908e84506139cf31a72f68fd715831108bef3bdd1cdc9316565dc8
          exitCode: 0
          finishedAt: "2025-10-01T19:17:19Z"
          reason: Completed
          startedAt: "2025-10-01T19:17:19Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-phz4h
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.23
    podIPs:
    - ip: 10.142.0.23
    qosClass: Burstable
    startTime: "2025-10-01T19:17:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      EnableNodeJournal: "false"
      EnablePodSecurityPolicy: "false"
      SystemOnlyLogging: "false"
      components.gke.io/component-name: fluentbit
      components.gke.io/component-version: 1.33.6-gke.0
      monitoring.gke.io/path: /api/v1/metrics/prometheus
    creationTimestamp: "2025-10-01T19:11:41Z"
    generateName: fluentbit-gke-
    generation: 1
    labels:
      component: fluentbit-gke
      controller-revision-hash: 5f66cb97d6
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "1"
    name: fluentbit-gke-m8vgn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentbit-gke
      uid: 9c42f0d8-85ab-4bb8-8df0-16bd843300ae
    resourceVersion: "1759345948103743004"
    uid: 5b8135ef-ffc7-4292-b42a-a727475a1b18
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    containers:
    - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 2020
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 5
      name: fluentbit
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
    - command:
      - /fluent-bit-gke-exporter
      - --kubernetes-separator=_
      - --stackdriver-resource-model=k8s
      - --enable-pod-label-discovery
      - --pod-label-dot-replacement=_
      - --split-stdout-stderr
      - --stackdriver-timeout=60s
      - --max-inactivity-duration=600s
      - --stackdriver-address=logging.googleapis.com:443
      - --pool-size=2
      - --max-log-connections=2
      - --logtostderr
      - --node-name=$(NODE_NAME)
      - --pod-cache-size=1024
      - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 2021
          scheme: HTTP
        initialDelaySeconds: 120
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: fluentbit-gke
      ports:
      - containerPort: 2021
        hostPort: 2021
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
    - env:
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/fluentbit-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: fluentbit-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      imagePullPolicy: IfNotPresent
      name: fluentbit-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |-
        set -e;
        if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
          exit 0;
        fi;
        if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
          rm -rf /var/lib/google-fluentbit/pos-files.staged;
          rm -rf /var/lib/google-fluentbit/pos-files;
          cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
          mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
          rm -rf /var/run/google-fluentbit/pos-files;
        fi
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      imagePullPolicy: IfNotPresent
      name: fluentbit-gke-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: fluentbit-gke
    serviceAccountName: fluentbit-gke
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - hostPath:
        path: /var/run/google-fluentbit
        type: DirectoryOrCreate
      name: varrungooglefluentbit
    - hostPath:
        path: /var/log
        type: Directory
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: Directory
      name: varlibdockercontainers
    - hostPath:
        path: /var/lib/google-fluentbit
        type: DirectoryOrCreate
      name: varlibgooglefluentbit
    - hostPath:
        path: /var/lib/google-fluentbit/pos-files
        type: DirectoryOrCreate
      name: varlibgooglefluentbitpos
    - configMap:
        defaultMode: 420
        name: fluentbit-gke-config-v1.4.0
      name: config-volume
    - configMap:
        defaultMode: 420
        items:
        - key: fluentbit-metrics-collector-config-data
          path: fluentbit-metrics-collector-config-data.textproto
        name: fluentbit-metrics-collector-config-map
      name: fluentbit-metrics-collector-config-map-vol
    - name: kube-api-access-s94gd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://60804f9ae5ef7e9fa815dfa7c77440c5832ac3d8f7f2dd8393815181ef849d5a
      image: sha256:fbb57da790096c4b53b9662c60eb8842adcd329247dbb7b0bced3569c0f927f3
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
      lastState: {}
      name: fluentbit
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:01Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/lib/google-fluentbit/pos-files
        name: varlibgooglefluentbitpos
      - mountPath: /fluent-bit/etc/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 50m
        memory: 100Mi
      containerID: containerd://1da1667e1b7a61b5815f9bd78f5ab076654c911d37741f07d5af404b9042e619
      image: sha256:4e2ee5c133af291b8551e51c71cab8947086adf99923cafcfc20e0cce1065e9e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
      lastState: {}
      name: fluentbit-gke
      ready: true
      resources:
        limits:
          memory: 250Mi
        requests:
          cpu: 50m
          memory: 100Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:24Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://f364d39c1f6141ff93ef9dae0565ac1b63100d7ebf7f08228d152c7fc07cdf68
      image: sha256:8994440bb2d1c2e7b00555512c6c6bd3a8a4e428db328a9fd87a76b86c22938d
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
      lastState: {}
      name: fluentbit-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 65Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:27Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /conf
        name: fluentbit-metrics-collector-config-map-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    initContainerStatuses:
    - containerID: containerd://22a7805ea676a480342b0cf5b735ed012335e6dd90cf0fe8b0aff3949c23589e
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://22a7805ea676a480342b0cf5b735ed012335e6dd90cf0fe8b0aff3949c23589e
          exitCode: 0
          finishedAt: "2025-10-01T19:11:45Z"
          reason: Completed
          startedAt: "2025-10-01T19:11:45Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
        recursiveReadOnly: Disabled
    - containerID: containerd://83f818ab58141866d89e735b0a80a62850cd46fc9597a0148bac4650c962086d
      image: sha256:26f589b13a33794b4fd48445f1bf4d111b7b2200aca281ff858721fc6e1b1133
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
      lastState: {}
      name: fluentbit-gke-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://83f818ab58141866d89e735b0a80a62850cd46fc9597a0148bac4650c962086d
          exitCode: 0
          finishedAt: "2025-10-01T19:11:48Z"
          reason: Completed
          startedAt: "2025-10-01T19:11:48Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/google-fluentbit
        name: varlibgooglefluentbit
      - mountPath: /var/run/google-fluentbit
        name: varrungooglefluentbit
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s94gd
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.22
    podIPs:
    - ip: 10.142.0.22
    qosClass: Burstable
    startTime: "2025-10-01T19:11:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.133.22-gke.0
      configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
    creationTimestamp: "2025-10-08T17:32:27Z"
    generateName: gke-metrics-agent-
    generation: 1
    labels:
      component: gke-metrics-agent
      controller-revision-hash: f9bf988b
      k8s-app: gke-metrics-agent
      pod-template-generation: "2"
    name: gke-metrics-agent-8jvqc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 6b387b22-221b-4e50-882e-f81dc1528ed1
    resourceVersion: "1759944750265647018"
    uid: 962d42cd-153d-4a4d-a487-cbf0a7f38fb2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    containers:
    - command:
      - /otelsvc
      - --config=/conf/gke-metrics-agent-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8200
      - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
      - --enable-uas-sink=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: gke-metrics-agent
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: WINDOWS_JOB_ACTION
        value: drop
      - name: LINUX_JOB_ACTION
        value: keep
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8201
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metrics-agent
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: gke-metrics-agent-config
          path: gke-metrics-agent-config.yaml
        name: gke-metrics-agent-conf
      name: gke-metrics-agent-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        - key: kubelet-resource-metrics-collector-config-data
          path: kubelet-resource-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-x2spq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 6m
        memory: 50Mi
      containerID: containerd://f2fffa0072a68836a2a4dee2f60f8a822af9a2bee60c6ac30c3e6739e1d13e26
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: core-metrics-exporter
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:29Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 50Mi
      containerID: containerd://b9472822dc451c130c23c15d4e883534762184d5ff3679ccbe6380112b62c822
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: gke-metrics-agent
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:29Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://9a5202aa20c63bdb4b1fd8b5bcccef96ce6b0367fbd87b74017604685654d604
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:30Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    initContainerStatuses:
    - containerID: containerd://a9966e198aa385273db45fc25315917dd861093ec6131a5a73b188543a70c535
      image: sha256:b0bb950012f9e98eb20d0324b07fd0104999d7ed24f86a4ec67b96021502f42e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a9966e198aa385273db45fc25315917dd861093ec6131a5a73b188543a70c535
          exitCode: 0
          finishedAt: "2025-10-08T17:32:28Z"
          reason: Completed
          startedAt: "2025-10-08T17:32:28Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x2spq
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.21
    podIPs:
    - ip: 10.142.0.21
    qosClass: Burstable
    startTime: "2025-10-08T17:32:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.133.22-gke.0
      configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
    creationTimestamp: "2025-10-08T17:32:24Z"
    generateName: gke-metrics-agent-
    generation: 1
    labels:
      component: gke-metrics-agent
      controller-revision-hash: f9bf988b
      k8s-app: gke-metrics-agent
      pod-template-generation: "2"
    name: gke-metrics-agent-qzbhf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 6b387b22-221b-4e50-882e-f81dc1528ed1
    resourceVersion: "1759944746582847008"
    uid: daeb09e5-7201-423e-895e-beeb85a44806
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    containers:
    - command:
      - /otelsvc
      - --config=/conf/gke-metrics-agent-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8200
      - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
      - --enable-uas-sink=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: gke-metrics-agent
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: WINDOWS_JOB_ACTION
        value: drop
      - name: LINUX_JOB_ACTION
        value: keep
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8201
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metrics-agent
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: gke-metrics-agent-config
          path: gke-metrics-agent-config.yaml
        name: gke-metrics-agent-conf
      name: gke-metrics-agent-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        - key: kubelet-resource-metrics-collector-config-data
          path: kubelet-resource-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-6qnnw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 6m
        memory: 50Mi
      containerID: containerd://5323dd87d380545f8a1415291c8c4bd6d31b202cc1c64a2d3c866cfd969d7f9d
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: core-metrics-exporter
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:25Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 50Mi
      containerID: containerd://fde6fa7a2de81074133b3d61ffbf6f91212a92c5a46a2ed2f23cf269111f725d
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: gke-metrics-agent
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:25Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://089437616acdba3f32ba407a6f9c5d020f3a65733ac563bbb059a384912bfd09
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:26Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://c372aacab030702f361efba14f913fa0faf19c639fb51209900afecacceda937
      image: sha256:b0bb950012f9e98eb20d0324b07fd0104999d7ed24f86a4ec67b96021502f42e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://c372aacab030702f361efba14f913fa0faf19c639fb51209900afecacceda937
          exitCode: 0
          finishedAt: "2025-10-08T17:32:25Z"
          reason: Completed
          startedAt: "2025-10-08T17:32:25Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6qnnw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.23
    podIPs:
    - ip: 10.142.0.23
    qosClass: Burstable
    startTime: "2025-10-08T17:32:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: gke-metrics-agent
      components.gke.io/component-version: 2.133.22-gke.0
      configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
    creationTimestamp: "2025-10-08T17:32:19Z"
    generateName: gke-metrics-agent-
    generation: 1
    labels:
      component: gke-metrics-agent
      controller-revision-hash: f9bf988b
      k8s-app: gke-metrics-agent
      pod-template-generation: "2"
    name: gke-metrics-agent-rsm5h
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: gke-metrics-agent
      uid: 6b387b22-221b-4e50-882e-f81dc1528ed1
    resourceVersion: "1759944743560863011"
    uid: 7e5d964e-c159-4097-9d69-b9bb28c8eb23
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    containers:
    - command:
      - /otelsvc
      - --config=/conf/gke-metrics-agent-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8200
      - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
      - --enable-uas-sink=true
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: gke-metrics-agent
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: WINDOWS_JOB_ACTION
        value: drop
      - name: LINUX_JOB_ACTION
        value: keep
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8201
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: gke-metrics-agent
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
    - command:
      - /otelsvc
      - --config=/conf/core-metrics-exporter-config.yaml
      - --metrics-prefix=
      - --log-profile=prod
      - --log-format=json
      - --metrics-addr=localhost:8202
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: GKE_COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: GKE_COMPONENT_NAME
        value: core-metrics-exporter
      - name: GOMAXPROCS
        value: "1"
      - name: GODEBUG
        value: memprofilerate=0
      - name: ARG1
        value: ${1}
      - name: ARG2
        value: ${2}
      - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
        value: "true"
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /
          port: 8203
          scheme: HTTP
        initialDelaySeconds: 50
        periodSeconds: 50
        successThreshold: 1
        timeoutSeconds: 3
      name: core-metrics-exporter
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: prometheus-metrics-collector
      - name: KUBELET_HOST
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: HOST_LOOPBACK
        value: 127.0.0.1
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: prometheus-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: gke-metrics-agent
    serviceAccountName: gke-metrics-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: gke-metrics-agent-config
          path: gke-metrics-agent-config.yaml
        name: gke-metrics-agent-conf
      name: gke-metrics-agent-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: core-metrics-exporter-config
          path: core-metrics-exporter-config.yaml
        name: core-metrics-exporter-conf
      name: core-metrics-exporter-config-vol
    - configMap:
        defaultMode: 420
        items:
        - key: kubelet-metrics-collector-config-data
          path: kubelet-metrics-collector-config-data.textproto
        - key: containerd-metrics-collector-config-data
          path: containerd-metrics-collector-config-data.textproto
        - key: kubelet-prober-metrics-collector-config-data
          path: kubelet-prober-metrics-collector-config-data.textproto
        - key: kube-proxy-metrics-collector-config-data
          path: kube-proxy-metrics-collector-config-data.textproto
        - key: node-problem-detector-metrics-collector-config-data
          path: node-problem-detector-metrics-collector-config-data.textproto
        - key: kubelet-resource-metrics-collector-config-data
          path: kubelet-resource-metrics-collector-config-data.textproto
        name: prometheus-metrics-collector-config-map
      name: prometheus-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-57827
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T17:32:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 6m
        memory: 50Mi
      containerID: containerd://854daaefd3cbdcbecc4ccc8c48c14ba643d6ef012b2fe939d15c3598955e3ebc
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: core-metrics-exporter
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 6m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:22Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: core-metrics-exporter-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 50Mi
      containerID: containerd://bcc8d35135b70e3985d64d556e9a2e39714e98ad7c74036bcc1cbf36c3fb6ee9
      image: sha256:af5f2ac9b9ed98e410eb73523f33c80e36e9104a86c3c33aea2d09f582d97637
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
      lastState: {}
      name: gke-metrics-agent
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 50Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:21Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: gke-metrics-agent-config-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://786fbfef16c58c6c6adcaa895e397a15894f40b7aa230ffa5919b63e55b5d8b9
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: prometheus-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 80Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T17:32:22Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: prometheus-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    initContainerStatuses:
    - containerID: containerd://775998c16b9e82c4b9b5aa208635bb74c736e01d42fc6944e79d1bf5e000e40a
      image: sha256:b0bb950012f9e98eb20d0324b07fd0104999d7ed24f86a4ec67b96021502f42e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://775998c16b9e82c4b9b5aa208635bb74c736e01d42fc6944e79d1bf5e000e40a
          exitCode: 0
          finishedAt: "2025-10-08T17:32:21Z"
          reason: Completed
          startedAt: "2025-10-08T17:32:21Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-57827
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.142.0.22
    podIPs:
    - ip: 10.142.0.22
    qosClass: Burstable
    startTime: "2025-10-08T17:32:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.7
    creationTimestamp: "2025-10-16T13:21:13Z"
    generateName: konnectivity-agent-59454d54c4-
    generation: 1
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 59454d54c4
    name: konnectivity-agent-59454d54c4-96c9d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-59454d54c4
      uid: 4f6c042f-975b-40ab-b2f3-35506bce9619
    resourceVersion: "1760620876700431000"
    uid: e3e1a17e-d8be-48db-a07a-af234d7eed3c
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=10.142.0.2
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-dwlhw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://2edb07aba3c67ad41b34102e8430902dae978920cc5224c9c96b309825cb709f
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:15Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://5dbbbab08b99e8b8810ec2cb5222e3d72b99b1ddc9187eaaa06324f51616f49e
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:16Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://0fcea87628035c803495ff57198e5172aa973b98011fcd55d607b8bf73947e70
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://0fcea87628035c803495ff57198e5172aa973b98011fcd55d607b8bf73947e70
          exitCode: 0
          finishedAt: "2025-10-16T13:21:15Z"
          reason: Completed
          startedAt: "2025-10-16T13:21:15Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dwlhw
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.1.32
    podIPs:
    - ip: 10.72.1.32
    qosClass: Burstable
    startTime: "2025-10-16T13:21:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.7
    creationTimestamp: "2025-10-16T13:21:17Z"
    generateName: konnectivity-agent-59454d54c4-
    generation: 1
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 59454d54c4
    name: konnectivity-agent-59454d54c4-q2g6n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-59454d54c4
      uid: 4f6c042f-975b-40ab-b2f3-35506bce9619
    resourceVersion: "1760620879734543020"
    uid: 996ce7fd-0f8b-41f3-a0b1-2c097ad07abc
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=10.142.0.2
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-xr774
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:18Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://f234d1bbc06cc7478e52c8acee8ca039e91f4b6c2561b48a5dc0f6c2e4f7b84d
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:18Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://5309adb069ab5d0ecd13e94cf5bb06e80e962378605f73b6a662842e904ceba9
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:19Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://71f6ffb66703a368da9134f270fc713fd51969cd38e7fe34c29f801c48d1d1de
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://71f6ffb66703a368da9134f270fc713fd51969cd38e7fe34c29f801c48d1d1de
          exitCode: 0
          finishedAt: "2025-10-16T13:21:17Z"
          reason: Completed
          startedAt: "2025-10-16T13:21:17Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xr774
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.1.33
    podIPs:
    - ip: 10.72.1.33
    qosClass: Burstable
    startTime: "2025-10-16T13:21:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.7
    creationTimestamp: "2025-10-16T13:21:10Z"
    generateName: konnectivity-agent-59454d54c4-
    generation: 1
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 59454d54c4
    name: konnectivity-agent-59454d54c4-tdrjm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-59454d54c4
      uid: 4f6c042f-975b-40ab-b2f3-35506bce9619
    resourceVersion: "1760620873120319001"
    uid: a4957c0c-3fcd-496c-959d-dcf2ebeee24e
  spec:
    containers:
    - args:
      - --logtostderr=true
      - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      - --proxy-server-host=10.142.0.2
      - --proxy-server-port=8132
      - --health-server-port=8093
      - --admin-server-port=8094
      - --sync-interval=5s
      - --sync-interval-cap=30s
      - --sync-forever=true
      - --probe-interval=5s
      - --keepalive-time=60s
      - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
      - --enable-profiling
      - --count-server-leases
      - --server-count-source=max
      - --v=3
      command:
      - /proxy-agent
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8093
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: konnectivity-agent
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: konnectivity-agent-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      imagePullPolicy: IfNotPresent
      name: konnectivity-agent-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: sandbox.gke.io/runtime
      operator: Equal
      value: gvisor
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
    - labelSelector:
        matchLabels:
          k8s-app: konnectivity-agent
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: konnectivity-agent-token
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: system:konnectivity-server
            expirationSeconds: 3600
            path: konnectivity-agent-token
    - configMap:
        defaultMode: 420
        items:
        - key: konnectivity-agent-metrics-collector-config-data
          path: konnectivity-agent-metrics-collector-config-data.textproto
        name: konnectivity-agent-metrics-collector-config-map
      name: konnectivity-agent-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-dlbph
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 30Mi
      containerID: containerd://6908544a648c2a2d9f20c637bb454d1bee1bae078c661bbbbab736ae22e34fe7
      image: sha256:772a355da43e12d19bc39d1ef94c6893576a0ba4a47d3b1df5b4ba4dd7bc5dbe
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
      lastState: {}
      name: konnectivity-agent
      ready: true
      resources:
        limits:
          memory: 125Mi
        requests:
          cpu: 10m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:12Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/tokens
        name: konnectivity-agent-token
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 30Mi
      containerID: containerd://0754d086d3ab19be8dfbdff86da7b169470f640ef96e5764f3baef601ad27848
      image: sha256:a33254ae736a81fcd0296ac7c550c65738c1f6a3fe0a0d09cd56e3299c692b36
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
      lastState: {}
      name: konnectivity-agent-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 30Mi
        requests:
          cpu: 5m
          memory: 30Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:12Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /conf
        name: konnectivity-agent-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    initContainerStatuses:
    - containerID: containerd://087a77015324b6e093b630cc3dd909afc58137c5f75b1e3c93c2dcefcf4942e8
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://087a77015324b6e093b630cc3dd909afc58137c5f75b1e3c93c2dcefcf4942e8
          exitCode: 0
          finishedAt: "2025-10-16T13:21:11Z"
          reason: Completed
          startedAt: "2025-10-16T13:21:11Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlbph
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.5.21
    podIPs:
    - ip: 10.72.5.21
    qosClass: Burstable
    startTime: "2025-10-16T13:21:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      components.gke.io/component-name: konnectivitynetworkproxy-combined
      components.gke.io/component-version: 1.15.7
    creationTimestamp: "2025-10-16T13:21:10Z"
    generateName: konnectivity-agent-autoscaler-59849cb6b9-
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 59849cb6b9
    name: konnectivity-agent-autoscaler-59849cb6b9-t792l
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-59849cb6b9
      uid: c119a046-3ef1-4d99-b29d-16679e9194c7
    resourceVersion: "1760620873666159008"
    uid: 77b64ec3-7397-458e-bdee-04feee9e185e
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler-config
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.17@sha256:3b9d333418723c07ac6ee488d517fa9a9afddd20a8c3b91ac73b5de2ba736f83
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 10m
          memory: 10M
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fh8hc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      beta.kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: konnectivity-agent-cpha
    serviceAccountName: konnectivity-agent-cpha
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-fh8hc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-16T13:21:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 10M
      containerID: containerd://32c74c80427354a608e40d0c0991be31c9d7e7bfb4889718046b7a0458cf40fc
      image: sha256:8bb7a52eae483070a73dad097f363e69fb986f172cb502df56caa1e6b69d6b93
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:3b9d333418723c07ac6ee488d517fa9a9afddd20a8c3b91ac73b5de2ba736f83
      lastState: {}
      name: autoscaler
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 10M
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-16T13:21:13Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fh8hc
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.72.1.31
    podIPs:
    - ip: 10.72.1.31
    qosClass: Burstable
    startTime: "2025-10-16T13:21:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 33.2.6
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-10-01T19:08:13Z"
    generateName: kube-dns-5948965fdd-
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5948965fdd
    name: kube-dns-5948965fdd-2ww62
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-5948965fdd
      uid: bef468ff-2cfe-46f8-94bf-2ff3c6713b37
    resourceVersion: "1759345724764831007"
    uid: 0adf880d-c2d5-4d29-861a-dad92de25a8a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.7@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.7@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.7@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250821_2300_RC0@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-4d7pt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 150m
        memory: 20Mi
      containerID: containerd://6195c470c7ed5e5ef745d24a8ddf275f5fde807f4b09a9fe378a70861d4a4f35
      image: sha256:24cf37a2e65db2109ecc1d043745a726855737800459529e9e4c282e25bdfe2e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
      lastState: {}
      name: dnsmasq
      ready: true
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:40Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 65534
          uid: 0
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://fa11d654bd596e02920bdd6f766fcecacefc4f6b5ba845bac4a1b6b7c69c0379
      image: sha256:57e591aa7166c6d264252584c9318ed981fecf6a86fe2ed93e2c80480e3c4c46
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
      lastState: {}
      name: kubedns
      ready: true
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:33Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://7bafc1c1e07533aafbe1d00d991b39f082d28ea84860f18e7c874ea38cf6bb39
      image: sha256:e24ec3e2f20e9fb69af9857a7a54750917433d626f8e221041890f8a0dfaef35
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:43Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 20Mi
      containerID: containerd://99d693d49263b294ddf84bb09dc34825941c5f97c7d29aa69d10c6ad567fe3f1
      image: sha256:1dd22dc5c0c3b7cf60c08936c934211cbb016d44ca68296ee9f3d2687bbc3fcc
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
      lastState: {}
      name: sidecar
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:41Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    initContainerStatuses:
    - containerID: containerd://15b1e191b3f356bf33d287a0971da686b0a52353350eea1d0a2f778e5ff8452b
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://15b1e191b3f356bf33d287a0971da686b0a52353350eea1d0a2f778e5ff8452b
          exitCode: 0
          finishedAt: "2025-10-01T19:08:15Z"
          reason: Completed
          startedAt: "2025-10-01T19:08:15Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 65534
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4d7pt
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.0.8
    podIPs:
    - ip: 10.72.0.8
    qosClass: Burstable
    startTime: "2025-10-01T19:08:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 33.2.6
      prometheus.io/port: "10054"
      prometheus.io/scrape: "true"
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2025-10-01T19:17:29Z"
    generateName: kube-dns-5948965fdd-
    generation: 1
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5948965fdd
    name: kube-dns-5948965fdd-tn646
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-5948965fdd
      uid: bef468ff-2cfe-46f8-94bf-2ff3c6713b37
    resourceVersion: "1759346281166847001"
    uid: 47a45e59-c6d4-4669-b9bc-70308905a871
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --domain=cluster.local.
      - --dns-port=10053
      - --config-dir=/kube-dns-config
      - --v=2
      env:
      - name: PROMETHEUS_PORT
        value: "10055"
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.7@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/kubedns
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: kubedns
      ports:
      - containerPort: 10053
        name: dns-local
        protocol: UDP
      - containerPort: 10053
        name: dns-tcp-local
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: 8081
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
    - args:
      - -v=2
      - -logtostderr
      - -configDir=/etc/k8s/dns/dnsmasq-nanny
      - -restartDnsmasq=true
      - --
      - -k
      - --cache-size=1000
      - --no-negcache
      - --dns-forward-max=1500
      - --log-facility=-
      - --server=/cluster.local/127.0.0.1#10053
      - --server=/in-addr.arpa/127.0.0.1#10053
      - --server=/ip6.arpa/127.0.0.1#10053
      - --max-ttl=30
      - --max-cache-ttl=30
      - --max-tcp-connections=200
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.7@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthcheck/dnsmasq
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: dnsmasq
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      securityContext:
        capabilities:
          add:
          - NET_BIND_SERVICE
          - SETGID
          drop:
          - all
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
    - args:
      - --v=2
      - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
      - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.7@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /metrics
          port: 10054
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: sidecar
      ports:
      - containerPort: 10054
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
    - env:
      - name: GOMAXPROCS
        value: "2"
      - name: COLLECTOR_CONFIG_PATH
        value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
      - name: SPLIT_GAUGE_BUFFER
        value: "true"
      - name: PROJECT_NUMBER
        value: "751556915102"
      - name: LOCATION
        value: us-east1
      - name: CLUSTER_NAME
        value: pixelcluster
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: CONTAINER_NAME
        value: kubedns-metrics-collector
      - name: COMPONENT_VERSION
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-version']
      - name: COMPONENT_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations['components.gke.io/component-name']
      - name: TOKEN_SOURCE_MODE
        value: MODE_TOKEN_BROKER_WITH_FALLBACK
      - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
        value: /var/run/token_broker/adc/google-application-credentials.json
      - name: GKE_HOSTNAME
        value: container.googleapis.com
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250821_2300_RC0@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
      imagePullPolicy: IfNotPresent
      name: kubedns-metrics-collector
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      securityContext:
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsUser: 1001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    initContainers:
    - command:
      - /node_token_broker_init
      - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
      - --token_file=/var/run/token_broker/ksa/token
      - --output_path=/var/run/token_broker/adc/google-application-credentials.json
      - --project_id=pixelated-463209-e5
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      imagePullPolicy: IfNotPresent
      name: token-broker-adc-init
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns
    serviceAccountName: kube-dns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-dns
        optional: true
      name: kube-dns-config
    - configMap:
        defaultMode: 420
        items:
        - key: kubedns-metrics-collector-config-data
          path: kubedns-metrics-collector-config-data.textproto
        - key: sidecar-metrics-collector-config-data
          path: sidecar-metrics-collector-config-data.textproto
        name: kubedns-metrics-collector-config-map
      name: kubedns-metrics-collector-config-map-vol
    - name: token-broker-ksa
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
            expirationSeconds: 3600
            path: token
    - emptyDir: {}
      name: token-broker-adc
    - name: kube-api-access-q8bzj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:18:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:18:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 150m
        memory: 20Mi
      containerID: containerd://9a66376d0af00971b74401327ea515c0cd248d97f77ac2ef08cd324659ef0704
      image: sha256:24cf37a2e65db2109ecc1d043745a726855737800459529e9e4c282e25bdfe2e
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
      lastState: {}
      name: dnsmasq
      ready: true
      resources:
        requests:
          cpu: 150m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:56Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 65534
          uid: 0
      volumeMounts:
      - mountPath: /etc/k8s/dns/dnsmasq-nanny
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 100m
        memory: 70Mi
      containerID: containerd://4f5b92ad8126f7f659b9f5ba33285c2e0f1538c23af70d96007262b159aa34ab
      image: sha256:57e591aa7166c6d264252584c9318ed981fecf6a86fe2ed93e2c80480e3c4c46
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
      lastState: {}
      name: kubedns
      ready: true
      resources:
        limits:
          memory: 210Mi
        requests:
          cpu: 100m
          memory: 70Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:49Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /kube-dns-config
        name: kube-dns-config
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 45Mi
      containerID: containerd://447e4260b826de73b3794d35da39320e497e4b8d01af6de18af11cd92d41fe64
      image: sha256:e24ec3e2f20e9fb69af9857a7a54750917433d626f8e221041890f8a0dfaef35
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
      lastState: {}
      name: kubedns-metrics-collector
      ready: true
      resources:
        limits:
          cpu: "1"
          memory: 45Mi
        requests:
          cpu: 10m
          memory: 45Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:18:00Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /conf
        name: kubedns-metrics-collector-config-map-vol
      - mountPath: /var/run/token_broker/ksa
        name: token-broker-ksa
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 10m
        memory: 20Mi
      containerID: containerd://7a2ca02891cae30651eb7e42561935bed253fd792bde6b4f16ef2938f8f66ff2
      image: sha256:1dd22dc5c0c3b7cf60c08936c934211cbb016d44ca68296ee9f3d2687bbc3fcc
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
      lastState: {}
      name: sidecar
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:59Z"
      user:
        linux:
          gid: 1001
          supplementalGroups:
          - 1001
          - 65534
          uid: 1001
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    initContainerStatuses:
    - containerID: containerd://a9d20e99846f6a334746f760825ba66345dcf69c941af7e9a4a53c4105f92db2
      image: asia.gke.gcr.io/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0
      imageID: asia.gcr.io/gke-release-staging/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
      lastState: {}
      name: token-broker-adc-init
      ready: true
      resources: {}
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://a9d20e99846f6a334746f760825ba66345dcf69c941af7e9a4a53c4105f92db2
          exitCode: 0
          finishedAt: "2025-10-01T19:17:31Z"
          reason: Completed
          startedAt: "2025-10-01T19:17:31Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          - 65534
          uid: 0
      volumeMounts:
      - mountPath: /var/run/token_broker/adc
        name: token-broker-adc
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q8bzj
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.72.1.7
    podIPs:
    - ip: 10.72.1.7
    qosClass: Burstable
    startTime: "2025-10-01T19:17:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: kubedns
      components.gke.io/component-version: 33.2.6
    creationTimestamp: "2025-10-01T19:11:50Z"
    generateName: kube-dns-autoscaler-6d46488bd4-
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 6d46488bd4
    name: kube-dns-autoscaler-6d46488bd4-ckg8j
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-dns-autoscaler-6d46488bd4
      uid: 79db9dd5-7f74-4baf-a9f6-c7f7f273f2da
    resourceVersion: "1759345913293807013"
    uid: f4f222fb-44ae-4d0f-80a4-14d708cca071
  spec:
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=kube-dns-autoscaler
      - --target=Deployment/kube-dns
      - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
      - --logtostderr=true
      - --v=2
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.13@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624
      imagePullPolicy: IfNotPresent
      name: autoscaler
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lfgrp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsGroup: 1000
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 65534
    serviceAccount: kube-dns-autoscaler
    serviceAccountName: kube-dns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-lfgrp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 20m
        memory: 10Mi
      containerID: containerd://1c311b4f15f42118bb80a105d0423bcd2709858d7e352eff81cf369e7e6b7921
      image: sha256:21dbc72657e39a7520e471c69037167df8d2a4d78f9439c441e4d48ee084bd00
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624
      lastState: {}
      name: autoscaler
      ready: true
      resources:
        requests:
          cpu: 20m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:11:52Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          - 65534
          uid: 1000
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lfgrp
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.10
    podIPs:
    - ip: 10.72.0.10
    qosClass: Burstable
    startTime: "2025-10-01T19:11:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 32c879ae0a24c42567cd98a706e946fe
      kubernetes.io/config.mirror: 32c879ae0a24c42567cd98a706e946fe
      kubernetes.io/config.seen: "2025-10-01T19:07:58.338567834Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-10-01T19:08:01Z"
    generation: 1
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
      uid: 5691a520-c39e-434d-bf7f-5c898e0710a6
    resourceVersion: "1759345746457487009"
    uid: 096842d9-020f-4158-a34e-d410ab6772b4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.google.com/autopilot-managed-node
              operator: DoesNotExist
    containers:
    - command:
      - /bin/sh
      - -c
      - exec kube-proxy --master=https://10.142.0.2 --kubeconfig=/var/lib/kube-proxy/kubeconfig
        --cluster-cidr=10.72.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=RotateKubeletServerCertificate=true,ExecProbeTimeout=false
        --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
        --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
        2>&1
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.4-gke.1245000
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:07:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:07:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://9fe5c8ef1152a7707131cc21423c4de45ea74aa8522bf904186eaf393369783a
      image: gke.gcr.io/kube-proxy-amd64:v1.33.4-gke.1245000
      imageID: sha256:ef39bcfc461f6abbbdcfc2bf0cf4fc5494c899d643410b1d41d25a4b5e10f1ac
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.142.0.21
    podIPs:
    - ip: 10.142.0.21
    qosClass: Burstable
    startTime: "2025-10-01T19:07:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: ce6918150b056a9f1892281bbcbd43ce
      kubernetes.io/config.mirror: ce6918150b056a9f1892281bbcbd43ce
      kubernetes.io/config.seen: "2025-10-01T19:17:09.147896432Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-10-01T19:17:12Z"
    generation: 1
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
      uid: f5b072b9-1391-4800-b57b-07632454e33a
    resourceVersion: "1759346233499807021"
    uid: 5b894bf1-30ce-40b9-b5db-934542dc7f1f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.google.com/autopilot-managed-node
              operator: DoesNotExist
    containers:
    - command:
      - /bin/sh
      - -c
      - exec kube-proxy --master=https://10.142.0.2 --kubeconfig=/var/lib/kube-proxy/kubeconfig
        --cluster-cidr=10.72.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=RotateKubeletServerCertificate=true,ExecProbeTimeout=false
        --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
        --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
        2>&1
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.4-gke.1245000
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://dbb7b500e1b29137b339adbf3de26bc5e91a639658bdcd863df137d47ce5046a
      image: gke.gcr.io/kube-proxy-amd64:v1.33.4-gke.1245000
      imageID: sha256:ef39bcfc461f6abbbdcfc2bf0cf4fc5494c899d643410b1d41d25a4b5e10f1ac
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:12Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.142.0.23
    podIPs:
    - ip: 10.142.0.23
    qosClass: Burstable
    startTime: "2025-10-01T19:17:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 013be44e4b109d23df2f49ed4273ab66
      kubernetes.io/config.mirror: 013be44e4b109d23df2f49ed4273ab66
      kubernetes.io/config.seen: "2025-10-01T19:11:39.270554519Z"
      kubernetes.io/config.source: file
    creationTimestamp: "2025-10-01T19:11:41Z"
    generation: 1
    labels:
      component: kube-proxy
      tier: node
    name: kube-proxy-gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
      uid: 4449cd4a-8844-4c30-9f34-34e02a31240f
    resourceVersion: "1759345902522415017"
    uid: e8ddac96-47ba-443c-812e-8dd236474077
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: cloud.google.com/autopilot-managed-node
              operator: DoesNotExist
    containers:
    - command:
      - /bin/sh
      - -c
      - exec kube-proxy --master=https://10.142.0.2 --kubeconfig=/var/lib/kube-proxy/kubeconfig
        --cluster-cidr=10.72.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=RotateKubeletServerCertificate=true,ExecProbeTimeout=false
        --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
        --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
        2>&1
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.4-gke.1245000
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /usr/share/ca-certificates
        type: ""
      name: usr-ca-certs
    - hostPath:
        path: /etc/ssl/certs
        type: ""
      name: etc-ssl-certs
    - hostPath:
        path: /var/lib/kube-proxy/kubeconfig
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 100m
      containerID: containerd://4b3cfba3d93b1646240ab6bda0ac9ae92219afd201aff6a363707be5587f7247
      image: gke.gcr.io/kube-proxy-amd64:v1.33.4-gke.1245000
      imageID: sha256:ef39bcfc461f6abbbdcfc2bf0cf4fc5494c899d643410b1d41d25a4b5e10f1ac
      lastState: {}
      name: kube-proxy
      ready: true
      resources:
        requests:
          cpu: 100m
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:11:41Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: etc-ssl-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /usr/share/ca-certificates
        name: usr-ca-certs
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/kube-proxy/kubeconfig
        name: kubeconfig
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.142.0.22
    podIPs:
    - ip: 10.142.0.22
    qosClass: Burstable
    startTime: "2025-10-01T19:11:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.36.4-gke.0
    creationTimestamp: "2025-10-01T19:17:30Z"
    generateName: l7-default-backend-7dc957ffb5-
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 7dc957ffb5
    name: l7-default-backend-7dc957ffb5-rcpmb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: l7-default-backend-7dc957ffb5
      uid: ac3d90e3-0bc9-4b40-8c00-46a1a421acaf
    resourceVersion: "1759346252288367013"
    uid: 789c8948-d92e-4786-8122-6583f585edc8
  spec:
    automountServiceAccountToken: false
    containers:
    - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: default-http-backend
      ports:
      - containerPort: 8080
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 20Mi
      containerID: containerd://8a92d7a6f8ce36dda4f5cf878055b26d8689c7d10b26a8fc7fa87a999e462040
      image: sha256:00e03a4483b713e6cfce669c3e5a2233b14a732c41cc9c870c5045cabb704b5a
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
      lastState: {}
      name: default-http-backend
      ready: true
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:31Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.11
    podIPs:
    - ip: 10.72.0.11
    qosClass: Burstable
    startTime: "2025-10-01T19:17:30Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.33.0-gke.3
    creationTimestamp: "2025-10-01T19:08:14Z"
    generateName: metrics-server-v1.33.0-77d549c684-
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 77d549c684
      version: v1.33.0
    name: metrics-server-v1.33.0-77d549c684-ll4jb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-v1.33.0-77d549c684
      uid: 70376613-b2c7-4c9a-9c0f-08ad584541c6
    resourceVersion: "1759345781746543002"
    uid: c06ee1e0-6101-402c-a370-8155aa05ed5d
  spec:
    containers:
    - command:
      - /metrics-server
      - --metric-resolution=30s
      - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
      - --cert-dir=/tmp
      - --secure-port=10250
      - --kubelet-allow-working-set-bytes-zero=false
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.45@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      name: metrics-server
      ports:
      - containerPort: 10250
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        initialDelaySeconds: 50
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 1000
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dprfm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoSchedule
      key: kubernetes.io/arch
      operator: Equal
      value: arm64
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: metrics-server-config
      name: metrics-server-config-volume
    - emptyDir: {}
      name: tmp-dir
    - name: kube-api-access-dprfm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:09:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:09:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 43m
        memory: 55Mi
      containerID: containerd://7a9aec66ea6e8bbd25d811eadb2ae13f1dec8e97b8f64e487823b239ad8ee22a
      image: sha256:c5e15b8e0d9cfdfb7e8e851cfb652fb8db2b824645917d74d9ca2f3d109e9b47
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243
      lastState: {}
      name: metrics-server
      ready: true
      resources:
        limits:
          cpu: 43m
          memory: 55Mi
        requests:
          cpu: 43m
          memory: 55Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:38Z"
      user:
        linux:
          gid: 1000
          supplementalGroups:
          - 1000
          uid: 1000
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dprfm
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.9
    podIPs:
    - ip: 10.72.0.9
    qosClass: Guaranteed
    startTime: "2025-10-01T19:08:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.22.31
    creationTimestamp: "2025-10-01T19:11:41Z"
    generateName: pdcsi-node-
    generation: 1
    labels:
      controller-revision-hash: 78496fd56b
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-gng86
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 01eedf25-5221-4339-a53f-53a9da124a48
    resourceVersion: "1759345924401039011"
    uid: b02da870-cb29-4d55-81da-9d2b342471eb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4td9
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.1@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4td9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-m4td9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:12:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:11:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://39b5e0186b594b2b41670ca562d330c732ff718091be8fdc60237fc50122fdd9
      image: sha256:c92a92df4ad0976e1cab7c5ae90fd5f3e00fdbd983f5665d486555671041487c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      lastState: {}
      name: csi-driver-registrar
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:11:47Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4td9
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://021ecf9fbbc5fb512a970079321369b07f922b9dba9c0385910ca78e41728a47
      image: sha256:d905695083a1b496515829a621a7369d97075255f8a30ba8f5a44657451f0406
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      lastState: {}
      name: gce-pd-driver
      ready: true
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:12:03Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m4td9
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.142.0.22
    podIPs:
    - ip: 10.142.0.22
    qosClass: Burstable
    startTime: "2025-10-01T19:11:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.22.31
    creationTimestamp: "2025-10-01T19:08:01Z"
    generateName: pdcsi-node-
    generation: 1
    labels:
      controller-revision-hash: 78496fd56b
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-pcn98
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 01eedf25-5221-4339-a53f-53a9da124a48
    resourceVersion: "1759345704112943017"
    uid: afb48154-2ab4-4ee0-8a86-c9649b75b71a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tjmnt
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.1@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tjmnt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-tjmnt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:08:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://d2e040a6f3450fcaaea485c50baa70f3438954217c15f3b1773a2c94fb9b89da
      image: sha256:c92a92df4ad0976e1cab7c5ae90fd5f3e00fdbd983f5665d486555671041487c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      lastState: {}
      name: csi-driver-registrar
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:06Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tjmnt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://4973d4aee2a2f494dfa88e5fa1144ea5b5ba02ff3abe987341fef3749f9d1ef0
      image: sha256:d905695083a1b496515829a621a7369d97075255f8a30ba8f5a44657451f0406
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      lastState: {}
      name: gce-pd-driver
      ready: true
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:08:23Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tjmnt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.142.0.21
    podIPs:
    - ip: 10.142.0.21
    qosClass: Burstable
    startTime: "2025-10-01T19:08:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      components.gke.io/component-name: pdcsi
      components.gke.io/component-version: 0.22.31
    creationTimestamp: "2025-10-01T19:17:12Z"
    generateName: pdcsi-node-
    generation: 1
    labels:
      controller-revision-hash: 78496fd56b
      k8s-app: gcp-compute-persistent-disk-csi-driver
      pod-template-generation: "1"
    name: pdcsi-node-xwlg2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: pdcsi-node
      uid: 01eedf25-5221-4339-a53f-53a9da124a48
    resourceVersion: "1759346259433295022"
    uid: 22f62afc-5e19-4f89-863f-8affe71e5e57
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    containers:
    - args:
      - --v=5
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      imagePullPolicy: IfNotPresent
      name: csi-driver-registrar
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vntqt
        readOnly: true
    - args:
      - --v=5
      - --endpoint=unix:/csi/csi.sock
      - --run-controller-service=false
      - --run-node-service=true
      - --enable-data-cache=true
      - --node-name=$(KUBE_NODE_NAME)
      env:
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.1@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      imagePullPolicy: IfNotPresent
      name: gce-pd-driver
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      securityContext:
        privileged: true
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kubelet
        mountPropagation: Bidirectional
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vntqt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: pdcsi-node-sa
    serviceAccountName: pdcsi-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - key: CriticalAddonsOnly
      operator: Exists
    - key: components.gke.io/gke-managed-components
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: kubelet-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /etc/udev
        type: Directory
      name: udev-rules-etc
    - hostPath:
        path: /lib/udev
        type: Directory
      name: udev-rules-lib
    - hostPath:
        path: /run/udev
        type: Directory
      name: udev-socket
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - emptyDir:
        sizeLimit: 5Mi
      name: tmp
    - emptyDir:
        sizeLimit: 5Mi
      name: lvm-dir
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-vntqt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://62a6b79e5951261ad6978d836c36dcdcf262703c16b22e48e3b6dd4b558dd5e4
      image: sha256:c92a92df4ad0976e1cab7c5ae90fd5f3e00fdbd983f5665d486555671041487c
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
      lastState: {}
      name: csi-driver-registrar
      ready: true
      resources:
        limits:
          memory: 50Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:18Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vntqt
        readOnly: true
        recursiveReadOnly: Disabled
    - allocatedResources:
        cpu: 5m
        memory: 10Mi
      containerID: containerd://723071d916f81faee91cef5d9c7cc5d4a3793c7d7de383a4d9fb539e12876468
      image: sha256:d905695083a1b496515829a621a7369d97075255f8a30ba8f5a44657451f0406
      imageID: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
      lastState: {}
      name: gce-pd-driver
      ready: true
      resources:
        limits:
          memory: 450Mi
        requests:
          cpu: 5m
          memory: 10Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:38Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 0
      volumeMounts:
      - mountPath: /var/lib/kubelet
        name: kubelet-dir
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /dev
        name: device-dir
      - mountPath: /etc/udev
        name: udev-rules-etc
      - mountPath: /lib/udev
        name: udev-rules-lib
      - mountPath: /run/udev
        name: udev-socket
      - mountPath: /sys
        name: sys
      - mountPath: /tmp
        name: tmp
      - mountPath: /lib/modules
        name: modules
        readOnly: true
        recursiveReadOnly: Disabled
      - mountPath: /etc/lvm
        name: lvm-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vntqt
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.142.0.23
    podIPs:
    - ip: 10.142.0.23
    qosClass: Burstable
    startTime: "2025-10-01T19:17:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      sidecar.istio.io/inject: "false"
    creationTimestamp: "2025-10-04T02:09:55Z"
    generateName: cm-acme-http-solver-
    generation: 1
    labels:
      acme.cert-manager.io/http-domain: "2062485945"
      acme.cert-manager.io/http-token: "1380912950"
      acme.cert-manager.io/http01-solver: "true"
    name: cm-acme-http-solver-whdjf
    namespace: pixelated
    ownerReferences:
    - apiVersion: acme.cert-manager.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Challenge
      name: pixelated-tls-1-1890151173-3011245256
      uid: a1e7b3fd-1b61-484f-9cfd-5fc499511b72
    resourceVersion: "1759543801039215000"
    uid: 1fb40ed8-dc72-4b82-8598-8ba60b223ca8
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - --listen-port=8089
      - --domain=www.pixelatedempathy.com
      - --token=KaVDz_pGOOgIsbUslUaOVvsKMss8x05iIsJ_zBV9Kfg
      - --key=KaVDz_pGOOgIsbUslUaOVvsKMss8x05iIsJ_zBV9Kfg.1d74HUt49tZB7Vh3I5ZaPEKLsM8feGjYt018ftHuEDw
      image: quay.io/jetstack/cert-manager-acmesolver:v1.14.5
      imagePullPolicy: IfNotPresent
      name: acmesolver
      ports:
      - containerPort: 8089
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:09:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:09:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://b530ddbf37f29b3cde3b9d5efddc8bf9aa617cfeaf7b802e1f2b426ed4d96c95
      image: quay.io/jetstack/cert-manager-acmesolver:v1.14.5
      imageID: quay.io/jetstack/cert-manager-acmesolver@sha256:5e807851354e51b6d978dde72523952464ecc3e79678a88892d2598c7bba9fd5
      lastState: {}
      name: acmesolver
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-04T02:10:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.14
    podIPs:
    - ip: 10.72.0.14
    qosClass: Burstable
    startTime: "2025-10-04T02:09:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      sidecar.istio.io/inject: "false"
    creationTimestamp: "2025-10-04T02:09:55Z"
    generateName: cm-acme-http-solver-
    generation: 1
    labels:
      acme.cert-manager.io/http-domain: "1460799526"
      acme.cert-manager.io/http-token: "1440092168"
      acme.cert-manager.io/http01-solver: "true"
    name: cm-acme-http-solver-xc7js
    namespace: pixelated
    ownerReferences:
    - apiVersion: acme.cert-manager.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Challenge
      name: pixelated-tls-1-1890151173-1819519327
      uid: d0b1113f-cc17-40b9-a44b-16ccf520e340
    resourceVersion: "1759543801005007019"
    uid: 8da5a04b-0f48-45b5-ad68-8849161c08bd
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - --listen-port=8089
      - --domain=pixelatedempathy.com
      - --token=NLskqiGT8QQjJOj9emPBlszgEuXfPqylaxciqrOWLks
      - --key=NLskqiGT8QQjJOj9emPBlszgEuXfPqylaxciqrOWLks.1d74HUt49tZB7Vh3I5ZaPEKLsM8feGjYt018ftHuEDw
      image: quay.io/jetstack/cert-manager-acmesolver:v1.14.5
      imagePullPolicy: IfNotPresent
      name: acmesolver
      ports:
      - containerPort: 8089
        name: http
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
    dnsPolicy: ClusterFirst
    enableServiceLinks: false
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: OnFailure
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:09:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:10:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-04T02:09:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 10m
        memory: 64Mi
      containerID: containerd://3fcac5ffb98671353b892dc3d2e7fb8d36f23714fc0d08e039b609c9f153f552
      image: quay.io/jetstack/cert-manager-acmesolver:v1.14.5
      imageID: quay.io/jetstack/cert-manager-acmesolver@sha256:5e807851354e51b6d978dde72523952464ecc3e79678a88892d2598c7bba9fd5
      lastState: {}
      name: acmesolver
      ready: true
      resources:
        limits:
          cpu: 100m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 64Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-04T02:10:00Z"
      user:
        linux:
          gid: 0
          supplementalGroups:
          - 0
          uid: 1000
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.13
    podIPs:
    - ip: 10.72.0.13
    qosClass: Burstable
    startTime: "2025-10-04T02:09:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-08T01:18:51Z"
    generateName: pixelated-79db7959d9-
    generation: 1
    labels:
      app: pixelated-app
      pod-template-hash: 79db7959d9
      version: v1.0.0
    name: pixelated-79db7959d9-88kvk
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pixelated-79db7959d9
      uid: afce64ff-feef-46f4-bc38-609f61df98ff
    resourceVersion: "1759886381640159011"
    uid: ac794399-516b-42ce-9795-d4321315d295
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: NODE_ENV
        value: production
      - name: HOST
        value: 0.0.0.0
      - name: PORT
        value: "4321"
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pixelated
      ports:
      - containerPort: 4321
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      startupProbe:
        failureThreshold: 12
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: gke-pixelcluster-pixelcluster-node-po-2f2dbfad-kazt
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: pixelated-config
      name: config-volume
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:19:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:19:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:19:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://89d06d0492854a2ccce5f895b128038d12374737fe66e4781f7aaef14ca577cc
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imageID: registry.gitlab.com/pixeldeck/pixelated@sha256:0840cad19e16139488db5f0531b167f5f9b75d6eaff07140c884822e63596dbb
      lastState: {}
      name: pixelated
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T01:19:30Z"
      user:
        linux:
          gid: 10001
          supplementalGroups:
          - 10001
          uid: 10001
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.22
    hostIPs:
    - ip: 10.142.0.22
    phase: Running
    podIP: 10.72.5.20
    podIPs:
    - ip: 10.72.5.20
    qosClass: Burstable
    startTime: "2025-10-08T01:18:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-08T01:18:00Z"
    generateName: pixelated-79db7959d9-
    generation: 1
    labels:
      app: pixelated-app
      pod-template-hash: 79db7959d9
      version: v1.0.0
    name: pixelated-79db7959d9-8mp67
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pixelated-79db7959d9
      uid: afce64ff-feef-46f4-bc38-609f61df98ff
    resourceVersion: "1759886330807135021"
    uid: 4081e50e-25c8-4543-bd69-01df45a28725
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: NODE_ENV
        value: production
      - name: HOST
        value: 0.0.0.0
      - name: PORT
        value: "4321"
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pixelated
      ports:
      - containerPort: 4321
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      startupProbe:
        failureThreshold: 12
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: gke-pixelcluster-pixelcluster-node-po-237013a9-42pe
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: pixelated-config
      name: config-volume
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:18:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://07892f24a71aa4e6c64bc75705ab5378f4b9941f6a5d6f220c88850ae34635aa
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imageID: registry.gitlab.com/pixeldeck/pixelated@sha256:0840cad19e16139488db5f0531b167f5f9b75d6eaff07140c884822e63596dbb
      lastState: {}
      name: pixelated
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T01:18:33Z"
      user:
        linux:
          gid: 10001
          supplementalGroups:
          - 10001
          uid: 10001
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.23
    hostIPs:
    - ip: 10.142.0.23
    phase: Running
    podIP: 10.72.1.26
    podIPs:
    - ip: 10.72.1.26
    qosClass: Burstable
    startTime: "2025-10-08T01:18:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-10-08T01:34:09Z"
    generateName: pixelated-79db7959d9-
    generation: 1
    labels:
      app: pixelated-app
      pod-template-hash: 79db7959d9
      version: v1.0.0
    name: pixelated-79db7959d9-drczf
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: pixelated-79db7959d9
      uid: afce64ff-feef-46f4-bc38-609f61df98ff
    resourceVersion: "1759887300304015012"
    uid: 630e56d1-b7e5-48ff-8f26-f198c7a0fcb1
  spec:
    automountServiceAccountToken: false
    containers:
    - env:
      - name: NODE_ENV
        value: production
      - name: HOST
        value: 0.0.0.0
      - name: PORT
        value: "4321"
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: pixelated
      ports:
      - containerPort: 4321
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      startupProbe:
        failureThreshold: 12
        httpGet:
          path: /api/health
          port: 4321
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: regcred
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 10001
      runAsGroup: 10001
      runAsUser: 10001
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: pixelated-config
      name: config-volume
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:34:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:34:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:35:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:35:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-08T01:34:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - allocatedResources:
        cpu: 250m
        memory: 256Mi
      containerID: containerd://4e16a8d8cfe64c01d7deddaf117388a553a7402334af5650de76ecb50c77de41
      image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
      imageID: registry.gitlab.com/pixeldeck/pixelated@sha256:0840cad19e16139488db5f0531b167f5f9b75d6eaff07140c884822e63596dbb
      lastState: {}
      name: pixelated
      ready: true
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-08T01:34:43Z"
      user:
        linux:
          gid: 10001
          supplementalGroups:
          - 10001
          uid: 10001
      volumeMounts:
      - mountPath: /app/config
        name: config-volume
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.25
    podIPs:
    - ip: 10.72.0.25
    qosClass: Burstable
    startTime: "2025-10-08T01:34:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/path: /metrics
      prometheus.io/port: "9100"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-10-01T19:17:30Z"
    generateName: traefik-7cf7bc96dd-
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-37.1.1
      pod-template-hash: 7cf7bc96dd
    name: traefik-7cf7bc96dd-cb7t4
    namespace: traefik
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: traefik-7cf7bc96dd
      uid: ccea9cb4-33e8-4db0-a6ff-a8e1f261b124
    resourceVersion: "1759346259307935000"
    uid: 0469ace2-b5c2-4aa7-ba7e-15408d5d7a46
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --entryPoints.metrics.address=:9100/tcp
      - --entryPoints.traefik.address=:8080/tcp
      - --entryPoints.web.address=:8000/tcp
      - --entryPoints.websecure.address=:8443/tcp
      - --api.dashboard=true
      - --ping=true
      - --metrics.prometheus=true
      - --metrics.prometheus.entrypoint=metrics
      - --providers.kubernetescrd
      - --providers.kubernetescrd.allowEmptyServices=true
      - --providers.kubernetesingress
      - --providers.kubernetesingress.allowEmptyServices=true
      - --providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik
      - --entryPoints.websecure.http.tls=true
      - --log.level=INFO
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: docker.io/traefik:v3.5.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ping
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      name: traefik
      ports:
      - containerPort: 9100
        name: metrics
        protocol: TCP
      - containerPort: 8080
        name: traefik
        protocol: TCP
      - containerPort: 8000
        name: web
        protocol: TCP
      - containerPort: 8443
        name: websecure
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: /ping
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 2
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
      resources: {}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c6fft
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: gke-pixelcluster-pixelcluster-node-po-07042413-8k1a
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532
    serviceAccount: traefik
    serviceAccountName: traefik
    terminationGracePeriodSeconds: 60
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: data
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-c6fft
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:38Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-10-01T19:17:30Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://14201ad1a1d74a35b7fd22e749e936c5d218c92e6ddb04b27e697b4726a49376
      image: docker.io/library/traefik:v3.5.2
      imageID: docker.io/library/traefik@sha256:f0abbbd11ced29754d4d188c29e9320b613481ec162b6ea5d3a8b6bdd8e5fa54
      lastState: {}
      name: traefik
      ready: true
      resources: {}
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-10-01T19:17:37Z"
      user:
        linux:
          gid: 65532
          supplementalGroups:
          - 65532
          uid: 65532
      volumeMounts:
      - mountPath: /data
        name: data
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-c6fft
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 10.142.0.21
    hostIPs:
    - ip: 10.142.0.21
    phase: Running
    podIP: 10.72.0.12
    podIPs:
    - ip: 10.72.0.12
    qosClass: BestEffort
    startTime: "2025-10-01T19:17:30Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"v1.14.5"},"name":"cert-manager","namespace":"cert-manager"},"spec":{"ports":[{"name":"tcp-prometheus-servicemonitor","port":9402,"protocol":"TCP","targetPort":9402}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager"},"type":"ClusterIP"}}
    creationTimestamp: "2025-09-20T02:32:38Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.5
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "1758335558210543021"
    uid: c8758c9a-246a-421d-8392-5cdd11b144b5
  spec:
    clusterIP: 34.118.226.67
    clusterIPs:
    - 34.118.226.67
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-prometheus-servicemonitor
      port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"v1.14.5"},"name":"cert-manager-webhook","namespace":"cert-manager"},"spec":{"ports":[{"name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook"},"type":"ClusterIP"}}
    creationTimestamp: "2025-09-20T02:32:38Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.5
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "1758335558486351005"
    uid: 7d77ef0d-513d-403b-8175-00efc9618b9a
  spec:
    clusterIP: 34.118.226.225
    clusterIPs:
    - 34.118.226.225
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-09-19T01:36:25Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "1758245785557295006"
    uid: b1dff059-1eab-408b-ab42-190e9a163921
  spec:
    clusterIP: 34.118.224.1
    clusterIPs:
    - 34.118.224.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-09-17T19:55:36Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: notification-controller
    namespace: flux-system
    resourceVersion: "1759849356891359004"
    uid: b87de099-5936-46d0-a5f6-e7bd38264999
  spec:
    clusterIP: 34.118.232.149
    clusterIPs:
    - 34.118.232.149
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-09-17T19:55:36Z"
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: source-controller
    namespace: flux-system
    resourceVersion: "1759849356964335016"
    uid: 9b05b247-6b0a-4da6-b5ea-3c1674b57cfd
  spec:
    clusterIP: 34.118.230.1
    clusterIPs:
    - 34.118.230.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app: source-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-09-20T00:52:26Z"
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: webhook-receiver
    namespace: flux-system
    resourceVersion: "1759849357042799011"
    uid: 646e69f8-7f9a-468a-933a-5ed9b4cf7d33
  spec:
    clusterIP: 34.118.234.131
    clusterIPs:
    - 34.118.234.131
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http-webhook
    selector:
      app: notification-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: pixelkube
      meta.helm.sh/release-namespace: gitlab-agent-pixelkube
    creationTimestamp: "2025-09-17T18:18:32Z"
    labels:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gitlab-agent
      app.kubernetes.io/version: v18.3.2
      helm.sh/chart: gitlab-agent-2.18.1
    name: pixelkube-gitlab-agent-service
    namespace: gitlab-agent-pixelkube
    resourceVersion: "1758133112983711024"
    uid: fe1deb5e-946a-4713-a0b6-6991cc4536db
  spec:
    clusterIP: 34.118.228.13
    clusterIPs:
    - 34.118.228.13
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-gitlab-agent-observability
      port: 8080
      protocol: TCP
      targetPort: observability
    selector:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/name: gitlab-agent
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:30Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "1758128970279743017"
    uid: ef02fd3b-b6d8-41fe-8fbf-46b051ac7955
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app: managed-prometheus-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:30Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "1758128970911119023"
    uid: 83daf20c-04c9-47cb-b562-b7e5340df553
  spec:
    clusterIP: 34.118.226.44
    clusterIPs:
    - 34.118.226.44
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.15.4-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:30Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gmp-system
    resourceVersion: "1758128970614463018"
    uid: c788db01-e0be-4b81-8da3-53ef26469d49
  spec:
    clusterIP: 34.118.236.76
    clusterIPs:
    - 34.118.236.76
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: rule-evaluator
      port: 19092
      protocol: TCP
      targetPort: 19092
    selector:
      app.kubernetes.io/name: rule-evaluator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.36.4-gke.0
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:23Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "1759343265880015023"
    uid: ded843f7-a803-44c1-b48d-434a37cd9329
  spec:
    clusterIP: 34.118.233.177
    clusterIPs:
    - 34.118.233.177
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30300
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-09-17T17:08:36Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1758128916095871020"
    uid: 744818ad-3545-45bb-ae95-8be0f30f4e57
  spec:
    clusterIP: 34.118.224.10
    clusterIPs:
    - 34.118.224.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 1.33.0-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:37Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "1758128977126399011"
    uid: 86a9e45d-7842-4bf7-a2cc-2a78127e8d0d
  spec:
    clusterIP: 34.118.230.61
    clusterIPs:
    - 34.118.230.61
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      auth.istio.io/8089: NONE
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-10-04T02:09:55Z"
    generateName: cm-acme-http-solver-
    labels:
      acme.cert-manager.io/http-domain: "2062485945"
      acme.cert-manager.io/http-token: "1380912950"
      acme.cert-manager.io/http01-solver: "true"
    name: cm-acme-http-solver-5f8f8
    namespace: pixelated
    ownerReferences:
    - apiVersion: acme.cert-manager.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Challenge
      name: pixelated-tls-1-1890151173-3011245256
      uid: a1e7b3fd-1b61-484f-9cfd-5fc499511b72
    resourceVersion: "1759543795884335015"
    uid: 298fd9e7-997d-47ee-929d-d7282a3278b6
  spec:
    clusterIP: 34.118.225.57
    clusterIPs:
    - 34.118.225.57
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31650
      port: 8089
      protocol: TCP
      targetPort: 8089
    selector:
      acme.cert-manager.io/http-domain: "2062485945"
      acme.cert-manager.io/http-token: "1380912950"
      acme.cert-manager.io/http01-solver: "true"
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      auth.istio.io/8089: NONE
      cloud.google.com/neg: '{"ingress":true}'
    creationTimestamp: "2025-10-04T02:09:55Z"
    generateName: cm-acme-http-solver-
    labels:
      acme.cert-manager.io/http-domain: "1460799526"
      acme.cert-manager.io/http-token: "1440092168"
      acme.cert-manager.io/http01-solver: "true"
    name: cm-acme-http-solver-795km
    namespace: pixelated
    ownerReferences:
    - apiVersion: acme.cert-manager.io/v1
      blockOwnerDeletion: true
      controller: true
      kind: Challenge
      name: pixelated-tls-1-1890151173-1819519327
      uid: d0b1113f-cc17-40b9-a44b-16ccf520e340
    resourceVersion: "1759543795770047004"
    uid: 77ca00a3-0411-4ca0-92d9-32e97eefdfb5
  spec:
    clusterIP: 34.118.238.113
    clusterIPs:
    - 34.118.238.113
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 30096
      port: 8089
      protocol: TCP
      targetPort: 8089
    selector:
      acme.cert-manager.io/http-domain: "1460799526"
      acme.cert-manager.io/http-token: "1440092168"
      acme.cert-manager.io/http01-solver: "true"
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"pixelated-app"},"name":"pixelated-service","namespace":"pixelated"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":4321}],"selector":{"app":"pixelated-app"},"type":"ClusterIP"}}
    creationTimestamp: "2025-10-04T02:09:52Z"
    labels:
      app: pixelated-app
    name: pixelated-service
    namespace: pixelated
    resourceVersion: "1759543792427407010"
    uid: 23a9c3a7-7b7b-4345-987f-a352db0bb9d9
  spec:
    clusterIP: 34.118.238.244
    clusterIPs:
    - 34.118.238.244
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 4321
    selector:
      app: pixelated-app
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: traefik
    creationTimestamp: "2025-09-20T02:28:13Z"
    finalizers:
    - gke.networking.io/l4-netlb-v1
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/instance: traefik-traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-37.1.1
    name: traefik
    namespace: traefik
    resourceVersion: "1758335326620127000"
    uid: 46fbcbc8-739a-4a37-a13e-2cb2d0337089
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 34.118.231.39
    clusterIPs:
    - 34.118.231.39
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: web
      nodePort: 30228
      port: 80
      protocol: TCP
      targetPort: web
    - name: websecure
      nodePort: 30308
      port: 443
      protocol: TCP
      targetPort: websecure
    selector:
      app.kubernetes.io/instance: traefik-traefik
      app.kubernetes.io/name: traefik
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 35.243.226.27
        ipMode: VIP
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:09Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-dcgm-exporter
    name: dcgm-exporter
    namespace: gke-managed-system
    resourceVersion: "1759343259879231000"
    uid: 288c7a31-5ed2-41a4-ac8a-2b4e64bb25f1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-dcgm-exporter
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: gpu-dcgm
          components.gke.io/component-version: 1.33.0-gke.3
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-dcgm-exporter
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-gpu-driver-version
                  operator: In
                  values:
                  - default
                  - latest
        automountServiceAccountToken: false
        containers:
        - args:
          - --enable-dcgm-log
          - --dcgm-log-level
          - ERROR
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: DCGM_EXPORTER_KUBERNETES_GPU_ID_TYPE
            value: device-name
          - name: DCGM_EXPORTER_KUBERNETES
            value: "true"
          - name: DCGM_EXPORTER_LISTEN
            value: :9400
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia/gke-dcgm-exporter:3.3.9-3.6.1-gke.25@sha256:0339d10f2466f35db4cc3757685cbc309ade985dd8352c9c75c4ecef58d5b053
          imagePullPolicy: IfNotPresent
          name: dcgm-exporter
          ports:
          - containerPort: 9400
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 350Mi
            requests:
              cpu: 100m
              memory: 350Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/dcgm-exporter
            name: dcgm-exporter-metrics
            readOnly: true
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - |
            cleanup() {
              echo "caught stop signal, exiting..."
              exit 0
            }
            trap cleanup SIGINT SIGTERM
            echo "checking for drivers"
            while true; do
              if ls "/usr/local/nvidia/lib64/libnvidia-ml.so.1" &>/dev/null; then
                echo "nvml drivers found!"
                break
              fi
              echo "waiting for nvml drivers"
              sleep 1
            done
            echo "checking for MIG partitions"
            if [[ -f "/etc/nvidia/gpu_config.json" ]]; then
              content=$(</etc/nvidia/gpu_config.json)
              if [[ -z "${content##*GPUPartitionSize*}" ]]; then
                while true; do
                  output=$(LD_LIBRARY_PATH=/usr/local/nvidia/lib64 /usr/local/nvidia/bin/nvidia-smi -L)
                  echo $output
                  if [[ -z "${output##*MIG*MIG-*}" ]]; then
                    echo "MIG partitions found, exiting"
                    break
                  fi
                  echo "waiting for MIG partitions"
                  sleep 2
                done
              else
                echo "GPUPartitionSize is empty"
              fi
            else
              echo "no gpu config"
            fi
            echo "checking for gpu-device-plugin socket"
            while true; do
              if [[ $(ls /var/lib/kubelet/device-plugins/nvidiaGPU*.sock) ]]; then
                ls -la /var/lib/kubelet/device-plugins/nvidiaGPU*.sock
                echo "gpu-device-plugin socket found, exiting"
                exit 0
              fi
              echo "waiting for gpu-device-plugin socket"
              sleep 1
            done
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250321.00_p0@sha256:7f776c36ecf7426b9d461b2b9690ff6b6c7fc1d00c78eb050da3e039d431b760
          imagePullPolicy: IfNotPresent
          name: nvml-wait
          resources: {}
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia
            name: nvidia-install-dir-host
            readOnly: true
          - mountPath: /etc/nvidia
            name: nvidia-config
            readOnly: true
          - mountPath: /var/lib/kubelet/device-plugins
            name: device-plugins
            readOnly: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia
            type: Directory
          name: nvidia-install-dir-host
        - configMap:
            defaultMode: 420
            name: dcgm-exporter-metrics
          name: dcgm-exporter-metrics
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugins
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:09:31Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: collector
    namespace: gmp-system
    resourceVersion: "1759887535280031002"
    uid: db927574-301b-498a-a94a-36971401f267
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: collector
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-collector
          app.kubernetes.io/name: collector
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --enable-feature=exemplar-storage
          - --enable-feature=google-kubernetes-secret-provider
          - --storage.tsdb.path=/prometheus/data
          - --storage.tsdb.no-lockfile
          - --gmp.storage.delete-data-on-start
          - --storage.tsdb.retention.time=30m
          - --storage.tsdb.wal-compression
          - --storage.tsdb.min-block-duration=10m
          - --storage.tsdb.max-block-duration=10m
          - --web.listen-address=:19090
          - --web.enable-lifecycle
          - --web.route-prefix=/
          - --export.user-agent-mode=gke
          - --log.format=json
          env:
          - name: GOGC
            value: "25"
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/prometheus:v2.45.3-gmp.13-gke.0@sha256:c824f205eb0d9f790bbb8ffbb8ee88b59b886bd6af160d17cd416d8e3143413f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus
          ports:
          - containerPort: 19090
            name: prom-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 3G
            requests:
              cpu: 4m
              memory: 32M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/data
            name: storage
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/secrets
            name: collection-secret
            readOnly: true
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --reload-url=http://127.0.0.1:19090/-/reload
          - --ready-url=http://127.0.0.1:19090/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: storage
        - configMap:
            defaultMode: 420
            name: collector
          name: config
        - emptyDir: {}
          name: config-out
        - name: collection-secret
          secret:
            defaultMode: 420
            secretName: collection
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:08:54Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: efficiency-daemon
    name: efficiency-daemon
    namespace: kube-system
    resourceVersion: "1758128935240511018"
    uid: 72e8997b-d385-41cd-896f-32e229737734
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: efficiency-daemon
    template:
      metadata:
        annotations:
          components.gke.io/component-name: efficiency-daemon
          components.gke.io/component-version: 33.5.0
        creationTimestamp: null
        labels:
          k8s-app: efficiency-daemon
          name: efficiency-daemon
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/slice-of-hardware
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-accelerator
                  operator: DoesNotExist
                - key: cloud.google.com/autopilot-managed-node
                  operator: In
                  values:
                  - "true"
        containers:
        - args:
          - -host_prefix=/host
          - -config_path=/config/efficiency-daemon-config.yaml
          - -config_overrides=efficiency-daemon-config-overrides
          - -eviction_hard_memory_available=100Mi
          - -log_level=info
          command:
          - /efficiency_daemon
          env:
          - name: CLUSTER_PROJECT
            value: "751556915102"
          - name: CLUSTER_LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: efficiency-daemon
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/efficiency-daemon:v33.5.0-gke.0@sha256:f24853e48821137fbccac9946c1740bf51c66ba3ff09e2a5f5e35b1aab1ebcbf
          imagePullPolicy: Always
          name: efficiency-daemon
          resources:
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /host/etc/kubernetes/manifests
            name: k8s-manifests
            readOnly: true
          - mountPath: /host/run/containerd/containerd.sock
            name: containerd-sock
          - mountPath: /host/run/nri/nri.sock
            name: nri-sock
          - mountPath: /host/sys/fs/cgroup
            name: sys-cgroup
          - mountPath: /host/sys/devices/system/cpu
            name: sys-cpu
          - mountPath: /config
            name: efficiency-daemon-config
          - mountPath: /host/home/kubernetes/bin/kubelet
            name: kubelet-exec
          - mountPath: /var/run/dbus/system_bus_socket
            name: dbus-sock
          - mountPath: /host/sys/module
            name: sys-module
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: efficiency-daemon
        serviceAccountName: efficiency-daemon
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /etc/kubernetes/manifests
            type: Directory
          name: k8s-manifests
        - hostPath:
            path: /run/containerd/containerd.sock
            type: Socket
          name: containerd-sock
        - hostPath:
            path: /run/nri/nri.sock
            type: Socket
          name: nri-sock
        - hostPath:
            path: /sys/fs/cgroup
            type: Directory
          name: sys-cgroup
        - hostPath:
            path: /sys/devices/system/cpu
            type: Directory
          name: sys-cpu
        - configMap:
            defaultMode: 420
            name: efficiency-daemon-config
          name: efficiency-daemon-config
        - hostPath:
            path: /home/kubernetes/bin/kubelet
            type: File
          name: kubelet-exec
        - hostPath:
            path: /var/run/dbus/system_bus_socket
            type: Socket
          name: dbus-sock
        - hostPath:
            path: /sys/module
            type: Directory
          name: sys-module
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:08:57Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke
    namespace: kube-system
    resourceVersion: "1759887535397647019"
    uid: 9c42f0d8-85ab-4bb8-8df0-16bd843300ae
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.6-gke.0
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: DoesNotExist
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Lt
                  values:
                  - "111"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
        - env:
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:08:57Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-256pd
    namespace: kube-system
    resourceVersion: "1758737594104975013"
    uid: 45f18cf6-cfe4-4f91-b708-04e2baf2edc5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.6-gke.0
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-max-pods-per-node
                  operator: Gt
                  values:
                  - "110"
                - key: cloud.google.com/gke-logging-variant
                  operator: NotIn
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 300Mi
            requests:
              cpu: 650m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=5
          - --max-log-connections=5
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 200m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
        - env:
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:08:57Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: fluentbit-gke
      kubernetes.io/cluster-service: "true"
    name: fluentbit-gke-max
    namespace: kube-system
    resourceVersion: "1758128937837375000"
    uid: 5c749d95-c32e-45fa-a796-582c9cdf8158
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: fluentbit-gke
        k8s-app: fluentbit-gke
    template:
      metadata:
        annotations:
          EnableNodeJournal: "false"
          EnablePodSecurityPolicy: "false"
          SystemOnlyLogging: "false"
          components.gke.io/component-name: fluentbit
          components.gke.io/component-version: 1.33.6-gke.0
          monitoring.gke.io/path: /api/v1/metrics/prometheus
        creationTimestamp: null
        labels:
          component: fluentbit-gke
          k8s-app: fluentbit-gke
          kubernetes.io/cluster-service: "true"
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-logging-variant
                  operator: In
                  values:
                  - MAX_THROUGHPUT
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit:v1.8.1200-gke.14@sha256:fe028dfcf00bdaded6770720de8df8f3d24e841f41a968138ae00d699003aa0f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 2020
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: fluentbit
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: "1"
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
            readOnly: true
          - mountPath: /var/lib/google-fluentbit/pos-files
            name: varlibgooglefluentbitpos
          - mountPath: /fluent-bit/etc/
            name: config-volume
        - command:
          - /fluent-bit-gke-exporter
          - --kubernetes-separator=_
          - --stackdriver-resource-model=k8s
          - --enable-pod-label-discovery
          - --pod-label-dot-replacement=_
          - --split-stdout-stderr
          - --stackdriver-timeout=60s
          - --max-inactivity-duration=600s
          - --stackdriver-address=logging.googleapis.com:443
          - --pool-size=2
          - --max-log-connections=2
          - --logtostderr
          - --node-name=$(NODE_NAME)
          - --pod-cache-size=1024
          - --system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fluent-bit-gke-exporter:v0.27.13-gke.4@sha256:6632976b59b83d20c58bbe391483c45ec2eb8244fb68c71eee0a269fa95031d0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 2021
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: fluentbit-gke
          ports:
          - containerPort: 2021
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: "1"
              memory: 350Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
        - env:
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/fluentbit-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: fluentbit-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250724_2300_RC0@sha256:42875f6f4a2a79ad1f409fb5624eb66709738568e2d1da02f141493dd7ad216f
          imagePullPolicy: IfNotPresent
          name: fluentbit-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /conf
            name: fluentbit-metrics-collector-config-map-vol
        dnsPolicy: Default
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - /bin/bash
          - -c
          - |-
            set -e;
            if [ -d "/var/lib/google-fluentbit/pos-files" ] && [ "$(ls -A /var/lib/google-fluentbit/pos-files)" ]; then
              exit 0;
            fi;
            if [ -d "/var/run/google-fluentbit/pos-files" ] && [ "$(ls -A /var/run/google-fluentbit/pos-files)" ]; then
              rm -rf /var/lib/google-fluentbit/pos-files.staged;
              rm -rf /var/lib/google-fluentbit/pos-files;
              cp -r /var/run/google-fluentbit/pos-files /var/lib/google-fluentbit/pos-files.staged;
              mv /var/lib/google-fluentbit/pos-files.staged /var/lib/google-fluentbit/pos-files;
              rm -rf /var/run/google-fluentbit/pos-files;
            fi
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: fluentbit-gke-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/google-fluentbit
            name: varlibgooglefluentbit
          - mountPath: /var/run/google-fluentbit
            name: varrungooglefluentbit
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: fluentbit-gke
        serviceAccountName: fluentbit-gke
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/run/google-fluentbit
            type: DirectoryOrCreate
          name: varrungooglefluentbit
        - hostPath:
            path: /var/log
            type: Directory
          name: varlog
        - hostPath:
            path: /var/lib/docker/containers
            type: Directory
          name: varlibdockercontainers
        - hostPath:
            path: /var/lib/google-fluentbit
            type: DirectoryOrCreate
          name: varlibgooglefluentbit
        - hostPath:
            path: /var/lib/google-fluentbit/pos-files
            type: DirectoryOrCreate
          name: varlibgooglefluentbitpos
        - configMap:
            defaultMode: 420
            name: fluentbit-gke-config-v1.4.0
          name: config-volume
        - configMap:
            defaultMode: 420
            items:
            - key: fluentbit-metrics-collector-config-data
              path: fluentbit-metrics-collector-config-data.textproto
            name: fluentbit-metrics-collector-config-map
          name: fluentbit-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:04Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent
    namespace: kube-system
    resourceVersion: "1759944750351919022"
    uid: 6b387b22-221b-4e50-882e-f81dc1528ed1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: DoesNotExist
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 6m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 2
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:04Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-10
    namespace: kube-system
    resourceVersion: "1759944739170719004"
    uid: f3e9de13-ee41-4279-840f-84f144d6785d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "10"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 5m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 60Mi
            requests:
              cpu: 6m
              memory: 60Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:04Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-100
    namespace: kube-system
    resourceVersion: "1759944739240687008"
    uid: 4734e981-5574-4dc0-b93a-0078c6dea9e6
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "100"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 5m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 6m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:05Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-20
    namespace: kube-system
    resourceVersion: "1759944739332991005"
    uid: 6fdc4bf7-694c-49ca-ae25-67bfb9cf7ecc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "20"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 5m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 70Mi
            requests:
              cpu: 6m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:05Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-200
    namespace: kube-system
    resourceVersion: "1759944739416063009"
    uid: ff13d67b-0c9a-4c27-a7ba-8fda833a3e0a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "200"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 5m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 250Mi
            requests:
              cpu: 6m
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:05Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-50
    namespace: kube-system
    resourceVersion: "1759944739531855010"
    uid: 2b7be434-fa60-4cce-9457-f6cbe53bac30
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "50"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 5m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 6m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:06Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-scaling-500
    namespace: kube-system
    resourceVersion: "1759944739624287012"
    uid: 1848fc8a-2362-4745-b248-ed89395a7ecd
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: cloud.google.com/gke-metrics-agent-scaling-level
                  operator: In
                  values:
                  - "500"
        containers:
        - command:
          - /otelsvc
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: drop
          - name: LINUX_JOB_ACTION
            value: keep
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8201
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: gke-metrics-agent
          resources:
            limits:
              memory: 550Mi
            requests:
              cpu: 5m
              memory: 550Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /otelsvc
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: GODEBUG
            value: memprofilerate=0
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent:1.15.6-gke.0@sha256:8d3f6c749a8589ac729c66564b41e8babb35c5f181e774cd586c9d2761beeb96
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 550Mi
            requests:
              cpu: 6m
              memory: 550Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/containerd-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kubelet-resource-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 80Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250408.00_p0@sha256:37e96e6fdb960fd60b14599e4aca02f4c4e46dac9700f27500e06f9442ab1046
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: containerd-metrics-collector-config-data
              path: containerd-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: kubelet-resource-metrics-collector-config-data
              path: kubelet-resource-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:06Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: gke-metrics-agent
      k8s-app: gke-metrics-agent
    name: gke-metrics-agent-windows
    namespace: kube-system
    resourceVersion: "1759944739810607018"
    uid: 27c44218-489a-4d86-853a-2d400618e271
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: gke-metrics-agent
        k8s-app: gke-metrics-agent
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gke-metrics-agent
          components.gke.io/component-version: 2.133.22-gke.0
          configHash: ar7UiFWnJvJeKTk2g9MjLpNkyQZt1f03ul94V5AwuTU=
        creationTimestamp: null
        labels:
          component: gke-metrics-agent
          k8s-app: gke-metrics-agent
      spec:
        containers:
        - command:
          - c:\otelsvc.exe
          - --config=/conf/gke-metrics-agent-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8200
          - --uas-metrics-traffic-admission-class=METRICS_AGENT_ACTUATION
          - --enable-uas-sink=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: gke-metrics-agent
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          - name: LINUX_JOB_ACTION
            value: drop
          - name: FEATURE_GENERATE_PROMETHEUS_ALLOWLIST
            value: "true"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.6-gke.0@sha256:e91c4b0088231a6cba000fb0c96e0078d0950ae5111eef182df4c9d06831e254
          imagePullPolicy: IfNotPresent
          name: gke-metrics-agent
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: gke-metrics-agent-config-vol
        - command:
          - c:\otelsvc.exe
          - --config=/conf/core-metrics-exporter-config.yaml
          - --metrics-prefix=
          - --log-profile=prod
          - --log-format=json
          - --metrics-addr=localhost:8202
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBERNETES_SERVICE_HOST
            value: kubernetes.default.svc.cluster.local
          - name: GKE_COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: GKE_COMPONENT_NAME
            value: core-metrics-exporter
          - name: GOMAXPROCS
            value: "1"
          - name: ARG1
            value: ${1}
          - name: ARG2
            value: ${2}
          - name: WINDOWS_JOB_ACTION
            value: keep
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-agent-windows:1.15.6-gke.0@sha256:e91c4b0088231a6cba000fb0c96e0078d0950ae5111eef182df4c9d06831e254
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8203
              scheme: HTTP
            initialDelaySeconds: 50
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 3
          name: core-metrics-exporter
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: core-metrics-exporter-config-vol
        - command:
          - c:\gke_metrics_collector.exe
          env:
          - name: GOMAXPROCS
            value: "1"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubelet-metrics-collector-config-data.textproto,/conf/kubelet-prober-metrics-collector-config-data.textproto,/conf/node-problem-detector-metrics-collector-config-data.textproto,/conf/kube-proxy-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: prometheus-metrics-collector
          - name: HOST_LOOPBACK
            value: 127.0.0.1
          - name: KUBELET_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector-win:20250508_2300_RC0@sha256:bb1f28f3ced9aad8445200862a97a4bd2a269b319d730dba6804c85105147c9d
          imagePullPolicy: IfNotPresent
          name: prometheus-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: prometheus-metrics-collector-config-map-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: gke-metrics-agent
        serviceAccountName: gke-metrics-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: gke-metrics-agent-config
              path: gke-metrics-agent-config.yaml
            name: gke-metrics-agent-conf
          name: gke-metrics-agent-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: core-metrics-exporter-config
              path: core-metrics-exporter-config.yaml
            name: core-metrics-exporter-conf
          name: core-metrics-exporter-config-vol
        - configMap:
            defaultMode: 420
            items:
            - key: kubelet-metrics-collector-config-data
              path: kubelet-metrics-collector-config-data.textproto
            - key: kubelet-prober-metrics-collector-config-data
              path: kubelet-prober-metrics-collector-config-data.textproto
            - key: kube-proxy-metrics-collector-config-data
              path: kube-proxy-metrics-collector-config-data.textproto
            - key: node-problem-detector-metrics-collector-config-data
              path: node-problem-detector-metrics-collector-config-data.textproto
            - key: networkpolicy_antrea-metrics-collector-config-data
              path: networkpolicy_antrea-metrics-collector-config-data.textproto
            name: prometheus-metrics-collector-config-map
          name: prometheus-metrics-collector-config-map-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "6"
    creationTimestamp: "2025-09-17T17:10:00Z"
    generation: 6
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-proxy
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "1760620888893919019"
    uid: 1a93ae5c-beff-4daa-9146-268ea80f0dce
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-proxy
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: kube-proxy
      spec:
        containers:
        - command:
          - /bin/sh
          - -c
          - kube-proxy --cluster-cidr=10.72.0.0/14 --oom-score-adj=-998 --v=2 --feature-gates=UnauthenticatedHTTP2DOSMitigation=true,KMSv1=true,WatchCacheInitializationPostStartHook=true
            --iptables-sync-period=1m --iptables-min-sync-period=10s --ipvs-sync-period=1m
            --ipvs-min-sync-period=10s --detect-local-mode=NodeCIDR 1>>/var/log/kube-proxy.log
            2>&1
          env:
          - name: KUBERNETES_SERVICE_HOST
            value: 10.142.0.2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-proxy-amd64:v1.33.5-gke.1080000
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: varlog
          - mountPath: /run/xtables.lock
            name: xtables-lock
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
          node.kubernetes.io/kube-proxy-ds-ready: "true"
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/log
            type: ""
          name: varlog
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 6
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:09:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: maintenance-handler
      name: maintenance-handler
    name: maintenance-handler
    namespace: kube-system
    resourceVersion: "1758128953684975016"
    uid: d5621764-b718-412b-8949-863db72685b1
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: maintenance-handler
        name: maintenance-handler
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-maintenance-handler
          components.gke.io/component-version: 1.33.6-gke.1
        creationTimestamp: null
        labels:
          k8s-app: maintenance-handler
          name: maintenance-handler
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
              - matchExpressions:
                - key: cloud.google.com/machine-family
                  operator: In
                  values:
                  - z3
                  - h4d
        containers:
        - args:
          - --logtostderr
          - --taint=cloud.google.com/impending-node-termination::NoSchedule
          - --test-env=false
          - --regular-vm-timeout=1h0m0s
          - --tpu-vm-timeout=5m
          - --sf-timeout=10m
          - --immediate-shutdown=true
          - --kubeconfig=/var/lib/kubelet/kubeconfig
          - --in-cluster=false
          command:
          - ./gpu-maintenance-handler
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CLUSTER_PROJECT
            value: "751556915102"
          - name: CLUSTER_LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: CONTAINER_NAME
            value: gpu-maintenance-handler
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gpu-maintenance-handler:1.33.3-gke.1@sha256:07f94dae076fa41d54d2633112c392bbcecfd67cd6c9f87e8d2a8b30d274635e
          imagePullPolicy: IfNotPresent
          name: maintenance-handler
          ports:
          - containerPort: 8526
            name: metrics
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet/kubeconfig
            name: kubelet-credentials
            readOnly: true
          - mountPath: /var/lib/kubelet/pki/
            name: kubelet-certs
            readOnly: true
          - mountPath: /etc/srv/kubernetes/pki
            name: kubelet-pki
            readOnly: true
          - mountPath: /etc/ssl/certs/
            name: ca-certificates
            readOnly: true
          - mountPath: /home/kubernetes/bin/gke-exec-auth-plugin
            name: gke-exec-auth-plugin
            readOnly: true
          - mountPath: /run/dbus
            name: run-dbus
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: maintenance-handler
        serviceAccountName: maintenance-handler
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pki/
            type: Directory
          name: kubelet-certs
        - hostPath:
            path: /var/lib/kubelet/kubeconfig
            type: File
          name: kubelet-credentials
        - hostPath:
            path: /etc/srv/kubernetes/pki/
            type: Directory
          name: kubelet-pki
        - hostPath:
            path: /etc/ssl/certs/
            type: Directory
          name: ca-certificates
        - hostPath:
            path: /home/kubernetes/bin/gke-exec-auth-plugin
            type: File
          name: gke-exec-auth-plugin
        - hostPath:
            path: /run/dbus
            type: Directory
          name: run-dbus
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 5%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:10:03Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metadata-proxy
      kubernetes.io/cluster-service: "true"
      version: v0.1
    name: metadata-proxy-v0.1
    namespace: kube-system
    resourceVersion: "1758129003827119013"
    uid: b374a386-f1d7-4a2e-abf4-1c77de0cf95a
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metadata-proxy
        version: v0.1
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metadata-proxy
          kubernetes.io/cluster-service: "true"
          version: v0.1
      spec:
        containers:
        - args:
          - --addr=0.0.0.0:988
          image: k8s.gcr.io/metadata-proxy:v0.1.12
          imagePullPolicy: IfNotPresent
          name: metadata-proxy
          resources:
            limits:
              cpu: 30m
              memory: 25Mi
            requests:
              cpu: 30m
              memory: 25Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - command:
          - /monitor
          - --stackdriver-prefix=container.googleapis.com/internal/addons
          - --api-override=https://monitoring.googleapis.com/
          - --source=metadata_proxy:http://127.0.0.1:989?whitelisted=request_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: gke.gcr.io/prometheus-to-sd:v0.11.1-gke.1
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources:
            limits:
              cpu: 2m
              memory: 20Mi
            requests:
              cpu: 2m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        hostNetwork: true
        nodeSelector:
          cloud.google.com/metadata-proxy-ready: "true"
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: metadata-proxy
        serviceAccountName: metadata-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
    creationTimestamp: "2025-09-17T17:09:40Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nccl-fastsocket-installer
    name: nccl-fastsocket-installer
    namespace: kube-system
    resourceVersion: "1760620880415007018"
    uid: 1803aacb-fa57-425d-ae2d-007023849f18
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nccl-fastsocket-installer
    template:
      metadata:
        annotations:
          components.gke.io/component-name: nccl-fast-socket-installer
          components.gke.io/component-version: 1.33.1-gke.1
        creationTimestamp: null
        labels:
          k8s-app: nccl-fastsocket-installer
          name: nccl-fastsocket-installer
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: cloud.google.com/gke-nccl-fastsocket
                  operator: Exists
        automountServiceAccountToken: false
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/pause:3.10@sha256:bcbd57ba5653580ec647b16d8163cdd1112df3609129b01f912a8032e48265da
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - sh
          - -c
          - |
            cp /usr/lib/libnccl-net.so $NCCL_INSTALL_DIR/
          env:
          - name: NCCL_INSTALL_DIR
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/fastsocket-installer:1.33.5-gke.1@sha256:0517b4f78e57abb4f2d7c94fc12b0d01e410207f26f45064579d872cc9b1cba9
          imagePullPolicy: IfNotPresent
          name: nccl-fastsocket-installer
          resources:
            limits:
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/nvidia/lib64
            name: nvidia-install-lib64-dir-host
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/kubernetes/bin/nvidia/lib64
            type: DirectoryOrCreate
          name: nvidia-install-lib64-dir-host
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:10Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-cos
    namespace: kube-system
    resourceVersion: "1760620868482719018"
    uid: 198ae95c-7215-4cb7-9f1b-f09a69ba1dd9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:11Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-large-ubuntu
    namespace: kube-system
    resourceVersion: "1760620868909679011"
    uid: f285dcd3-0c2e-4db4-b16b-8fbbe9523cb9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "63"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:09Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-cos
    namespace: kube-system
    resourceVersion: "1760620868346591019"
    uid: cb41c63f-63f5-401e-872f-68cef613022d
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:10Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-medium-ubuntu
    namespace: kube-system
    resourceVersion: "1760620868745007009"
    uid: 700f51d1-c185-40c5-a3c7-19d25a4719d0
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "64"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Gt
                  values:
                  - "15"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 75Mi
            requests:
              cpu: 50m
              memory: 75Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:09Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-cos
    namespace: kube-system
    resourceVersion: "1760620868085311004"
    uid: 258516e2-84fe-40ea-bd52-199194797640
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - cos
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "latest" ]]; then
              echo "latest" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --version=latest --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install --version=latest || exit 1
              fi
            elif [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              if [[ "${CONFIDENTIAL_INSTANCE_TYPE}" == "TDX" ]]; then
                echo "${CONFIDENTIAL_INSTANCE_TYPE}" > /etc/nvidia/confidential_node_type.txt
                echo "Confidential GPU detected, install the driver with nvidia-smi verification disabled."
                /cos-gpu-installer install --skip-nvidia-smi || exit 1
              else
                /cos-gpu-installer install || exit 1
              fi
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /usr/local/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed."
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
          image: cos-nvidia-installer:fixed
          imagePullPolicy: Never
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /build/cos-tools
            name: cos-tools
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /etc/vulkan/icd.d
            name: vulkan-icd-mount
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/lib/cos-tools
            type: DirectoryOrCreate
          name: cos-tools
        - hostPath:
            path: /home/kubernetes/bin/nvidia/vulkan/icd.d
            type: DirectoryOrCreate
          name: vulkan-icd-mount
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
    creationTimestamp: "2025-09-17T17:09:10Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: nvidia-gpu-device-plugin
    name: nvidia-gpu-device-plugin-small-ubuntu
    namespace: kube-system
    resourceVersion: "1760620868623039012"
    uid: 9cb7434a-1e0f-47b0-87c0-a85c45cc31b5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: nvidia-gpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gpu-device-plugin
          components.gke.io/component-version: 1.33.10-gke.2
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
        creationTimestamp: null
        labels:
          k8s-app: nvidia-gpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-accelerator
                  operator: Exists
                - key: gke-no-default-nvidia-gpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
                - key: cloud.google.com/gke-cpu-scaling-level
                  operator: Lt
                  values:
                  - "16"
                - key: cloud.google.com/gke-os-distribution
                  operator: In
                  values:
                  - ubuntu
        containers:
        - command:
          - /usr/bin/nvidia-gpu-device-plugin
          - -logtostderr
          - --enable-container-gpu-metrics
          - --enable-health-monitoring
          env:
          - name: XID_CONFIG
            valueFrom:
              configMapKeyRef:
                key: HealthCriticalXid
                name: xid-config
                optional: true
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: GOMAXPROCS
            value: "1"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-gpu-device-plugin:1.33.3-gke.1@sha256:0feed1caab41bae52cabeca007e43d3bcf665c3ccb2747b3613d20e32872b238
          imagePullPolicy: IfNotPresent
          name: nvidia-gpu-device-plugin
          ports:
          - containerPort: 2112
            name: prometheus
            protocol: TCP
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /proc
            name: proc
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
          - mountPath: /tmp/nvidia-mps
            name: mps
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/nvidia-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: nvidia-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250915_2300_RC0@sha256:43cfbd93622176bda74d799ba8b2d9c8bdcf51ad4366b17354b141412c3abfd7
          imagePullPolicy: IfNotPresent
          name: nvidia-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 65Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: nvidia-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - bash
          - -c
          - |
            LABELS=$( curl --retry 5 -H "Metadata-Flavor:Google" http://metadata.google.internal/computeMetadata/v1/instance/attributes/kube-labels || exit 1 )
            IFS=,; for label in $LABELS; do
              IFS==; read -r LABEL VALUE <<< "$label"
              if [[ "${LABEL}" == "cloud.google.com/gke-gpu-driver-version" ]]; then
                GPU_DRIVER_VERSION=$VALUE
              elif [[ "${LABEL}" == "cloud.google.com/gke-confidential-nodes-instance-type" ]]; then
                CONFIDENTIAL_INSTANCE_TYPE=$VALUE
              fi
            done
            if [[ "${GPU_DRIVER_VERSION}" == "default" ]]; then
              echo "default" > /etc/nvidia/gpu_driver_version_config.txt
              /usr/local/bin/ubuntu-nvidia-install
            else
              echo "disabled" > /etc/nvidia/gpu_driver_version_config.txt
              echo "GPU driver auto installation is disabled."
            fi
            echo "Waiting for GPU driver libraries to be available."
            while ! [[ -f /driver/home/kubernetes/bin/nvidia/lib64/libcuda.so ]]; do
              sleep 5
            done
            echo "GPU driver is installed"
            echo "InitContainer succeeded. Start nvidia-gpu-device-plugin container."
            exit 0
          image: gke-nvidia-installer:fixed
          imagePullPolicy: IfNotPresent
          name: nvidia-driver-installer
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /boot
            name: boot
          - mountPath: /dev
            name: dev
          - mountPath: /root
            name: root-mount
          - mountPath: /driver/home/kubernetes/bin
            name: kubernetes-bin
          - mountPath: /etc/nvidia
            name: nvidia-config
        - command:
          - bash
          - -c
          - |
            GPU_DRIVER_VERSION=$( cat /etc/nvidia/gpu_driver_version_config.txt )
            if [ "${GPU_DRIVER_VERSION}" = "disabled" ]; then
              exit 0
            else
              /usr/bin/gpu_partitioner -logtostderr
            fi
          env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-partition-gpu:1.33.3-gke.1@sha256:fc6cbb1eb6a28ed949720db496a23f134e1811111857a6fdfe71afaea9859d13
          imagePullPolicy: IfNotPresent
          name: partition-gpus
          resources:
            requests:
              cpu: 150m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /dev
            name: dev
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /opt
            name: opt
        - env:
          - name: LD_LIBRARY_PATH
            value: /usr/local/nvidia/lib64
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: ROOT_MOUNT_DIR
            value: /root
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/nvidia-persistenced-installer:1.33.8-gke.0@sha256:2cafc204b0d1c024a3f0ed4f66c89f7f8afd80be8361062f60b2df77ebc5be17
          imagePullPolicy: IfNotPresent
          name: nvidia-persistenced-installer
          resources: {}
          restartPolicy: Always
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local
            name: kubernetes-bin
          - mountPath: /root
            name: root-mount
          - mountPath: /etc/nvidia
            name: nvidia-config
          - mountPath: /dev
            name: dev
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: gpu-device-plugin-sa
        serviceAccountName: gpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: Directory
          name: device-plugin
        - hostPath:
            path: /dev
            type: Directory
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: Directory
          name: pod-resources
        - hostPath:
            path: /proc
            type: Directory
          name: proc
        - hostPath:
            path: /etc/nvidia
            type: DirectoryOrCreate
          name: nvidia-config
        - hostPath:
            path: /tmp/nvidia-mps
            type: DirectoryOrCreate
          name: mps
        - hostPath:
            path: /home/kubernetes/bin
            type: Directory
          name: kubernetes-bin
        - hostPath:
            path: /
            type: Directory
          name: root-mount
        - hostPath:
            path: /opt
            type: Directory
          name: opt
        - configMap:
            defaultMode: 420
            items:
            - key: gpu-device-plugin-metrics-collector-config-data
              path: nvidia-metrics-collector-config-data.textproto
            name: nvidia-metrics-collector-config-map
          name: nvidia-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /boot
            type: Directory
          name: boot
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:09:46Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node
    namespace: kube-system
    resourceVersion: "1759887535054863021"
    uid: 01eedf25-5221-4339-a53f-53a9da124a48
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.22.31
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/pd.csi.storage.gke.io/csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          - --enable-data-cache=true
          - --node-name=$(KUBE_NODE_NAME)
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.1@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 450Mi
            requests:
              cpu: 5m
              memory: 10Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/kubelet
            mountPropagation: Bidirectional
            name: kubelet-dir
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /dev
            name: device-dir
          - mountPath: /etc/udev
            name: udev-rules-etc
          - mountPath: /lib/udev
            name: udev-rules-lib
          - mountPath: /run/udev
            name: udev-socket
          - mountPath: /sys
            name: sys
          - mountPath: /tmp
            name: tmp
          - mountPath: /lib/modules
            name: modules
            readOnly: true
          - mountPath: /etc/lvm
            name: lvm-dir
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/pd.csi.storage.gke.io/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /etc/udev
            type: Directory
          name: udev-rules-etc
        - hostPath:
            path: /lib/udev
            type: Directory
          name: udev-rules-lib
        - hostPath:
            path: /run/udev
            type: Directory
          name: udev-socket
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - emptyDir:
            sizeLimit: 5Mi
          name: tmp
        - emptyDir:
            sizeLimit: 5Mi
          name: lvm-dir
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 3
    desiredNumberScheduled: 3
    numberAvailable: 3
    numberMisscheduled: 0
    numberReady: 3
    observedGeneration: 1
    updatedNumberScheduled: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:09:47Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: gcp-compute-persistent-disk-csi-driver
    name: pdcsi-node-windows
    namespace: kube-system
    resourceVersion: "1758128987410751000"
    uid: 0b463195-f4d1-465a-b2f8-8ac37ea5ca56
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: gcp-compute-persistent-disk-csi-driver
    template:
      metadata:
        annotations:
          components.gke.io/component-name: pdcsi
          components.gke.io/component-version: 0.22.31
        creationTimestamp: null
        labels:
          k8s-app: gcp-compute-persistent-disk-csi-driver
      spec:
        containers:
        - args:
          - --v=5
          - --csi-address=unix://C:\\csi\\csi.sock
          - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\pd.csi.storage.gke.io\\csi.sock
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/csi-node-driver-registrar:v2.9.4-gke.42@sha256:7394b701866d6f10296dd1652ca6f29ab690ea528d75327076d8a4ca5a9f5ca7
          imagePullPolicy: IfNotPresent
          name: csi-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 5m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=unix:/csi/csi.sock
          - --run-controller-service=false
          - --run-node-service=true
          command:
          - /gce-pd-csi-driver
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gcp-compute-persistent-disk-csi-driver:v1.20.3-gke.1@sha256:28a520876088907d87944441c374d4b6abba722df4230465cff40ec5ce5a8efe
          imagePullPolicy: IfNotPresent
          name: gce-pd-driver
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 5m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\var\lib\kubelet
            mountPropagation: None
            name: kubelet-dir
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: \\.\pipe\csi-proxy-volume-v1
            name: csi-proxy-volume-v1
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1
            name: csi-proxy-filesystem-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1
            name: csi-proxy-disk-v1
          - mountPath: \\.\pipe\csi-proxy-disk-v1beta2
            name: csi-proxy-disk-pipe
          - mountPath: \\.\pipe\csi-proxy-volume-v1beta1
            name: csi-proxy-volume-pipe
          - mountPath: \\.\pipe\csi-proxy-filesystem-v1beta1
            name: csi-proxy-filesystem-pipe
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pdcsi-node-sa
        serviceAccountName: pdcsi-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1
            type: ""
          name: csi-proxy-disk-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1
            type: ""
          name: csi-proxy-volume-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1
            type: ""
          name: csi-proxy-filesystem-v1
        - hostPath:
            path: \\.\pipe\csi-proxy-disk-v1beta2
            type: ""
          name: csi-proxy-disk-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-volume-v1beta1
            type: ""
          name: csi-proxy-volume-pipe
        - hostPath:
            path: \\.\pipe\csi-proxy-filesystem-v1beta1
            type: ""
          name: csi-proxy-filesystem-pipe
        - hostPath:
            path: \var\lib\kubelet\plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: \var\lib\kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: \var\lib\kubelet\plugins\pd.csi.storage.gke.io
            type: DirectoryOrCreate
          name: plugin-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 10%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      addonmanager.kubernetes.io/mode: Reconcile
      components.gke.io/layer: addon
      components.gke.io/require-capabilities: all
      deprecated.daemonset.template.generation: "1"
    creationTimestamp: "2025-09-17T17:09:13Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: runsc-metric-server
    name: runsc-metric-server
    namespace: kube-system
    resourceVersion: "1758128953915967018"
    uid: 816b2330-e0f1-4334-8486-8dc48ea7b03b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: runsc-metric-server
    template:
      metadata:
        annotations:
          components.gke.io/component-name: gvisor
          components.gke.io/component-version: 1.33.0
        creationTimestamp: null
        labels:
          k8s-app: runsc-metric-server
      spec:
        containers:
        - command:
          - /runsc-metric-server
          - --metric-server=127.0.0.1:9115
          - --root=/run/containerd/runsc/k8s.io
          - --alsologtostderr=true
          - metric-server
          - --allow-unknown-root=true
          - --exporter-prefix=
          - --pid-file=/run/containerd/runsc/metric-server.pid
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/static:gke_distroless_20250507.00_p0@sha256:a48200056c9dca43b287eb45a1e66530defd7cba072a812738feef1dba4c0237
          imagePullPolicy: IfNotPresent
          name: runsc-metric-server
          resources:
            limits:
              memory: 64Mi
            requests:
              cpu: 3m
              memory: 12Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /runsc-metric-server
            name: runscbin
          - mountPath: /run/containerd/runsc
            name: containerdrunsc
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        nodeSelector:
          kubernetes.io/os: linux
          sandbox.gke.io/runtime: gvisor
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /home/containerd/usr/local/sbin/runsc
            type: File
          name: runscbin
        - hostPath:
            path: /run/containerd/runsc
            type: Directory
          name: containerdrunsc
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
    creationTimestamp: "2025-09-17T17:09:55Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: tpu-device-plugin
    name: tpu-device-plugin
    namespace: kube-system
    resourceVersion: "1760620887224383024"
    uid: 2c218e63-9481-4985-955b-2ea8c5f25d00
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: tpu-device-plugin
    template:
      metadata:
        annotations:
          components.gke.io/component-name: tpu-device-plugin
          components.gke.io/component-version: 1.33.20-gke.1
          prometheus.io/path: /metrics
          prometheus.io/port: "2112"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: tpu-device-plugin
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-tpu-accelerator
                  operator: Exists
                - key: gke-no-default-tpu-device-plugin
                  operator: NotIn
                  values:
                  - "true"
        containers:
        - args:
          - --logtostderr
          - --enable-alloc-wait
          - --enable-flock-wait
          command:
          - /usr/bin/tpu-device-plugin
          env:
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          - name: CLUSTER_PROJECT
            value: "751556915102"
          - name: CLUSTER_LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: CONTAINER_NAME
            value: tpu-device-plugin
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CLOUD_MONITORING_ENDPOINT
            value: monitoring.googleapis.com:443
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/tpu-device-plugin:1.33.11-gke.1@sha256:2c08a72740448d39e1a11a08fad0c0219e8e1926abf2aea05cfc7c458ac7e599
          imagePullPolicy: IfNotPresent
          name: tpu-device-plugin
          resources:
            limits:
              memory: 80Mi
            requests:
              cpu: 80m
              memory: 80Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
          - mountPath: /device-plugin
            name: device-plugin
          - mountPath: /dev
            name: dev
          - mountPath: /var/lib/kubelet/pod-resources
            name: pod-resources
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
        - args:
          - /bin/sh
          - -c
          - ' tail -n+1 -F /tmp/tpu_logs/tpu_driver.INFO & pid=$!; trap "kill -15
            $pid; wait $pid" SIGTERM; wait $pid; '
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250911.00_p0@sha256:f3d06e37b55554dc1d27ea1dd84562003bff14671bfa5776491f1fe8c9c46ae7
          imagePullPolicy: IfNotPresent
          name: sidecar-log-collector
          resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp/tpu_logs
            name: tpu-logs
            readOnly: true
        - args:
          - --logtostderr
          - --census_enabled=false
          - --gid=
          - --uid=
          - --chroot=
          command:
          - vbar_control_agent_files/bin/vbar_control_agent
          env:
          - name: TPU_SKIP_MDS_QUERY
            value: "true"
          - name: TPU_ON_GKE
            value: "true"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/vbar_control_agent@sha256:631a35b6cc0638b3eed328ccea240199043dcfe4bed69c7cfc3d98752faa23fb
          imagePullPolicy: IfNotPresent
          name: vbar-control-agent
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        - command:
          - /tpu_network_optimizer.sh
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/tpu_network_optimizer:tpu_network_optimizer_20250625.00_p0@sha256:0404b7f8ce86b25284a844ee4935c8927cd2572c1d6b07d1d2bd944f215fb80d
          imagePullPolicy: IfNotPresent
          name: tpu-network-optimization
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /sys
            name: sys
          - mountPath: /proc
            name: proc
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: tpu-device-plugin-sa
        serviceAccountName: tpu-device-plugin-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - hostPath:
            path: /var/lib/kubelet/device-plugins
            type: DirectoryOrCreate
          name: device-plugin
        - hostPath:
            path: /dev
            type: DirectoryOrCreate
          name: dev
        - hostPath:
            path: /var/lib/kubelet/pod-resources
            type: DirectoryOrCreate
          name: pod-resources
        - hostPath:
            path: /etc/tpu
            type: DirectoryOrCreate
          name: tpu-env
        - hostPath:
            path: /tmp/tpu_logs
            type: DirectoryOrCreate
          name: tpu-logs
        - hostPath:
            path: /sys
            type: Directory
          name: sys
        - hostPath:
            path: /proc
            type: Directory
          name: proc
    updateStrategy:
      rollingUpdate:
        maxSurge: 1%
        maxUnavailable: 0
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"v1.14.5"},"name":"cert-manager","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager"}},"template":{"metadata":{"annotations":{"prometheus.io/path":"/metrics","prometheus.io/port":"9402","prometheus.io/scrape":"true"},"labels":{"app":"cert-manager","app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cert-manager","app.kubernetes.io/version":"v1.14.5"}},"spec":{"containers":[{"args":["--v=2","--cluster-resource-namespace=$(POD_NAMESPACE)","--leader-election-namespace=kube-system","--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5","--max-concurrent-challenges=60"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-controller:v1.14.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":8,"httpGet":{"path":"/livez","port":"http-healthz","scheme":"HTTP"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":15},"name":"cert-manager-controller","ports":[{"containerPort":9402,"name":"http-metrics","protocol":"TCP"},{"containerPort":9403,"name":"http-healthz","protocol":"TCP"}],"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager"}}}}
    creationTimestamp: "2025-09-20T02:32:38Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.5
    name: cert-manager
    namespace: cert-manager
    resourceVersion: "1759345707268479018"
    uid: 10a53ed0-2955-45ba-b8fe-21b7ffba7946
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.14.5
      spec:
        containers:
        - args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T02:32:39Z"
      lastUpdateTime: "2025-09-20T02:32:44Z"
      message: ReplicaSet "cert-manager-ff4b94468" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:08:27Z"
      lastUpdateTime: "2025-10-01T19:08:27Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"cainjector","app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector","app.kubernetes.io/version":"v1.14.5"},"name":"cert-manager-cainjector","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector"}},"template":{"metadata":{"labels":{"app":"cainjector","app.kubernetes.io/component":"cainjector","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"cainjector","app.kubernetes.io/version":"v1.14.5"}},"spec":{"containers":[{"args":["--v=2","--leader-election-namespace=kube-system"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-cainjector:v1.14.5","imagePullPolicy":"IfNotPresent","name":"cert-manager-cainjector","securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager-cainjector"}}}}
    creationTimestamp: "2025-09-20T02:32:38Z"
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.14.5
    name: cert-manager-cainjector
    namespace: cert-manager
    resourceVersion: "1759345925481007012"
    uid: cf66fe69-f8a6-49f7-a9bc-cb9e20069cb1
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cainjector
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cainjector
          app.kubernetes.io/component: cainjector
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: cainjector
          app.kubernetes.io/version: v1.14.5
      spec:
        containers:
        - args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-cainjector:v1.14.5
          imagePullPolicy: IfNotPresent
          name: cert-manager-cainjector
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-cainjector
        serviceAccountName: cert-manager-cainjector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T02:32:39Z"
      lastUpdateTime: "2025-09-20T02:32:44Z"
      message: ReplicaSet "cert-manager-cainjector-fd9bf654b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:05Z"
      lastUpdateTime: "2025-10-01T19:12:05Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"v1.14.5"},"name":"cert-manager-webhook","namespace":"cert-manager"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook"}},"template":{"metadata":{"labels":{"app":"webhook","app.kubernetes.io/component":"webhook","app.kubernetes.io/instance":"cert-manager","app.kubernetes.io/name":"webhook","app.kubernetes.io/version":"v1.14.5"}},"spec":{"containers":[{"args":["--v=2","--secure-port=10250","--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)","--dynamic-serving-ca-secret-name=cert-manager-webhook-ca","--dynamic-serving-dns-names=cert-manager-webhook","--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)","--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"quay.io/jetstack/cert-manager-webhook:v1.14.5","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":6080,"scheme":"HTTP"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":1},"name":"cert-manager-webhook","ports":[{"containerPort":10250,"name":"https","protocol":"TCP"},{"containerPort":6080,"name":"healthcheck","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":6080,"scheme":"HTTP"},"initialDelaySeconds":5,"periodSeconds":5,"successThreshold":1,"timeoutSeconds":1},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true}}],"enableServiceLinks":false,"nodeSelector":{"kubernetes.io/os":"linux"},"securityContext":{"runAsNonRoot":true,"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cert-manager-webhook"}}}}
    creationTimestamp: "2025-09-20T02:32:39Z"
    generation: 2
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.5
    name: cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "1760212152508463013"
    uid: 633f148b-f576-47e4-8877-599c7909b619
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: webhook
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: webhook
          app.kubernetes.io/version: v1.14.5
      spec:
        containers:
        - args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cert-manager-webhook
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-webhook:v1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager-webhook
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          - containerPort: 6080
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 2m
              memory: 14Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-webhook
        serviceAccountName: cert-manager-webhook
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-01T19:12:14Z"
      lastUpdateTime: "2025-10-01T19:12:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-20T02:32:39Z"
      lastUpdateTime: "2025-10-11T19:49:12Z"
      message: ReplicaSet "cert-manager-webhook-5ff45f766f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:26Z"
    generation: 1
    labels:
      app.kubernetes.io/component: helm-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: helm-controller
    namespace: flux-system
    resourceVersion: "1759345929612191005"
    uid: e9a8de95-3d43-4637-9a63-1c2fc996b16b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: helm-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T00:52:26Z"
      lastUpdateTime: "2025-09-20T00:52:39Z"
      message: ReplicaSet "helm-controller-5c898f4887" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:09Z"
      lastUpdateTime: "2025-10-01T19:12:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:26Z"
    generation: 1
    labels:
      app.kubernetes.io/component: kustomize-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: kustomize-controller
    namespace: flux-system
    resourceVersion: "1759345932664943015"
    uid: ae1ec351-738e-44f6-85c2-2a166af99c2e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kustomize-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T00:52:26Z"
      lastUpdateTime: "2025-09-20T00:52:36Z"
      message: ReplicaSet "kustomize-controller-7bcf986f97" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:12Z"
      lastUpdateTime: "2025-10-01T19:12:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:26Z"
    generation: 1
    labels:
      app.kubernetes.io/component: notification-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: notification-controller
    namespace: flux-system
    resourceVersion: "1759345936955423018"
    uid: 7ed7a46f-ccbc-471f-986e-8fca0561bdd7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: notification-controller
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
      spec:
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T00:52:27Z"
      lastUpdateTime: "2025-09-20T00:52:37Z"
      message: ReplicaSet "notification-controller-5f66f99d4d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:16Z"
      lastUpdateTime: "2025-10-01T19:12:16Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:27Z"
    generation: 1
    labels:
      app.kubernetes.io/component: source-controller
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      control-plane: controller
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: source-controller
    namespace: flux-system
    resourceVersion: "1759345942803375007"
    uid: 85fc0429-6b2e-4295-9883-e573e7be5852
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: source-controller
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: source-controller
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /tmp/.sigstore
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/source-controller:v1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: source-controller
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T00:52:27Z"
      lastUpdateTime: "2025-09-20T00:52:44Z"
      message: ReplicaSet "source-controller-54bc45dc6" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:22Z"
      lastUpdateTime: "2025-10-01T19:12:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: pixelkube
      meta.helm.sh/release-namespace: gitlab-agent-pixelkube
    creationTimestamp: "2025-09-17T18:18:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gitlab-agent
      app.kubernetes.io/version: v18.3.2
      helm.sh/chart: gitlab-agent-2.18.1
    name: pixelkube-gitlab-agent-v2
    namespace: gitlab-agent-pixelkube
    resourceVersion: "1759346278806479002"
    uid: 07c45fcd-633f-4cb0-9f69-bd2880171a30
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: pixelkube
        app.kubernetes.io/name: gitlab-agent
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/token: 55f5c01a246138d54313d5f4851193148f00db36af874870b62f45df4f9eafed
          prometheus.io/path: /metrics
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: pixelkube
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: gitlab-agent
          app.kubernetes.io/version: v18.3.2
          helm.sh/chart: gitlab-agent-2.18.1
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - --token-file=/etc/agentk/secrets/token
          - --kas-address=wss://kas.gitlab.com
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GITLAB_AGENT_TELEMETRY_installation_method
            value: helm-chart
          - name: GITLAB_AGENT_TELEMETRY_helm_chart_version
            value: 2.18.1
          - name: SERVICE_ACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: OCS_ENABLED
            value: "true"
          - name: OCS_SERVICE_ACCOUNT_NAME
            value: pixelkube-gitlab-agent-ocs-scanning-pod-sa
          image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: gitlab-agent
          ports:
          - containerPort: 8080
            name: observability
            protocol: TCP
          - containerPort: 8082
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: service-account-token-volume
            readOnly: true
          - mountPath: /etc/agentk/secrets
            name: secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pixelkube-gitlab-agent
        serviceAccountName: pixelkube-gitlab-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - name: service-account-token-volume
          projected:
            defaultMode: 292
            sources:
            - configMap:
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
            - serviceAccountToken:
                expirationSeconds: 3600
                path: token
        - name: secret-volume
          secret:
            defaultMode: 292
            secretName: pixelkube-gitlab-agent-token
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-17T18:18:33Z"
      lastUpdateTime: "2025-09-17T18:18:46Z"
      message: ReplicaSet "pixelkube-gitlab-agent-v2-7bf855d56f" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:17:58Z"
      lastUpdateTime: "2025-10-01T19:17:58Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-09-17T17:09:31Z"
    generation: 6
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "1760620882322911018"
    uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIakNDQW9hZ0F3SUJBZ0lRUFZaK2kzeTJQQ3FVbVlCNkxHcjkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM1pUVXhaVGxtTnkwME0yVTJMVFF6WkdFdE9UTTJNaTA0TW1ZNU9USTNaR0UwT1RVdwpIaGNOTWpVeE1ERTJNVE14TURBeFdoY05NekF4TURFMU1UTXhNakF4V2pBME1USXdNQVlEVlFRREV5bG5iWEF0CmIzQmxjbUYwYjNJdVoyMXdMWE41YzNSbGJTNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFJM0lzWEM0VnlXQ3RtaU9TemVZVTNKaFo0U25aZ1BmdU1tOQpQenpKTGJzYUpRVHVCUUczUm1BN0YwK0RKVXY1cHVzOFBEVWpxUWZFeWVSRUlrUjFOUndEc0xXQnVYTzZTRkFhCkhIajdoY0lJQlhtMnpXTHlOWHd6am8veldXcXdKSVQxelBIMVVWQlFxZWxVdmlKNHZpVmdSU2pKN1dvWlpHb0EKNU5HUWtLVmJZVXMxcXNjUWRPMXI3Mzh5ZmFSL1QrNWtqNWNIQjNxUFJZTmRDTDI5SGZuQVVVcUxrWTZ2cTlBWQpXOUtBV1pzVDI2alltS3BkREdFcHhBRGhwcFNRSjN4ejVWV2JnbXhZWENYODBRZDJQdU5ueHlBRGFYR0llZ1NuCklvdjhVaE8rQnkwMXczeGp1QnBrSnFac2V4SjJwRkZOY0pUMWw2TUVpTG1SZi9MeFczTUNBd0VBQWFPQnNEQ0IKclRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVWbkdyOWlrTEtycUhzenYvVXZjSkFYdFhvYlF3ClRRWURWUjBSQkVZd1JJSU1aMjF3TFc5d1pYSmhkRzl5Z2hkbmJYQXRiM0JsY21GMGIzSXVaMjF3TFhONWMzUmwKYllJYloyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpnUUI0KzdFSlZxYzBzUWFCSEJ2RlRNRlNHNHh6cXhqaVJ4YlJhZlF0S1FDc3dsMG9INTdxS3M5NzNyN3BBaS9HCnVTOEtZRDc5RS92aHBlVHhYUkpVNTNycXNZVFpKbHdnTjZEaW1ScTdVeW56eEN0dnlmMlpwLzZVTFg5U095ZlQKbmtwcXVPTUVCdUVzOFZIR0p5MjZKbncrb2E3Y1ljY0NPOGd4M1RVMnQ4dzU2OGdsd0Rla3hvdzFMbEdqS1pyaQpJWk1ibUd5dm0zb3VQWGFIRTBhYkwxM0RuNFJnRTg4VDVnbUxMcER3ekwwVFVERGhhcVdDbks5QkZiOHFsNlR2Cm00THhjK0VlVG4zbEJuTEIyeFcraWdyNjJRdTY0UWlLSEF5YjB0VE84RzZSd01OSWFNWnlrODBQWDdCSlFhMkcKcllWdnNNdHE4NURSUEpMaENzRGM5TFF4TEZZdXJrZGluemtVV3FoY3VyWC93NmQyblJORUZNMEM0eDA0UUlXbgpjaEQ4bTFuMG1tSjlOaGJ6OGJ5eVZCVG1MWFZRVXNaQlNKZVpCMDdERVRXQ1JIMVZTSmQvZmlENlREOG9KY2VRCmdBK2dBL0prSjJQZjZiTDM1RnJyckNxUGNlTDZMQ2RTaVNaUFdUangxM2FvVk9pMmp1bmpFVWFpQW9nOEdnS3IKZW1NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBamNpeGNMaFhKWUsyYUk1TE41aFRjbUZuaEtkbUE5KzR5YjAvUE1rdHV4b2xCTzRGCkFiZEdZRHNYVDRNbFMvbW02enc4TlNPcEI4VEo1RVFpUkhVMUhBT3d0WUc1YzdwSVVCb2NlUHVGd2dnRmViYk4KWXZJMWZET09qL05aYXJBa2hQWE04ZlZSVUZDcDZWUytJbmkrSldCRktNbnRhaGxrYWdEazBaQ1FwVnRoU3pXcQp4eEIwN1d2dmZ6SjlwSDlQN21TUGx3Y0hlbzlGZzEwSXZiMGQrY0JSU291UmpxK3IwQmhiMG9CWm14UGJxTmlZCnFsME1ZU25FQU9HbWxKQW5mSFBsVlp1Q2JGaGNKZnpSQjNZKzQyZkhJQU5wY1loNkJLY2lpL3hTRTc0SExUWEQKZkdPNEdtUW1wbXg3RW5ha1VVMXdsUFdYb3dTSXVaRi84dkZiY3dJREFRQUJBb0lCQUExWW0rTkpadUtnQ0QyVgpUMTAvV0hPRzJiQ3g5VGRlSXMzU281WThOYkxNQmpvTmtha1VzR28waGNBMVR4aDB1cEtnQytiUW9ZT2FzWXBzCkkzR2dPc3lWU0ZmOWl4QnFzNDNldDFsb0M3STFBUmJ3N3lwbU5FU3BzYnk1SW15WmdnYUdBTEd4N3VLSmhVVHkKZGlkV2lFZUtaVmd1a2N1UDhsVE1HcjNqUnNwWnlNekkwVmU3TGNFSUFhY0JoR01odGU2YUhlL0p4Q3NvRVNEWgpvUDZIMkRjKzlXeVNZcFRPbllrRStWdDRPaUdadEJKSW9sQnJNaW9sZDRsUEhqSzllT2hOdERyZkhrVW1uSnlECnNJQ0gxZXpETXlkN0tXVXNMd3FSdTZoeGZITytMTUdOajVTdEFFL0VBKzZ6UjJXS1pCclhHR1ZsbXhTWnBGOGsKNmxLVWtNRUNnWUVBeGhUYVFwYkUwMWdzVmpBL1FMcndXNkQ4MVU4Vkd5NlRSd20wSjZaS09GODZsN1dnWlZHUwpXcFlMN1RPdGR3dGw3UEhNY1p6UzQ5eWQ5SndJMUhjMzBEbDB3K0VzdWl4UWVrS1RYMUszdlVMT1E0RWkvS051CjNvb0kvWnFWU2ZHYW5VUVRGb1AxNk03ZUlWVTdrMFdndEpwMFRUVG1HQnVKZXZ4U0FPekNwRk1DZ1lFQXR6M0MKY05iRFZRMWxBR054YXAyeVJDdzBkSnd5cVZLU25va21BR3B6ZlFaK0Q4QXEwdmdOMHd3TVFCL2JreG1nQUxuQgp6aDd5bFlTdm1DdHRwd0VaUjJDWnhWam52aEp0K2hPSmNEUDJZby9wa1I3aVlXdTU1NDRCc0NrcloxeC83dUdICk9DVHVrL1o3SG85RFU1UFRsZkhrS3JNdU9tMUQvTHZvZjFYbmlHRUNnWUVBdlBtUDhROWQ0RE95dU5kMndRNlgKMlJNUm8zKzdKeCtjS3AyN1hraHJiclNMZGNrMXFQUFZxTTZWdWtzZkp2K2MwaDB0YXdhdXUrenlWVGUzeE51bwpSK05JM3Nlb29FVSswaVZKN0J0Q2FER2dEdzdZamladDA2bmxRZTJFbC9NRUN4MnpDRHdGRTRLb3NTeGJsZmxMCmhJSUdpdEg0NHU4Q2ptN0MzVmNEcXprQ2dZQkphV1RNOEQyeGhYeEJlNVdrc1NrS1J1dDlERmIvbnlVK2ZwUEsKOXRydDYvdjFNM2Ywcll4Y1VTZFhTV3dlc3RWM2RQUkFNQVhnQVJpWVRrM1A2cERHRjkyRFF1c1ZLeTBFVTI5cwpsR1RSZC9hTFBXUlV3MlBuY08wY05tSTlOc0hLWW5CWi9mSFhOWmg5MWNlVFpGWVFiS2lNc3R5Q2ErUWhET2RJCm5KSDJBUUtCZ0g0QXlRYnY1NnRyZVhMNVdXVkJYRVY3bUFNa0JnNjhWZUo0bG15NzN0eUFxcm5YWmFTeDBpNkoKWS8wc0lrYnNITTRjVzc0YzFZNkwxdCtOU0JWVFJQZUU0NmlOSDBzakpXU3orYWpmYVhmY1A2QUcxVm1qdExjbQo2VVVlZjFzLzVzOTVEalBXODhXTGMxZjJXWXk1WkFqR3R3VWozejhVNkdIV1Ywc0lveUh4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-01T19:08:34Z"
      lastUpdateTime: "2025-10-01T19:08:34Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-17T17:24:14Z"
      lastUpdateTime: "2025-10-16T13:21:22Z"
      message: ReplicaSet "gmp-operator-689bc8477d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 6
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:31Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: rule-evaluator
    namespace: gmp-system
    resourceVersion: "1758129855049199001"
    uid: 9f98961d-acc0-457d-8fda-72014762d4fe
  spec:
    progressDeadlineSeconds: 600
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.4-gke.0@sha256:3fd60d642225e3f431ff038583a1ef96c98fc48c425024466d9970f9086052fc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    conditions:
    - lastTransitionTime: "2025-09-17T17:24:14Z"
      lastUpdateTime: "2025-09-17T17:24:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-17T17:24:15Z"
      lastUpdateTime: "2025-09-17T17:24:15Z"
      message: ReplicaSet "rule-evaluator-6c5bc8d6dc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-09-17T17:08:55Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: event-exporter
      kubernetes.io/cluster-service: "true"
      version: v0.4.0
    name: event-exporter-gke
    namespace: kube-system
    resourceVersion: "1759345948122463018"
    uid: d39d2d27-b091-43a1-81cb-9cb8f1256b3d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: event-exporter
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.9-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-17T17:24:25Z"
      lastUpdateTime: "2025-10-01T18:27:44Z"
      message: ReplicaSet "event-exporter-gke-cbf579745" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:12:28Z"
      lastUpdateTime: "2025-10-01T19:12:28Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:16Z"
    generation: 37
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "1760620880223631024"
    uid: e0df8ae9-9784-49a6-96a1-d0aacdffb0c4
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.7
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.142.0.2
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-10-01T19:17:46Z"
      lastUpdateTime: "2025-10-01T19:17:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-17T17:24:12Z"
      lastUpdateTime: "2025-10-16T13:21:20Z"
      message: ReplicaSet "konnectivity-agent-59454d54c4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 37
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:18Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: konnectivity-agent-autoscaler
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "1760620874316575004"
    uid: 1f3980ec-0cab-4cf3-96f2-ec16f76e31c7
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.7
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.17@sha256:3b9d333418723c07ac6ee488d517fa9a9afddd20a8c3b91ac73b5de2ba736f83
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-10-01T19:17:49Z"
      lastUpdateTime: "2025-10-01T19:17:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-09-17T17:24:12Z"
      lastUpdateTime: "2025-10-16T13:21:14Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-59849cb6b9" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:08:36Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
    name: kube-dns
    namespace: kube-system
    resourceVersion: "1759346281255615022"
    uid: 81524424-9730-44ed-b2bf-dfdf457ec0f7
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns
    strategy:
      rollingUpdate:
        maxSurge: 10%
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.6
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.7@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.7@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.7@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250821_2300_RC0@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: Default
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-09-17T17:24:15Z"
      lastUpdateTime: "2025-09-24T18:13:30Z"
      message: ReplicaSet "kube-dns-5948965fdd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:18:01Z"
      lastUpdateTime: "2025-10-01T19:18:01Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 3
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:20Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns-autoscaler
      kubernetes.io/cluster-service: "true"
    name: kube-dns-autoscaler
    namespace: kube-system
    resourceVersion: "1759345913366335023"
    uid: d576a9f7-c87c-4f7a-a35d-ea941e013bec
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.6
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.13@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-17T17:24:14Z"
      lastUpdateTime: "2025-09-24T18:13:25Z"
      message: ReplicaSet "kube-dns-autoscaler-6d46488bd4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:11:53Z"
      lastUpdateTime: "2025-10-01T19:11:53Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:23Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBC
    name: l7-default-backend
    namespace: kube-system
    resourceVersion: "1759346252948095021"
    uid: 337c60c6-fdd0-4c70-9f2b-81422679ad9d
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: glbc
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.36.4-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-17T17:24:00Z"
      lastUpdateTime: "2025-10-01T18:27:49Z"
      message: ReplicaSet "l7-default-backend-7dc957ffb5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:17:32Z"
      lastUpdateTime: "2025-10-01T19:17:32Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:37Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      version: v1.33.0
    name: metrics-server-v1.33.0
    namespace: kube-system
    resourceVersion: "1759345781845535002"
    uid: 394bc4ac-363a-47bb-890d-135874c7fcc4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: metrics-server
        version: v1.33.0
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.45@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-17T17:25:03Z"
      lastUpdateTime: "2025-09-17T17:25:05Z"
      message: ReplicaSet "metrics-server-v1.33.0-77d549c684" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:09:41Z"
      lastUpdateTime: "2025-10-01T19:09:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "18"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"pixelated-app","version":"v1.0.0"},"name":"pixelated","namespace":"pixelated"},"spec":{"replicas":3,"selector":{"matchLabels":{"app":"pixelated-app"}},"template":{"metadata":{"labels":{"app":"pixelated-app","version":"v1.0.0"}},"spec":{"automountServiceAccountToken":false,"containers":[{"env":[{"name":"NODE_ENV","value":"production"},{"name":"HOST","value":"0.0.0.0"},{"name":"PORT","value":"4321"}],"image":"registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/api/health","port":4321},"initialDelaySeconds":30,"periodSeconds":10,"timeoutSeconds":5},"name":"pixelated","ports":[{"containerPort":4321,"name":"http"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/api/health","port":4321},"initialDelaySeconds":10,"periodSeconds":5,"timeoutSeconds":5},"resources":{"limits":{"cpu":"500m","memory":"512Mi"},"requests":{"cpu":"250m","memory":"256Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsGroup":10001,"runAsNonRoot":true,"runAsUser":10001},"startupProbe":{"failureThreshold":12,"httpGet":{"path":"/api/health","port":4321},"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":5},"volumeMounts":[{"mountPath":"/app/config","name":"config-volume","readOnly":true}]}],"imagePullSecrets":[{"name":"regcred"}],"securityContext":{"fsGroup":10001,"runAsGroup":10001,"runAsUser":10001,"seccompProfile":{"type":"RuntimeDefault"}},"volumes":[{"configMap":{"name":"pixelated-config"},"name":"config-volume"}]}}}}
    creationTimestamp: "2025-10-04T02:09:51Z"
    generation: 21
    labels:
      app: pixelated-app
      version: v1.0.0
    name: pixelated
    namespace: pixelated
    resourceVersion: "1759887300414463020"
    uid: 22abfba1-748b-4831-a324-eeda12f1b09b
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: pixelated-app
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-10-04T08:50:02Z"
      lastUpdateTime: "2025-10-08T01:20:32Z"
      message: ReplicaSet "pixelated-79db7959d9" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-08T01:35:00Z"
      lastUpdateTime: "2025-10-08T01:35:00Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 21
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: traefik
    creationTimestamp: "2025-09-20T02:28:14Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-37.1.1
    name: traefik
    namespace: traefik
    resourceVersion: "1759346259396719009"
    uid: 9c7a503f-26cb-4830-abaf-0544448ef87b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-traefik
        app.kubernetes.io/name: traefik
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-traefik
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-37.1.1
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --entryPoints.metrics.address=:9100/tcp
          - --entryPoints.traefik.address=:8080/tcp
          - --entryPoints.web.address=:8000/tcp
          - --entryPoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowEmptyServices=true
          - --providers.kubernetesingress
          - --providers.kubernetesingress.allowEmptyServices=true
          - --providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik
          - --entryPoints.websecure.http.tls=true
          - --log.level=INFO
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/traefik:v3.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 8080
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-09-20T02:28:14Z"
      lastUpdateTime: "2025-09-20T02:28:25Z"
      message: ReplicaSet "traefik-7cf7bc96dd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-10-01T19:17:39Z"
      lastUpdateTime: "2025-10-01T19:17:39Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T02:32:39Z"
    generation: 1
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: fd9bf654b
    name: cert-manager-cainjector-fd9bf654b
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager-cainjector
      uid: cf66fe69-f8a6-49f7-a9bc-cb9e20069cb1
    resourceVersion: "1759345925445439004"
    uid: 394e5209-2f07-4c0f-a71c-27b81fd49f22
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cainjector
        pod-template-hash: fd9bf654b
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cainjector
          app.kubernetes.io/component: cainjector
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: cainjector
          app.kubernetes.io/version: v1.14.5
          pod-template-hash: fd9bf654b
      spec:
        containers:
        - args:
          - --v=2
          - --leader-election-namespace=kube-system
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-cainjector:v1.14.5
          imagePullPolicy: IfNotPresent
          name: cert-manager-cainjector
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-cainjector
        serviceAccountName: cert-manager-cainjector
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T02:32:39Z"
    generation: 1
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: ff4b94468
    name: cert-manager-ff4b94468
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager
      uid: 10a53ed0-2955-45ba-b8fe-21b7ffba7946
    resourceVersion: "1759345707228271019"
    uid: ad0ea625-13b2-4d0a-8272-04011ff1e8c2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: cert-manager
        pod-template-hash: ff4b94468
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9402"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: cert-manager
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: cert-manager
          app.kubernetes.io/version: v1.14.5
          pod-template-hash: ff4b94468
      spec:
        containers:
        - args:
          - --v=2
          - --cluster-resource-namespace=$(POD_NAMESPACE)
          - --leader-election-namespace=kube-system
          - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.5
          - --max-concurrent-challenges=60
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-controller:v1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: http-healthz
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: cert-manager-controller
          ports:
          - containerPort: 9402
            name: http-metrics
            protocol: TCP
          - containerPort: 9403
            name: http-healthz
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager
        serviceAccountName: cert-manager
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-11T19:48:58Z"
    generation: 1
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: 5ff45f766f
    name: cert-manager-webhook-5ff45f766f
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager-webhook
      uid: 633f148b-f576-47e4-8877-599c7909b619
    resourceVersion: "1760212152202111000"
    uid: d286a24f-fb4e-45f7-b3eb-05524c6e218a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
        pod-template-hash: 5ff45f766f
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: webhook
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: webhook
          app.kubernetes.io/version: v1.14.5
          pod-template-hash: 5ff45f766f
      spec:
        containers:
        - args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cert-manager-webhook
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-webhook:v1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager-webhook
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          - containerPort: 6080
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 2m
              memory: 14Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-webhook
        serviceAccountName: cert-manager-webhook
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T02:32:39Z"
    generation: 2
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.5
      pod-template-hash: 7749797f6
    name: cert-manager-webhook-7749797f6
    namespace: cert-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cert-manager-webhook
      uid: 633f148b-f576-47e4-8877-599c7909b619
    resourceVersion: "1760212152476095021"
    uid: 595fe393-d650-48fc-a1c2-bf02d48c5000
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/name: webhook
        pod-template-hash: 7749797f6
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: webhook
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: cert-manager
          app.kubernetes.io/name: webhook
          app.kubernetes.io/version: v1.14.5
          pod-template-hash: 7749797f6
      spec:
        containers:
        - args:
          - --v=2
          - --secure-port=10250
          - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
          - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
          - --dynamic-serving-dns-names=cert-manager-webhook
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
          - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/jetstack/cert-manager-webhook:v1.14.5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: cert-manager-webhook
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          - containerPort: 6080
            name: healthcheck
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        enableServiceLinks: false
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cert-manager-webhook
        serviceAccountName: cert-manager-webhook
        terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:26Z"
    generation: 1
    labels:
      app: helm-controller
      pod-template-hash: 5c898f4887
    name: helm-controller-5c898f4887
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: helm-controller
      uid: e9a8de95-3d43-4637-9a63-1c2fc996b16b
    resourceVersion: "1759345929569823017"
    uid: fc42ab9d-c9b9-40b7-b599-b7f5b4850570
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: helm-controller
        pod-template-hash: 5c898f4887
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: helm-controller
          pod-template-hash: 5c898f4887
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/helm-controller:v1.3.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: helm-controller
        serviceAccountName: helm-controller
        terminationGracePeriodSeconds: 600
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:26Z"
    generation: 1
    labels:
      app: kustomize-controller
      pod-template-hash: 7bcf986f97
    name: kustomize-controller-7bcf986f97
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kustomize-controller
      uid: ae1ec351-738e-44f6-85c2-2a166af99c2e
    resourceVersion: "1759345932626479021"
    uid: e71bae62-13bf-4cda-92e5-1f0de314e8b9
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: kustomize-controller
        pod-template-hash: 7bcf986f97
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: kustomize-controller
          pod-template-hash: 7bcf986f97
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/kustomize-controller:v1.6.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: kustomize-controller
        serviceAccountName: kustomize-controller
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:27Z"
    generation: 1
    labels:
      app: notification-controller
      pod-template-hash: 5f66f99d4d
    name: notification-controller-5f66f99d4d
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: notification-controller
      uid: 7ed7a46f-ccbc-471f-986e-8fca0561bdd7
    resourceVersion: "1759345936868927008"
    uid: e0643e09-5491-45a8-8321-8882216758d7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: notification-controller
        pod-template-hash: 5f66f99d4d
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: notification-controller
          pod-template-hash: 5f66f99d4d
      spec:
        containers:
        - args:
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/notification-controller:v1.6.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 9292
            name: http-webhook
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: temp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: notification-controller
        serviceAccountName: notification-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: temp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "1"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-20T00:52:27Z"
    generation: 1
    labels:
      app: source-controller
      pod-template-hash: 54bc45dc6
    name: source-controller-54bc45dc6
    namespace: flux-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: source-controller
      uid: 85fc0429-6b2e-4295-9883-e573e7be5852
    resourceVersion: "1759345942758639024"
    uid: 9f6bd5c1-603a-44a3-87a4-1b92027d5b00
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: source-controller
        pod-template-hash: 54bc45dc6
    template:
      metadata:
        annotations:
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: source-controller
          pod-template-hash: 54bc45dc6
      spec:
        containers:
        - args:
          - --events-addr=http://notification-controller.flux-system.svc.cluster.local./
          - --watch-all-namespaces=true
          - --log-level=info
          - --log-encoding=json
          - --enable-leader-election
          - --storage-path=/data
          - --storage-adv-addr=source-controller.$(RUNTIME_NAMESPACE).svc.cluster.local.
          env:
          - name: RUNTIME_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /tmp/.sigstore
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.cpu
          - name: GOMEMLIMIT
            valueFrom:
              resourceFieldRef:
                containerName: manager
                divisor: "0"
                resource: limits.memory
          image: ghcr.io/fluxcd/source-controller:v1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: manager
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          - containerPort: 8080
            name: http-prom
            protocol: TCP
          - containerPort: 9440
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1337
        serviceAccount: source-controller
        serviceAccountName: source-controller
        terminationGracePeriodSeconds: 10
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: pixelkube
      meta.helm.sh/release-namespace: gitlab-agent-pixelkube
    creationTimestamp: "2025-09-17T18:18:33Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: pixelkube
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: gitlab-agent
      app.kubernetes.io/version: v18.3.2
      helm.sh/chart: gitlab-agent-2.18.1
      pod-template-hash: 7bf855d56f
    name: pixelkube-gitlab-agent-v2-7bf855d56f
    namespace: gitlab-agent-pixelkube
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelkube-gitlab-agent-v2
      uid: 07c45fcd-633f-4cb0-9f69-bd2880171a30
    resourceVersion: "1759346278765231004"
    uid: b8f02c8a-b889-470a-aecb-d3e7f986f839
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/instance: pixelkube
        app.kubernetes.io/name: gitlab-agent
        pod-template-hash: 7bf855d56f
    template:
      metadata:
        annotations:
          checksum/token: 55f5c01a246138d54313d5f4851193148f00db36af874870b62f45df4f9eafed
          prometheus.io/path: /metrics
          prometheus.io/port: "8080"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: pixelkube
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: gitlab-agent
          app.kubernetes.io/version: v18.3.2
          helm.sh/chart: gitlab-agent-2.18.1
          pod-template-hash: 7bf855d56f
      spec:
        automountServiceAccountToken: false
        containers:
        - args:
          - --token-file=/etc/agentk/secrets/token
          - --kas-address=wss://kas.gitlab.com
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: GITLAB_AGENT_TELEMETRY_installation_method
            value: helm-chart
          - name: GITLAB_AGENT_TELEMETRY_helm_chart_version
            value: 2.18.1
          - name: SERVICE_ACCOUNT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.serviceAccountName
          - name: OCS_ENABLED
            value: "true"
          - name: OCS_SERVICE_ACCOUNT_NAME
            value: pixelkube-gitlab-agent-ocs-scanning-pod-sa
          image: registry.gitlab.com/gitlab-org/cluster-integration/gitlab-agent/agentk:v18.3.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: gitlab-agent
          ports:
          - containerPort: 8080
            name: observability
            protocol: TCP
          - containerPort: 8082
            name: api
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
            name: service-account-token-volume
            readOnly: true
          - mountPath: /etc/agentk/secrets
            name: secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: pixelkube-gitlab-agent
        serviceAccountName: pixelkube-gitlab-agent
        terminationGracePeriodSeconds: 30
        volumes:
        - name: service-account-token-volume
          projected:
            defaultMode: 292
            sources:
            - configMap:
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
            - serviceAccountToken:
                expirationSeconds: 3600
                path: token
        - name: secret-volume
          secret:
            defaultMode: 292
            secretName: pixelkube-gitlab-agent-token
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:31Z"
    generation: 2
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 66c9c7c9db
    name: gmp-operator-66c9c7c9db
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1758217067464703022"
    uid: c9d2b586-e074-442a-830e-554bb7e99db6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 66c9c7c9db
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 66c9c7c9db
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQVBqMnREUlhPOGJOQkJPd1YweFprUXd3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa04yVTFNV1U1WmpjdE5ETmxOaTAwTTJSaExUa3pOakl0T0RKbU9Ua3lOMlJoTkRrMQpNQjRYRFRJMU1Ea3hOekUzTURNeE4xb1hEVE13TURreE5qRTNNRFV4TjFvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzFIL29kOVlKTmFtbVcrVWF5NTFGYW9UOHVqRWFoQklsMwp3TUhLd1NYNEpYQXl3MUZwU2h3QmkwdUlaYlBWd08waXBnMGN2ekkzZ1F6R0IyS21QcFhpUjNrZXFoSkFRQXBjCkFEc0RNYTd5ZjU1c0ZzQmMvaTFCamZBT3YwaWNIMjhSZFJ5U3lzai9rV3MveGxnbjFZUkFMdi80d1VoNHFyNkUKWm5kdUNMUkU5VFFVMVdJSTY1TXFJb1NyWFk2aGpTOUl0Nk1jcGlwVllkcnpZTXNnNTludkZXNCtuQjZnUUd2cwpHR0cwT0NwWHVPeWEvZDJaZXRaejdQV3ZDVVovYXV1QlM2VEFweXRvdHcydktzdTMwQStqTThROTA3T3dHMXZRCnBaY29DbmRKSTlvWnloOUlkdkpWK3ErZE5DMWs4SDVtZWNUaHZvZTc0MzVZYk4yQm8yK0hBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRlp4cS9ZcEN5cTZoN003LzFMM0NRRjdWNkcwCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBUkFhc0tsbFF0cGM3UTkwQWNqT0NMWTIxRHhDK2tEZUlKb2lBeXphd1NhbCs5L3dFQkxnYVFGUVFTVE9ZCjJSQk5TMG9OWVhQNHU4N0xrMHUzMllYZ2htN0NZbS9KS1lMY3Mrd0RDY21RZDBXSDFjNTVQOHFPY3pTSUZkL2wKLzFEaG9USVF3T3hDeXFaMGpMOEkydm80M3E2TXh0QWRUNnA0UW9DdTJZUTB1QnFPOHhjRkRWaHkzZ1ZCYnhPMQpodHlOQ1JYczdFZEpIWWsrK1hlQzR6cWJPcFZoLzFSN3BMYXBVNXVhMkJHNmN3Nk95N2xLeHc3MEdwckZlaVR2CnljZHNERUVOcThZT1VQNFh0a3p2Q1JTY0ZDWUhyQ3pQYjhxOFNIdWNtNExBM2xvamRLVUJ6V1NxcTNINjF1ckUKemRCUnpZMy9QZXlaUnZlc05USzlXT3ZTbTRyclkvR3BtN3hBWXJzVGQzYTFuaWtXeUtoYktTT0FndVNxN1ZxQgpBS01TMzd4VTZMdzFOekVuUm5TV1ZYOHlKNEhYVTYxMXZwNEc4aFNDVGx5a214QVh3aWV6eC9ud0Q2NzZXQzFDClNaamRaMDhjdGFmcW4rOFFsWXc0QXVuRkszeWxUTmpKM2xHcGd0cWk1Z1orczE1MHRWdHJhQlRTSmp2VzdvTUUKZFdDbgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdFIvNkhmV0NUV3BwbHZsR3N1ZFJXcUUvTG94R29RU0pkOERCeXNFbCtDVndNc05SCmFVb2NBWXRMaUdXejFjRHRJcVlOSEw4eU40RU14Z2RpcGo2VjRrZDVIcW9TUUVBS1hBQTdBekd1OG4rZWJCYkEKWFA0dFFZM3dEcjlJbkI5dkVYVWNrc3JJLzVGclA4WllKOVdFUUM3LytNRkllS3EraEdaM2JnaTBSUFUwRk5WaQpDT3VUS2lLRXExMk9vWTB2U0xlakhLWXFWV0hhODJETElPZlo3eFZ1UHB3ZW9FQnI3QmhodERncVY3anNtdjNkCm1YcldjK3oxcndsR2YycnJnVXVrd0tjcmFMY05yeXJMdDlBUG96UEVQZE96c0J0YjBLV1hLQXAzU1NQYUdjb2YKU0hieVZmcXZuVFF0WlBCK1pubkU0YjZIdStOK1dHemRnYU52aHdJREFRQUJBb0lCQUFQUFRPRUZjWHkwWU0weQpxQmlLUWcxUWQvWkFNQm9oOE14S2l5ajdJQlBVb2NRSGxMWk12ME1QRFlNc2RIaHFDdkxnSUVWN0JoRGh6NFY0CjBVdmk1Qjh5MXFyYzgrNVRDb1M5NG4vaU15WlpwZGpyTDVlbEp3bUtkVUt5SmxKV1hPMDJrK2ZJaVNyTEFjRUIKS0lpSjlyS3M2bWh1bEZvcGFVRjZzRWRwdW5UNjFFWlpPZVE5Yml0MHo2dVdkQWt4UGRCcVd6bm9hTjFhNytrWQovblI5bTNwTlptK2xJd3lrSUxZdXRLRy8ra2tHMGpoV2VBQ3diK20rWHlrSVFxRisxOStmNjd5Z2NNSkRIYVRFCkU2TUFML2o1N3lHK1dZRW9ZOXhzamFCSTdRaVBrdXNKdXh6MFdVbVB2MEd2UnFvYkJiODJOQllCb0p1V2tqSkoKd0dMMVNTRUNnWUVBN3g1TXNwaVFmbGdKZkpRQ1ZDRWcyZ1FBcDgzN2pCYkpyUmJib0lvR2EvZWtnZlkzbEN6bQp3MUZJM3ZMQ3A3VWdJTUJUVk5HTWd6SWI5SCtnbWNwTE5PKzcrdy9RcC9ub08zSmZ0cy9UYWdUWkI3ckxlcHZjCnZzSTZrZXRqeCtUUk5mUUNLNU0xS01rZmU2STVBaG9qNE00Ylk1dkdiQ2hZY1dOVzNEeUpYdUVDZ1lFQXdlbUkKdTh0NnF5eGJIdHYvMWpFUzZiYTFZSGc5ZHFPb01aR3llRGY0dmU1ZE1ZczhCU2NWY0JkdnorMFVrRWl4b3JDcApLODNpZzRJRTFkY0dyc3V4UFpYSEgydm9MVkdzd3RoNExqMjViTnFpWm1jV0d1WmszYmUxTTdHN0paa2pHb1F2CnZEMUx4VXVxZlBvTDZUT2t6dk5JVVhMMnlWd3JLLzgzZmphVm8yY0NnWUFIcVh6anJDZlZKSlVKUE9UbU5UbU0KUXR5U2cvTXZoZnRvWkhjZEtjOFMzcGlTNFlUZVpxSHVXRWh4Zkczb1dkRnh1emZ3VzlhWXpaNC9zMmMrQmxGcQpuTlAxTTRpSUdXWHJvYnFYYlFsbE9FcU1DTnhFVFlKQlNvLzk1UUVKZ3JlQmR4UXF1VWpXeWJzTWh5STBnd25yClJpOXlmYWRhQitEdG9UVkRVVjFGZ1FLQmdBd01YcHFNZ2dxd3J0aTBBcWxrVXpDQ1ViSzB4ZHpoUGtvV0syaWMKMGErN1o3NzBUNzVpTjBySHFnTFpVRFhHem9LMVIwMlpkVUdHaXBaZXplTitkSHpIR2FBeUxETGtxRDlUQStTYgpvVEhLUTl6bytzNmhFaE5VbnNXZmZXbFFvb1c3UU53SlV2UG5SNmlNUU1FMG5FRGZqTmJDdGVLOC8xRzBnZFl0CnZnNXhBb0dBWHNkMFZkSDBhazlRbkxTdGFNQ2ZKRTlPalN2K1pEaGJtOUlaVWJCWG8ydmgyNnNFY1c2NnhUbnEKbFdlRjRCT084NW5BeUVnbnphZEV2bDRDY2lmbkF4QXFVN0duZWJGQzdnMHV5ajcva3RqNHBxeEYzTWttbVczMApINTJRUVRvTkc4Z21kemNkSVg1MURINEl0TnZ2eEI1VEZFTFNiQ3JqeGhGRUlsV2lkSE09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-10-16T13:21:16Z"
    generation: 1
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 689bc8477d
    name: gmp-operator-689bc8477d
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1760620881267855000"
    uid: ccf03bd5-631b-4d03-8433-4fcf91bc036c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 689bc8477d
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 689bc8477d
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIakNDQW9hZ0F3SUJBZ0lRUFZaK2kzeTJQQ3FVbVlCNkxHcjkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM1pUVXhaVGxtTnkwME0yVTJMVFF6WkdFdE9UTTJNaTA0TW1ZNU9USTNaR0UwT1RVdwpIaGNOTWpVeE1ERTJNVE14TURBeFdoY05NekF4TURFMU1UTXhNakF4V2pBME1USXdNQVlEVlFRREV5bG5iWEF0CmIzQmxjbUYwYjNJdVoyMXdMWE41YzNSbGJTNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFJM0lzWEM0VnlXQ3RtaU9TemVZVTNKaFo0U25aZ1BmdU1tOQpQenpKTGJzYUpRVHVCUUczUm1BN0YwK0RKVXY1cHVzOFBEVWpxUWZFeWVSRUlrUjFOUndEc0xXQnVYTzZTRkFhCkhIajdoY0lJQlhtMnpXTHlOWHd6am8veldXcXdKSVQxelBIMVVWQlFxZWxVdmlKNHZpVmdSU2pKN1dvWlpHb0EKNU5HUWtLVmJZVXMxcXNjUWRPMXI3Mzh5ZmFSL1QrNWtqNWNIQjNxUFJZTmRDTDI5SGZuQVVVcUxrWTZ2cTlBWQpXOUtBV1pzVDI2alltS3BkREdFcHhBRGhwcFNRSjN4ejVWV2JnbXhZWENYODBRZDJQdU5ueHlBRGFYR0llZ1NuCklvdjhVaE8rQnkwMXczeGp1QnBrSnFac2V4SjJwRkZOY0pUMWw2TUVpTG1SZi9MeFczTUNBd0VBQWFPQnNEQ0IKclRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVWbkdyOWlrTEtycUhzenYvVXZjSkFYdFhvYlF3ClRRWURWUjBSQkVZd1JJSU1aMjF3TFc5d1pYSmhkRzl5Z2hkbmJYQXRiM0JsY21GMGIzSXVaMjF3TFhONWMzUmwKYllJYloyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpnUUI0KzdFSlZxYzBzUWFCSEJ2RlRNRlNHNHh6cXhqaVJ4YlJhZlF0S1FDc3dsMG9INTdxS3M5NzNyN3BBaS9HCnVTOEtZRDc5RS92aHBlVHhYUkpVNTNycXNZVFpKbHdnTjZEaW1ScTdVeW56eEN0dnlmMlpwLzZVTFg5U095ZlQKbmtwcXVPTUVCdUVzOFZIR0p5MjZKbncrb2E3Y1ljY0NPOGd4M1RVMnQ4dzU2OGdsd0Rla3hvdzFMbEdqS1pyaQpJWk1ibUd5dm0zb3VQWGFIRTBhYkwxM0RuNFJnRTg4VDVnbUxMcER3ekwwVFVERGhhcVdDbks5QkZiOHFsNlR2Cm00THhjK0VlVG4zbEJuTEIyeFcraWdyNjJRdTY0UWlLSEF5YjB0VE84RzZSd01OSWFNWnlrODBQWDdCSlFhMkcKcllWdnNNdHE4NURSUEpMaENzRGM5TFF4TEZZdXJrZGluemtVV3FoY3VyWC93NmQyblJORUZNMEM0eDA0UUlXbgpjaEQ4bTFuMG1tSjlOaGJ6OGJ5eVZCVG1MWFZRVXNaQlNKZVpCMDdERVRXQ1JIMVZTSmQvZmlENlREOG9KY2VRCmdBK2dBL0prSjJQZjZiTDM1RnJyckNxUGNlTDZMQ2RTaVNaUFdUangxM2FvVk9pMmp1bmpFVWFpQW9nOEdnS3IKZW1NPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBamNpeGNMaFhKWUsyYUk1TE41aFRjbUZuaEtkbUE5KzR5YjAvUE1rdHV4b2xCTzRGCkFiZEdZRHNYVDRNbFMvbW02enc4TlNPcEI4VEo1RVFpUkhVMUhBT3d0WUc1YzdwSVVCb2NlUHVGd2dnRmViYk4KWXZJMWZET09qL05aYXJBa2hQWE04ZlZSVUZDcDZWUytJbmkrSldCRktNbnRhaGxrYWdEazBaQ1FwVnRoU3pXcQp4eEIwN1d2dmZ6SjlwSDlQN21TUGx3Y0hlbzlGZzEwSXZiMGQrY0JSU291UmpxK3IwQmhiMG9CWm14UGJxTmlZCnFsME1ZU25FQU9HbWxKQW5mSFBsVlp1Q2JGaGNKZnpSQjNZKzQyZkhJQU5wY1loNkJLY2lpL3hTRTc0SExUWEQKZkdPNEdtUW1wbXg3RW5ha1VVMXdsUFdYb3dTSXVaRi84dkZiY3dJREFRQUJBb0lCQUExWW0rTkpadUtnQ0QyVgpUMTAvV0hPRzJiQ3g5VGRlSXMzU281WThOYkxNQmpvTmtha1VzR28waGNBMVR4aDB1cEtnQytiUW9ZT2FzWXBzCkkzR2dPc3lWU0ZmOWl4QnFzNDNldDFsb0M3STFBUmJ3N3lwbU5FU3BzYnk1SW15WmdnYUdBTEd4N3VLSmhVVHkKZGlkV2lFZUtaVmd1a2N1UDhsVE1HcjNqUnNwWnlNekkwVmU3TGNFSUFhY0JoR01odGU2YUhlL0p4Q3NvRVNEWgpvUDZIMkRjKzlXeVNZcFRPbllrRStWdDRPaUdadEJKSW9sQnJNaW9sZDRsUEhqSzllT2hOdERyZkhrVW1uSnlECnNJQ0gxZXpETXlkN0tXVXNMd3FSdTZoeGZITytMTUdOajVTdEFFL0VBKzZ6UjJXS1pCclhHR1ZsbXhTWnBGOGsKNmxLVWtNRUNnWUVBeGhUYVFwYkUwMWdzVmpBL1FMcndXNkQ4MVU4Vkd5NlRSd20wSjZaS09GODZsN1dnWlZHUwpXcFlMN1RPdGR3dGw3UEhNY1p6UzQ5eWQ5SndJMUhjMzBEbDB3K0VzdWl4UWVrS1RYMUszdlVMT1E0RWkvS051CjNvb0kvWnFWU2ZHYW5VUVRGb1AxNk03ZUlWVTdrMFdndEpwMFRUVG1HQnVKZXZ4U0FPekNwRk1DZ1lFQXR6M0MKY05iRFZRMWxBR054YXAyeVJDdzBkSnd5cVZLU25va21BR3B6ZlFaK0Q4QXEwdmdOMHd3TVFCL2JreG1nQUxuQgp6aDd5bFlTdm1DdHRwd0VaUjJDWnhWam52aEp0K2hPSmNEUDJZby9wa1I3aVlXdTU1NDRCc0NrcloxeC83dUdICk9DVHVrL1o3SG85RFU1UFRsZkhrS3JNdU9tMUQvTHZvZjFYbmlHRUNnWUVBdlBtUDhROWQ0RE95dU5kMndRNlgKMlJNUm8zKzdKeCtjS3AyN1hraHJiclNMZGNrMXFQUFZxTTZWdWtzZkp2K2MwaDB0YXdhdXUrenlWVGUzeE51bwpSK05JM3Nlb29FVSswaVZKN0J0Q2FER2dEdzdZamladDA2bmxRZTJFbC9NRUN4MnpDRHdGRTRLb3NTeGJsZmxMCmhJSUdpdEg0NHU4Q2ptN0MzVmNEcXprQ2dZQkphV1RNOEQyeGhYeEJlNVdrc1NrS1J1dDlERmIvbnlVK2ZwUEsKOXRydDYvdjFNM2Ywcll4Y1VTZFhTV3dlc3RWM2RQUkFNQVhnQVJpWVRrM1A2cERHRjkyRFF1c1ZLeTBFVTI5cwpsR1RSZC9hTFBXUlV3MlBuY08wY05tSTlOc0hLWW5CWi9mSFhOWmg5MWNlVFpGWVFiS2lNc3R5Q2ErUWhET2RJCm5KSDJBUUtCZ0g0QXlRYnY1NnRyZVhMNVdXVkJYRVY3bUFNa0JnNjhWZUo0bG15NzN0eUFxcm5YWmFTeDBpNkoKWS8wc0lrYnNITTRjVzc0YzFZNkwxdCtOU0JWVFJQZUU0NmlOSDBzakpXU3orYWpmYVhmY1A2QUcxVm1qdExjbQo2VVVlZjFzLzVzOTVEalBXODhXTGMxZjJXWXk1WkFqR3R3VWozejhVNkdIV1Ywc0lveUh4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-24T18:13:28Z"
    generation: 2
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 695dc76d6
    name: gmp-operator-695dc76d6
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1759343273240687011"
    uid: 4aa80ea2-32d6-4b0c-8f50-1b2d25f5641c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 695dc76d6
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 695dc76d6
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIakNDQW9hZ0F3SUJBZ0lRTmFEYkwzTzVwdXFQYitwaEc3WVhqakFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRM1pUVXhaVGxtTnkwME0yVTJMVFF6WkdFdE9UTTJNaTA0TW1ZNU9USTNaR0UwT1RVdwpIaGNOTWpVd09USTBNVGd3TWpNMVdoY05NekF3T1RJek1UZ3dORE0xV2pBME1USXdNQVlEVlFRREV5bG5iWEF0CmIzQmxjbUYwYjNJdVoyMXdMWE41YzNSbGJTNXpkbU11WTJ4MWMzUmxjaTVzYjJOaGJEQ0NBU0l3RFFZSktvWkkKaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPSk1oSTkzeTFiQzhOOU9WTHkzVnEyU3lXYTN5c2dJeWNrMwovSUlDUDZhK1JLR3J0WERQTlJRWklwbzhScE9iVjVRZHVXTHZET2NuM212SGg3dEgyRitTY1pTanVYS2FzdUpaCnJTWldMZWxQSjl5N3BKS1V3aWVFVjg4bmpINmg0MUd6T0g0Ny9wWjFGYk5jbm5ucWlSbzk0OGhhaGo2MlVpUlMKdS9VaFF2V0RuMHZTcURJdWlaaTVOcUtZR01RaTZkeHRneHhHUGI4MTExRGFSQkUrbXdzbFZoSldEM3BkeXJTcApVOXdNZWlsWW9TNVhnWVNrLy9GWGttbklsQldwcFJlY0JVbENnU1NQQVk1MU5tMkhoRE1INS9MN2pVUDZ2NDNmCk1ZQllHZDF2aFdYdy9OSGNoNDVNUjVEWVh4RkNyUEtMbTY2QmxHbndHRCtIbzkzNXdMTUNBd0VBQWFPQnNEQ0IKclRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVWbkdyOWlrTEtycUhzenYvVXZjSkFYdFhvYlF3ClRRWURWUjBSQkVZd1JJSU1aMjF3TFc5d1pYSmhkRzl5Z2hkbmJYQXRiM0JsY21GMGIzSXVaMjF3TFhONWMzUmwKYllJYloyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpnUUNEREp6Q0NZVjh2OHN0OG9wZHRtSkRWdVc4QmtxZjEweXRUYjBJVHJsK1NqL09lOGxabDFIblRnaFd3UHd2CkVhbTRxME1jY1g5WGxFU0RiYWRsUTJNcVZGNzFuNjdYRzBQY0xqRm9RWjd3dnBXcWVMVGhWRlZHc0hYblpNeWoKMnF3TWZPc0FUMjdERWY2WDltTmdHbTIvWjFteENtazFoRTdiMVc5TkxZSys2VUJIOEdYVzZieFNxYmxiSXdkbQo0N3ZzYWFJdFIrZ0NWUXczUFhJYmhBcCtrd0ZDOUxNTGNkNWhVUVM4MytxSDlDU3VWQUNlUXVlbTVaV3B5OG5sCi9uV2RTZzF6em9NbzNleXZtbTQrYms2WmovcEpaZXNCcnE0UHdkQlNxNTVVSEtmS1EyTTZ4YnlIc2FZazZvZTIKSzh6cHZJRnFabDQxdXZGUk9VcFk0SDBaM25tQTAvaU9rZWhQN3VUbnFJTkhPNnZya3NsRHRITzdlT1ZzOTNNQgpwWWdpMVpuZ0ppQ2kxa1dPRnlxYWl1djc5aG4wMUJQV1pnbXhlSFVvdVd5aVBNU2Jsb0RPRGdoMEt0b284M2pNCllDdG1tNTlxZ3RZdEo5UUIrRFJYdE1aVDBDMFFxTHZHVmJKYWhjMi9TK0xCaGdZTHhrNFZ4QlhxL1RlZytFcC8KL1Q0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNGt5RWozZkxWc0x3MzA1VXZMZFdyWkxKWnJmS3lBakp5VGY4Z2dJL3ByNUVvYXUxCmNNODFGQmtpbWp4R2s1dFhsQjI1WXU4TTV5ZmVhOGVIdTBmWVg1SnhsS081Y3BxeTRsbXRKbFl0NlU4bjNMdWsKa3BUQ0o0Ulh6eWVNZnFIalViTTRmanYrbG5VVnMxeWVlZXFKR2ozanlGcUdQclpTSkZLNzlTRkM5WU9mUzlLbwpNaTZKbUxrMm9wZ1l4Q0xwM0cyREhFWTl2elhYVU5wRUVUNmJDeVZXRWxZUGVsM0t0S2xUM0F4NktWaWhMbGVCCmhLVC84VmVTYWNpVUZhbWxGNXdGU1VLQkpJOEJqblUyYlllRU13Zm44dnVOUS9xL2pkOHhnRmdaM1crRlpmRDgKMGR5SGpreEhrTmhmRVVLczhvdWJyb0dVYWZBWVA0ZWozZm5Bc3dJREFRQUJBb0lCQUFGblZSa290bytxdE9ERgp0UnZZalVhVlZ2OTJtMkRqUVJFbzhqMkNNdy9mTlVERmRtSWxQdUNKaVYvb2lNMklsS0g4RHpiUVljV2JSek5tCjhPNFY4MzhnUXVrWG5PSmJtRWwwSWZGUGJvaDRiN2hjUjVpTEtLc2pGSUpaN2ZLcElXWlQxTUZmc09RUkJObncKZEtFdjlicStjSWZCRy8wT2wzTFhPb2c2TlJhZHYrWThWSHJxQWVicUlYeWV0eEpUQzYybzVlcysrU0x5VmdrWgpFc0ljQi94NW1TMGU3b2Rta0hONk8xYWlJdG9XMlVsUnhjOGxvVTBFclRwc3ZtcDByWmZKS1gvQldtbFhVaWplClFVS3BSbDNEVzl4ODlBU25Ndm15U2NuVFh2OWd1QTF0MkRGTU4vVUtlcnprWEo0WGo4cm5lUVVuYStScU9JVUcKRXQ3eGZXMENnWUVBOUJnVU9wdHBjRGtYWlFPWGdyazdkMngvQjY2N3FtS01TeGQxREVxVFNwcG5Jb0NRTThKeApsTHllZHdmZFlrdzZyQzFpSFNhVlNaSWVKMDBLSzh2cWs5QXRqVFhoQ25ZbmdVSUJNTjNCR01SZlpRMlV0Vy8rCjhkb3h5eU56TW1Ydnc1azh4WWx6Tk5vSnNRSXVRTTFCODhQZkRVWVFCclpjWlpvMjVyYXNCYlVDZ1lFQTdWWTgKajNGT2dRVHMwcmtDcTI0RXVyc2o5blRhQUF3UnlRbkhqVThsYmJoN3FuVU03WFViMmY4cmFWb0dlNG90SmxXZgorazFwTEF0NndrVmhuZ0hrMHFQWXVGMG9ETUlZZHd4RlZvb1Z3TDNkOW8zN0ppckJKNEpqdWd6UU83TGdKN3FCCmNYSll5ZUdrcC9Ud1ZNVDk5a3FJRTlhd2dFTzQ1VEFldlNTT3JjY0NnWUVBa3hYTFlzRnhXS2xlV29VK2tBd1UKTkZOUmZJeWpFdm5OTmhhTmRubWRwYy9Dby95NmFDWWNFUmRUbWNCSWU4b1pkTlRvRVU3Rm1JNk8wdm5PVGpQVApSM3lqWmpyNFB6aVJkNGNSZHFPNWpyWU9FYk9NVDRTTUtLcGxaTllZdlY3RmlxVFZCT2RkWDVTZlVHVlMvOE52Cm9YYisrbDJrbkpiWXVIU2o3b1JXeGgwQ2dZRUE0MWhxSnBYSk4zbTZTWmlENENkQlRJWWJTdWhnTXc5Y3NoRTIKSUR5aWc5bm1URUJYbzljOFdMUS9wMmxmTUZRS0wrQnhvRmtxMTlBZlJaMGtoekVWT2xsTkxqMitNWXB6MlFYZQpIYW1rY0w3dnNsQUxObUphS0RpVXd4R25IcWlZWkRZWjdNdzJGUnlhbDNEZ0RyT3MrcEltaTZwcDVGUDY5MEFECkVmZkUzTjBDZ1lFQWs0MHhWdkk1VEFwQ2QzWFM5NHYwUTBFajdQd2l1Y1IrYmYxbEJ6WXRoaE90eUZuS0JwWnAKczI1NzRrN1o5SjMza1JyK0NnUlNPT1VYeTJ3T2xXTEhhcFBTNlEyTmxzVldmajVoSDYyMUtqUVlEa2xjLzM0bwoybU1VakV0THNTSXVMTG54YnhjQzVPMnltZ0FqL0J1L0ZhTnNGSVF1WmE2L1R5bzY2bUhIUnNJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-10-08T17:32:29Z"
    generation: 2
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 6fc949f55
    name: gmp-operator-6fc949f55
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1760620882204463008"
    uid: 9487c868-0311-421c-b4a6-479b96079d79
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 6fc949f55
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 6fc949f55
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQUttNjlSdk1hc1dJRjQyNCtZOXhrWGN3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa04yVTFNV1U1WmpjdE5ETmxOaTAwTTJSaExUa3pOakl0T0RKbU9Ua3lOMlJoTkRrMQpNQjRYRFRJMU1UQXdPREUzTWpFek9Gb1hEVE13TVRBd056RTNNak16T0Zvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHBGWk5kS1d3MElrT0dmVXZFcllqcWlGVUFPd0xpYVRPOQpVV1JiTU5SWEdGcVlDMEtHMUZ1bW9MSkdtKzMzMjRDdFJITHl3R2QwNTFoeXM2V0xTYXVETTIySTNBTGtQM3BmCmFMVEVNUGZjaGRGWHJlSk5sT1pPdGgwUHU2VzkwVUUyTXFFRXBQL0RqOE83U0RoVlo5cTVpVGV3U01XcXNYTGgKNE5IN0xwU0lCc2ZNUitzZjV4bWl2ZVFQUW4zWkZ1UG5HQmxLM01XL29hMWdpbUEzZmdaODlCSksrOTF4d2JRbwpabFYrRmFFUEdvWjFjV3NYeGJwakdLREZXTXRPT1Faclh6ZysxNXYreUtuU09ISXNtWDlmQ2JLWFN5amVtQUJhCk9MWmJRWXVhckRIZkYzRTF6aFBKSE1jb0pDblZPS0FtQkVHL1V2dlhYVHFKcTh3OTRpbnRBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRlp4cS9ZcEN5cTZoN003LzFMM0NRRjdWNkcwCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBU04zcVk5d0crYTg0ako0N0NCV24wZlVTMFJVNnBXRUw1cUZweXNhYWx5eXcyRVRKTWJhbHViUFlDbUhECjJLdUJTdU5LMVhVTFcrb0Fqb21MdC9sbkxFUERPRGEwSmtaa3FGaW11ZGdFRmZZQkIxcDgyVXh5MlhCejl6TC8KNDF3RHkzbVkyK0RSNzZQU2xPOVNLcWRzQnpSLzI5bjF6TExsUmRkd1MrM05qakVPekgybWc5T3lrSmI5K21BeApMb0l5ZXlXNk85Z0xVcWZvUGVydjF2L0s1WjFaWU53NmlxODFTSFR4MG1QZHdtdW84NWNsRUtIczViVGZ0VUloCmZhTW1nV0YvWlRkdlkxVkdETmJHbjlidko3L2pyK0NZSithZmlpcW42Z0UvQTRwc2dqVWtuOWJkOHlzbGFFankKVWhnZjBRb2VtS3R3akxhYWkzQWlwL0h0cURGODBNY01GMnZzYmpTYWxhYmEvYjRtM0RFaHJNOWROT0JOUVNKUgoyeWQxVVlmaWx5L2J0aGtIYlFHTkdLQkpWQzhKMXZEdVk1L0l0SDhrWVluMk1PUzAzUkdFYjZGRklrdnh1Z3Z4CjNxOXhpU0E3RU42WXdzNTB0SzlFK1NtaGJnMnpFOTZqNHE0dTdmMVFJS2daYituYXdGYVlIRk0raDA0SHB3OUYKZGV6NAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNlJXVFhTbHNOQ0pEaG4xTHhLMkk2b2hWQURzQzRta3p2VkZrV3pEVVZ4aGFtQXRDCmh0UmJwcUN5UnB2dDk5dUFyVVJ5OHNCbmRPZFljck9saTBtcmd6TnRpTndDNUQ5NlgyaTB4REQzM0lYUlY2M2kKVFpUbVRyWWREN3VsdmRGQk5qS2hCS1QvdzQvRHUwZzRWV2ZhdVlrM3NFakZxckZ5NGVEUit5NlVpQWJIekVmcgpIK2Nab3Iza0QwSjkyUmJqNXhnWlN0ekZ2Nkd0WUlwZ04zNEdmUFFTU3Z2ZGNjRzBLR1pWZmhXaER4cUdkWEZyCkY4VzZZeGlneFZqTFRqa0dhMTg0UHRlYi9zaXAwamh5TEpsL1h3bXlsMHNvM3BnQVdqaTJXMEdMbXF3eDN4ZHgKTmM0VHlSekhLQ1FwMVRpZ0pnUkJ2MUw3MTEwNmlhdk1QZUlwN1FJREFRQUJBb0lCQUFMVmU0QmhDVVV4TktMUgprQmtreTV6YXNrSmplOXBRajgxTlhOdUVVSGYvQ0RlcXJETjVVQkpSSW5xVlpuTzBndVlvMGQ0eVZNZDdGOGV5CktWQ1lWUVF1Vk5EQi9hK2Y3dnMzdXY4Rm5SWjlndzNHa3FHMkJ1RVVlYWtPekFrV0s4WWpsbXdPU25DcXE5WjAKMWlFU0Q5TmFGSkczYVdoMUVVMVZXZ2NBTlBWSnkreWJlMHl0RGpPWEJXOGVZM1owT25JeG03blhwVE9ha3hDQgpacVRFSmVIYklQRXRVUktOSmtqWS9HYmlzZWM3MitRQk94M1lqZ3ZJR3UxSkFEdnFQSWJlcHpWdEY0bGdTWE9SCk1GMjl5MnZwczV3UzFIQ1cxd25DVUJ3bTJ2b2VlMDZaL3pIdmdvKzIrM2JscXdlVWk3V3VHNldidEtGaHJaTE8KTnVXMkxoRUNnWUVBL01sK0xPMHh0MGNHRklYK3JNOUUvOHByMzZ6NE9zM3FUZXRmc0prTVVUYnI5V2lqNS9EOAp2aTA3YmhvTFc0UlJZU0pST2dISHpiV3ZORUQvSFgxdzVqcWhwUlo0YXgwNy9lR2xVUUxkcjVVQVhjODJ1S3JXCk5idEJGTS81T3dVcnNaWWxoZisyRDF4NXd1amJya0J1dGNTeDVMUkZRZG1hL2pHTnhPbThlT3NDZ1lFQTdBdjUKaFFKenp4YW5nQS9MLzlyMm16eHJwa1QrZEFWRE4rbzV3UzJESlRFbEtyRUR0RTB0clBwaFprdVZiNWc1Vkk0VAovRVBFcUJpYWt2UDY2cTNpSFVQSlMvMXdOczlxdnU4STBoZjRkdFR4N0p5ZnVWZm56aTlhMzUrbVBpWEtCTno0CjlCQmlqd0R6SHlocDFqRXVXVjdjQ1dlWGVDcmFRM2ljRk1PQnNvY0NnWUVBbGhRV2VodlVvV2hrWHJqeTY2d2UKM2ZKU3V6aFpJNmh2REJYSytQRFVsRDhVTmQ0TE9jQWtmZEFpOFlvNjVmbVh5eUJ4c3d1dGtSN2x4eE16bzFGLwpQdURlYVVIKytqRWdGZW5xbVQ4bldJQVErS0QyYndyV0pJNW81QzlaVzhZRkcrajFuQ21sOEZiSjM0TWFNY2tGCk1adDJ0ajZrdzZTcTFYR2NKcVZTaFVNQ2dZRUF1YjNLZ01HblE0TytGbVZYejJNTHZxZlN4YWx3MlBiekorS2wKdzc3K2ZadW9kV21KVXEyUWpaY1FZYUNFWEtYYUp4RU41T21tcStlQWFyYVY4V2tXanBTeXA1c3NXOVRuV0l0YgowNGFOTzJUaFlhRDFockVIZFJXS1dvR1VIVDg3TW94M1VnWTZwL0RGWHZVOEl4SGNPUE1PRGxCM3ZsVnFIc0dmCmdDOC90YTBDZ1lCTXdheExVWlg0aG05dm52dGQ1YmdMdGJza01TcHd1enVzZS9CTmR1WWpndFF2S2xYUTZ0cXoKRVMyZGdHWktLV2NTR0FEcGoyVHhtVFRXRFJkU2JhZTJKbkZDblhIanFVR05OMUtsTHJSczg0UzBBUEtpZVhkYwpxR0VZem9rMWtyTnYxdGJNM0orUmNOZVRBL1BsRVN2Rno1eVNZWWExelQ0d1hPTUYxWlVSN1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-18T17:37:39Z"
    generation: 2
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 74697b9f6d
    name: gmp-operator-74697b9f6d
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1758737610630783001"
    uid: f54a8dfb-6770-4e94-8ea5-6a32a94bc3a4
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 74697b9f6d
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 74697b9f6d
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQUphMmpnYkh1ZEtKNnpqWUM3MHlqcTB3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa04yVTFNV1U1WmpjdE5ETmxOaTAwTTJSaExUa3pOakl0T0RKbU9Ua3lOMlJoTkRrMQpNQjRYRFRJMU1Ea3hPREUzTWpZMU0xb1hEVE13TURreE56RTNNamcxTTFvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHVwNmowWGpWdXBUcmRjbW1mY0NQRElTc0dnUjQveVcvOQpmNTBYZTBUQ2V5R21tT00xTS9ieG1UL1NhWmc1dU12RlZyR3JtTHdJQXVXZVVpdDd2bG9TSFkyL01WSVBDRGtQCkZING50MWJ2enU4dk5lVkt5VjYvN1BpaC9sQm5QRFA3QTNVZElCWkp5MUhyQ0E5YnJhTDVpaXgxWGJTRG40R08KN3FyWjJyRTdYTnFZc1pKb1NSK2EvK0JiVWtDQ0xwU2ZlMHNUeitaRjBYYVJWYWFtVGhGcnVnVnNQNWdtWGNVNAoxWG96SzM5TUlBRHFDQWxRa0xZM1dlTTFIcVZkT2lOcHl4WGl5MFdIL2ZjR1BNdHV4UGxSQmlGalBGOFdDaUNoCnpSUzlDM0VTY1BhTGZISVZzSnVmQTZsMEdnYURLLzlrc1Y0QlY5R0hZbXpBcUR5WWdkQlZBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRlp4cS9ZcEN5cTZoN003LzFMM0NRRjdWNkcwCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBUldSbTJzUE9BditQK2UvZUJsN2dXNjg0ZG9yT2hvcXBZWnM3WGtmKzlNYVBZcWx4ck54aFdUdjZpTjdrCkUybkFrY09UZ2FZMXBWTExPRVBmOUlIWHF1bXM4dkFuOGJ0V0FMZFBoOWljc1ZQcGJmNnNUNWVrT01XZTA3SjEKUXpqL200enhnWGhFbGZmSEllQ3JyVkRiUTlZMndWSTVZcnZLalNTcElGWG5ZOE5aejN6NWlDZTkrZTJHeTdsUQppWGNEb2ZhdVR5WmQwS29TdGNlZmJlNnFzclZVSmt2bnRTVzlNNG5kREcyNysrY1RiNTNNeXBhTmJWNDhmRHRDCjM2RVVQYkRBQk1INEphYWtDWUxvWjdsTTl3Um8reW94bGphMzBkOGlTbU1hbG5SeVV5WXUybzlmbVFoVm9Qd2gKOFJVbkZPdy9nTWExdnArbkxZdlh2aTFhcTI2ZUF5VHM5eWhMNEE1ZlQ2d216S2t5S1hRMElvRmRmUTdJVVpncAp1dk82SExtK0U3aGRIS1hlTTNYY09XVVpGZWc0TS9jYm9vV2dlVzRiaXc5OTRPSTJkQ0d4UkdxS1VMWm4vd2VpCmU4YlpvanFQWlNHRktjUUdNQXB1OHBadEtXVTAvL3lwYzJOeVJaem9pRHBQQTZJWEtYUGczY0lqQk9vUWppcmEKdkRGeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN3FlbzlGNDFicVU2M1hKcG4zQWp3eUVyQm9FZVA4bHYvWCtkRjN0RXduc2hwcGpqCk5UUDI4WmsvMG1tWU9iakx4VmF4cTVpOENBTGxubElyZTc1YUVoMk52ekZTRHdnNUR4UitKN2RXNzg3dkx6WGwKU3NsZXYrejRvZjVRWnp3eit3TjFIU0FXU2N0UjZ3Z1BXNjJpK1lvc2RWMjBnNStCanU2cTJkcXhPMXphbUxHUwphRWtmbXYvZ1cxSkFnaTZVbjN0TEU4L21SZEYya1ZXbXBrNFJhN29GYkQrWUpsM0ZPTlY2TXl0L1RDQUE2Z2dKClVKQzJOMW5qTlI2bFhUb2phY3NWNHN0RmgvMzNCanpMYnNUNVVRWWhZenhmRmdvZ29jMFV2UXR4RW5EMmkzeHkKRmJDYm53T3BkQm9HZ3l2L1pMRmVBVmZSaDJKc3dLZzhtSUhRVlFJREFRQUJBb0lCQUExbW5MWWNGQ1FDWXl2TQpJT0l6Q2M4TExiOVB3TU1VTEpXdmRNSzh5VCtpYW1GUWRIR29XVlYzcFgzTE1DRU5uMk9WV3FTb0R1YmtRc0NCCkhLLzJJRmlrRURHTU0yOWtwcytSOXdPRDUvM1BRTjhGeDdwTFZHYXloOE9RNURMbnpvTnB6a20wWTR3QlByaFQKMjRqcVZ4eHNCZE1SVC9HVUkxSkRWSlNuRXd5aUxsN2lJOFE4QW12a3dSS1FFbW1UbFRhOHV1THVhR0xlbnhRVApKeklYVnpXeGJHVkN5aEZVdy9rWXM0eEp3R090N3VDcXJhU3pma0ZUMFpZTVVZbElMZk9DMCs1cklic0UybmFZClhXUWkrWUZMd2VCQzBwOHBtemZFMTdYd3dET3h0VFFKanBxL2E2NkVvTVRVNWhXbWhWNGJScm9ldGNUYVhDMGYKcmw0eERBRUNnWUVBL214Ty83VHJYdll4VmdMK2ZRczZnVjRiTXp2TUx0U3JFaENrRTgxL1o2ZnZvTGk5SWljUwpZWXJiUTR6WkJPRXQ5QjBpOThTUllCTHRYZ0xuV3J4V1llblRxSjF2aVdMbkViZGVwSTNEd0tnZ3RDRitGSWFJCi9xS0l0UVVuM1hwSzkzRTMvUFFiSEwwS1BUU0RSdUorQnhhSEcrK2dCK3U1SU5kcmUyWGZFZmtDZ1lFQThDSlYKQ0QxbU1aL2EvclNoVkpvblcvK1NFVEJwVkVyUnFtL1h2d0Q2aWJGaG56bytuS3JJeTFka0w1L1U3M2RPUVRYNApHNXVBUG03YWdraWZZOWJBdjVMVmhJN2laeUF0NDJZTGdtUlJoa2FWRVNhMEVzVXhZblUrMkVvNDJvVVlCV0dXCm81UmRaVzBWVEd6VVVkREd6YkFSYjFRZlR1em5qaXhPNElMUXlEMENnWUFOa0d5dHlWRjdJSmtFd3VnYWRvekoKOU9CeVhNL0g5MktmZGUrcGRwMUNRM3ZORDh4Vms4dXhFNXdZLzl0YUhUODc4b200dCt3Z09TSWFqd0VTbjFQagpxSG0yVlo1cXJyRXZDcDJySER2QmU3VXlwVTU1ZmFxMEdLbzlMR2N4c2FGcGk4bTJYTFZOVk83RTBKWG5JNUFnCmhKenphbFVYMXdOcHN0SnlJNzQrMFFLQmdRQ25KRDVyYmRFajJWQmsyUFV5SGRvbmZzdjhpdVhGZGc1WncxODMKNDBaL2NLZXlYS2dZQkFlZkFVVUtvUVZsYUhWZmptRVRWamo5Tzh0N3czQ3QzVnhyKzVnQ25ER1o5aHY2bTV5SApOYXhJK2ZmbjZEaU9tQkszcFVRSTZDQ0tlUGt2UmEzRVRoQnorR2xLdUxWUC9URmpHWm9KRTFSM2F3NEJOM1h2CmJ4NURRUUtCZ0YxQWZjZTJvaHFVVDhDZmYxeUVMbFVNenhLcjhKMHVveFdIZnQyRlpLdnNRMTlVTXpZZnFKSkYKSWNYQ00xVWR0ekFUZmxxcUIxRTh2QWpNVjJ6UXR3SEpQbUlaNk1WbWtvTlpIMkpmbWllT013NU51b21rcUlVSgpMd2NjczdkQXEvK2EveWhuS2FnNDJIS2htb2Q2Rnc4L0M2bkN3cFdsMG5QNkJRd0pMSXMrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-10-01T18:27:49Z"
    generation: 2
    labels:
      app: managed-prometheus-operator
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 769958f86f
    name: gmp-operator-769958f86f
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: gmp-operator
      uid: f8053fcb-bb5c-4bc5-8a55-471ed0812bff
    resourceVersion: "1759944754908767024"
    uid: de774711-e108-4bcf-9155-414da469424f
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: operator
        app.kubernetes.io/name: gmp-operator
        app.kubernetes.io/part-of: gmp
        pod-template-hash: 769958f86f
    template:
      metadata:
        annotations:
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-operator
          app.kubernetes.io/component: operator
          app.kubernetes.io/name: gmp-operator
          app.kubernetes.io/part-of: gmp
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 769958f86f
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --operator-namespace=gmp-system
          - --public-namespace=gmp-public
          - --webhook-addr=:10250
          - --tls-cert-base64=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQW9lZ0F3SUJBZ0lSQU56VS9KdjlqdGhvTkNPZ0c3Y1FyOUV3RFFZSktvWklodmNOQVFFTEJRQXcKTHpFdE1Dc0dBMVVFQXhNa04yVTFNV1U1WmpjdE5ETmxOaTAwTTJSaExUa3pOakl0T0RKbU9Ua3lOMlJoTkRrMQpNQjRYRFRJMU1UQXdNVEU0TVRZMU5sb1hEVE13TURrek1ERTRNVGcxTmxvd05ERXlNREFHQTFVRUF4TXBaMjF3CkxXOXdaWEpoZEc5eUxtZHRjQzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRExVVlUxWlc3d3pYRXhLdHRUbWlVeEFGSW5ldllmK2gydwp6bERKY0gxWHdveUJNOWJWUlVKTzJUYkUwQjdtZWRlK1A2MDZUL3BJTTVSV056ZW8xY2lrc3Q1a3Q2TFQyKzFDCnZVcDlFYjUxd0ZPQ0JrQ0tJRm1mc0RwMDNGdjB3TEYySzh1cEpnSzJncDYzVzB4MFZ0M1FramlMS1hrUVM2YnAKaXJnOWROUUVyRW9vdG0vakdnNmVXL1UwTzRZcFlWdFNPbEdSaXVGYkNvQWFKanFzRHpxNmpSaGJ3dytKczJ4SAptR0lNNFBzSDJhMzhSaFVvYmZ6K1p4bmFqcjBmOG9XOWFUUzNtZjhsUHF5enU4bkxRRjR0Y0dQYnl5c1hmU2JZCnZmWEl3bjFUa3V5azJySWVuRGFzNEE3SWQzZk96bWNsV0h6UU54b2pMaGpLaDB2RmFKc0hBZ01CQUFHamdiQXcKZ2Ewd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjRApBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRlp4cS9ZcEN5cTZoN003LzFMM0NRRjdWNkcwCk1FMEdBMVVkRVFSR01FU0NER2R0Y0MxdmNHVnlZWFJ2Y29JWFoyMXdMVzl3WlhKaGRHOXlMbWR0Y0MxemVYTjAKWlcyQ0cyZHRjQzF2Y0dWeVlYUnZjaTVuYlhBdGMzbHpkR1Z0TG5OMll6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBWUVBQnIxMTdvQU9OTU56dERtUzUzeVB2VWhzQ3dEV2RpYjI3V3dNZVZKYlozaEh6Q1JnZ3ljL0IvQUUvZWc1CnpWcTF0eEFSYzhiamNMTXgvUWxvUVRNSitmVkF1cE1YV205TGxyeEFoUWljYzJMSnc3cDNaSnJLZ1FOTGNhK08KeEdDTDd5QWkxWUZ3R2N2RmRVVEV5TUV5bjFmd2JUN09KZjM3MWdhSEhtUzZJL0duQk1QZnYveWprRFFoQ0xYegpOaVpVWFhROElNZHdGaXBmTmM0NmJaRUxhNFM3T1NNS0p6anQ4QnlTWEhUNG1iVEUyNDNKUHdNVjRaSnhWOXNPCndsKzRhWHlyMmh1ZHVsMGJ3WG4wR0hmNDkralAwaVhTeVdOQ2JHaUlRbW5QbGlwL3RJSmRZbG96QzlUSHBRMTQKREF1ZVJpMHc1c2hhdjJHdyt5MCtOb2RiZWgxQlRzSXRVaVowVkxUNGpRQ0dyc2lFV2RQVlM4dWJCZ2ZOUDZweAo5RzBheTBldFEwUTNheG04TGFVc1NudU5wT0NieCsrc2cvZGVOc2h4dVNoTDEwSzJaNkpXMmowVUdMTTJKb1BrClA0WWxqa0dYdFBzanE5M0pDL2JsUE1aNGF0S2dmTWlCUkYveVJrWG01b3FYQy9Gb0pKQmM5SDVxRVZtZGZjRGwKOHp0dAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
          - --tls-key-base64=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTFGVk5XVnU4TTF4TVNyYlU1b2xNUUJTSjNyMkgvb2RzTTVReVhCOVY4S01nVFBXCjFVVkNUdGsyeE5BZTVublh2ait0T2svNlNET1VWamMzcU5YSXBMTGVaTGVpMDl2dFFyMUtmUkcrZGNCVGdnWkEKaWlCWm43QTZkTnhiOU1DeGRpdkxxU1lDdG9LZXQxdE1kRmJkMEpJNGl5bDVFRXVtNllxNFBYVFVCS3hLS0xadgo0eG9Pbmx2MU5EdUdLV0ZiVWpwUmtZcmhXd3FBR2lZNnJBODZ1bzBZVzhNUGliTnNSNWhpRE9EN0I5bXQvRVlWCktHMzgvbWNaMm82OUgvS0Z2V2swdDVuL0pUNnNzN3ZKeTBCZUxYQmoyOHNyRjMwbTJMMzF5TUo5VTVMc3BOcXkKSHB3MnJPQU95SGQzenM1bkpWaDgwRGNhSXk0WXlvZEx4V2liQndJREFRQUJBb0lCQUVYbUVWaEpKZ250WjJQUwo2eEpqNVROaWU5d00zdjhCV3lIRTNHdFVuQk1HMUkwNnlEb01GSTdOQ0pKRFJzeFB5VWNqMXljOEJieTYxdDJKCklENlFPT20rZ015NWdXWTZydWdKOGNqcng4SHR2QWZ3cEZHWWE1ZUYyNkwvZXpHNjZZZko2THVmVU1GMFNLS2EKNWI3OWVrYlJibFVSamdoM0tjd1NuK0tvL3BjWUVyMzg3aWU0bmhhZ1Z6dnA4eVU3OEJsQWdFWTQ4QW40Z0JSOQpRM3NadWhqY0JKY05LOGdxUEx4MlV1d1R1Rzc4NkZPRk0rbmwwa1BqdGptbW1iZGowMmpjSEw2SzczMlgvblZGCk9wTFRxZThNMm9sb3FVV0RxOFRtS0VSd0FHc08xK3R4b0RzUTU5anVqN3hKTU9Eek9UQmovKzFGM3JBbDRLS1MKMjV4cnhlRUNnWUVBL0hkN3BVR2VrenZrWlRTR2R3WkR1WWRmOUdjaWZvVnlIaGwzQUdLUWR2d2tkcEd4MHQ1ZwozbjA4WmZ1TSswV3plMFdJQjE2REh0eWRpUU5nVWJvMlY0eHpDQzVOU1V1TjdkajBNbDA3ditkenYwSW9CK2dvCjFzcnV3NkJ4bVg3NTlZbGM0djBYMzlOVjV5WVMrSzVWSDAyV3ZEYjJ1NnYxb0NKU1dadU9UZkVDZ1lFQXppbkQKUlkvQ2tNbkJWcDREZmI3UFdzUCtxOW43OXptSHhWU1o2YVZkNyt5bXVJdi9yelQ4V2I1MlphOTRYL0VzVkgvNwplUHBWbjlZMDc4RnZxd09ZSVhVNEpaN25GazhMVmN3akx2RnJGYWlSTEYvaG54TlNocEFjYkNHelBmejhwVHFKCnRYMTRGSnhGUEdmeVZ1ZEF3S05Pb0xEUm5JbHFrY01oSThHSVlIY0NnWUVBNjFMMzFuYk90NUJvK0lpNEdYT20KWnVXdlpDRkovc0ttTnpZblBSMmlhTFhueXZsTTFpL2YvU0tnekxKbm04TkJZOUxRMDRXZUZJTXcrQWhFbklsRQpvK0JQVEwzVDNsRGxqMkRkWmFDUDAvV0taeWprSlZLWjFuUTdqKzhhVkNnT0YzY2ROSnNTeU5lMVI0cXV2a3ZKCkhpOTFKQ1RiWU4wTlMyRVNmMkhHaUJFQ2dZQiswVjNYV25sN0MwQ3RBWUp3UllIVCthQ2RJZmhHdWRMMDVmZlAKcS9PKzlMb1I1N3lla0Y5eTdTQnpxSjdKbGRlSkd6a2IwQkgvd29ySnVSbngvc0lFUXRFSkExaHZkcXdvV095RApvZW9YWnB2MnlmeEdHR0s1ZDhpa0U0N280TWlnOHdObTZ3bUUxQ1FhNW01Q1d2cVFCV1VHbi80dzVxN3hmekRSCmgrbFdQUUtCZ1FENXJzYWZ3Mit5UzRrZ1JIdmNncnhwQmJvOTZQYWxhRHZPQllWZ25OTVVNZ1ArVks1N2U4MEYKMXd1aFhOdmdiR2dldzJIUkxDTUQ1aEFPY2VNRzh3L1JJb0R0QTl3Mmo0UjUyY0hWUmt4SVZRY0xmV2dsTUo1UApQSUFSTnV0dStqaWVSVnpXY0h5WWNDZlpzYURyVzhwUDNoNm03R2ZTLzI1SGM3QnBWYkNIK1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
          - --project-id=pixelated-463209-e5
          - --location=us-east1
          - --cluster=pixelcluster
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/operator:v0.15.4-gke.0@sha256:6208d08a2ee884e7d72669b32f2eb9c24386bfb050e3035b5ef16663fd5e4d1d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: operator
          ports:
          - containerPort: 10250
            name: web
            protocol: TCP
          - containerPort: 18080
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 18081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: certs
        dnsPolicy: ClusterFirst
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: operator
        serviceAccountName: operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - emptyDir: {}
          name: certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "0"
      deployment.kubernetes.io/max-replicas: "0"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:31Z"
    generation: 2
    labels:
      app: managed-prometheus-rule-evaluator
      app.kubernetes.io/name: rule-evaluator
      app.kubernetes.io/version: 0.15.4
      pod-template-hash: 6c5bc8d6dc
    name: rule-evaluator-6c5bc8d6dc
    namespace: gmp-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rule-evaluator
      uid: 9f98961d-acc0-457d-8fda-72014762d4fe
    resourceVersion: "1758129854909487022"
    uid: 9526b6bf-86d2-4b90-a9fc-c5521342695c
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/name: rule-evaluator
        pod-template-hash: 6c5bc8d6dc
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-rule-evaluator
          app.kubernetes.io/name: rule-evaluator
          app.kubernetes.io/version: 0.15.4
          pod-template-hash: 6c5bc8d6dc
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: true
        containers:
        - args:
          - --config-file=/prometheus/config/config.yaml
          - --config-file-output=/prometheus/config_out/config.yaml
          - --config-dir=/etc/rules
          - --config-dir-output=/prometheus/rules_out
          - --watched-dir=/etc/secrets
          - --reload-url=http://127.0.0.1:19092/-/reload
          - --ready-url=http://127.0.0.1:19092/-/ready
          - --listen-address=:19093
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19093
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config
            name: config
            readOnly: true
          - mountPath: /prometheus/config_out
            name: config-out
          - mountPath: /etc/rules
            name: rules
            readOnly: true
          - mountPath: /prometheus/rules_out
            name: rules-out
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        - args:
          - --config.file=/prometheus/config_out/config.yaml
          - --web.listen-address=:19092
          - --export.user-agent-mode=gke
          env:
          - name: GCE_METADATA_HOST
            value: 169.254.169.254
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/rule-evaluator:v0.15.4-gke.0@sha256:3fd60d642225e3f431ff038583a1ef96c98fc48c425024466d9970f9086052fc
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/healthy
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: evaluator
          ports:
          - containerPort: 19092
            name: r-eval-metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 19092
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 1G
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
            readOnly: true
          - mountPath: /etc/rules
            name: rules-out
            readOnly: true
          - mountPath: /etc/secrets
            name: rules-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - touch /prometheus/config_out/config.yaml
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /prometheus/config_out
            name: config-out
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: collector
        serviceAccountName: collector
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            name: rule-evaluator
          name: config
        - emptyDir: {}
          name: config-out
        - configMap:
            defaultMode: 420
            name: rules-generated
          name: rules
        - emptyDir: {}
          name: rules-out
        - name: rules-secret
          secret:
            defaultMode: 420
            secretName: rules
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-09-24T18:13:13Z"
    generation: 2
    labels:
      k8s-app: event-exporter
      pod-template-hash: 5b959bd9bd
      version: v0.4.0
    name: event-exporter-gke-5b959bd9bd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: d39d2d27-b091-43a1-81cb-9cb8f1256b3d
    resourceVersion: "1759343264107055002"
    uid: d93378a2-a52a-4353-80fc-e375f8a77b8a
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 5b959bd9bd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.8-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 5b959bd9bd
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-18T17:37:24Z"
    generation: 2
    labels:
      k8s-app: event-exporter
      pod-template-hash: 76ffccb8d6
      version: v0.4.0
    name: event-exporter-gke-76ffccb8d6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: d39d2d27-b091-43a1-81cb-9cb8f1256b3d
    resourceVersion: "1758737596440943019"
    uid: 60b77d8b-a450-4073-9a42-30c616f719b3
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 76ffccb8d6
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.7-gke.1
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 76ffccb8d6
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:08:55Z"
    generation: 2
    labels:
      k8s-app: event-exporter
      pod-template-hash: 77dc9d7555
      version: v0.4.0
    name: event-exporter-gke-77dc9d7555
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: d39d2d27-b091-43a1-81cb-9cb8f1256b3d
    resourceVersion: "1758217048458159021"
    uid: 4c7d8a57-147a-4902-bfe6-037e890a2a38
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: 77dc9d7555
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.7-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: 77dc9d7555
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-10-01T18:27:34Z"
    generation: 1
    labels:
      k8s-app: event-exporter
      pod-template-hash: cbf579745
      version: v0.4.0
    name: event-exporter-gke-cbf579745
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: event-exporter-gke
      uid: d39d2d27-b091-43a1-81cb-9cb8f1256b3d
    resourceVersion: "1759345948080863001"
    uid: a4b6fc80-2af1-43b3-ba17-9c3261f79214
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: event-exporter
        pod-template-hash: cbf579745
    template:
      metadata:
        annotations:
          components.gke.io/component-name: event-exporter
          components.gke.io/component-version: 1.33.9-gke.0
        creationTimestamp: null
        labels:
          k8s-app: event-exporter
          pod-template-hash: cbf579745
          version: v0.4.0
      spec:
        containers:
        - command:
          - /event-exporter
          - -sink-opts=-stackdriver-resource-model=new -endpoint=https://logging.googleapis.com
          - -prometheus-endpoint=:8080
          - -enable-pod-owner-label=true
          - -system-namespaces=kube-system,istio-system,knative-serving,gke-system,config-management-system,gmp-system,gke-managed-cim,gke-managed-volumepopulator,gke-managed-checkpointing,gke-managed-lustrecsi
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/event-exporter:event-exporter-v0.5.2-gke.6@sha256:76250369e72038ac25c521a7f5f980326f81245f8b7c2caac2c243429b44a81c
          imagePullPolicy: IfNotPresent
          name: event-exporter
          resources:
            requests:
              cpu: 3m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        - command:
          - /monitor
          - --api-override=https://monitoring.googleapis.com/
          - --source=event_exporter:http://localhost:8080?metricsPrefix=container.googleapis.com/internal/addons&whitelisted=stackdriver_sink_received_entry_count,stackdriver_sink_request_count,stackdriver_sink_successfully_sent_entry_count
          - --source=event_exporter:http://localhost:8080?metricsPrefix=kubernetes.io/internal/addons&customResourceType=k8s_container&customLabels[project_id]&customLabels[location]&customLabels[cluster_name]&customLabels[namespace_name]=kube-system&customLabels[pod_name]=event-exporter-$NODE_NAME&customLabels[container_name]=event-exporter&whitelisted=stackdriver_sink_records_latency_seconds,podlabel_cache_ops_count,podlabel_get_count,podlabel_nolabel_pod_cache_ops_count
          - --pod-id=$(POD_NAME)
          - --namespace-id=$(POD_NAMESPACE)
          - --node-name=$(NODE_NAME)
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-to-sd:v0.12.1-gke.24@sha256:4e76d5f407e7a072f1f26dd1d8b019950d1c7632ed96fdd19315f664413c9b82
          imagePullPolicy: IfNotPresent
          name: prometheus-to-sd-exporter
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: event-exporter-sa
        serviceAccountName: event-exporter-sa
        terminationGracePeriodSeconds: 120
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ssl-certs
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-16T13:21:10Z"
    generation: 3
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 59454d54c4
    name: konnectivity-agent-59454d54c4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: e0df8ae9-9784-49a6-96a1-d0aacdffb0c4
    resourceVersion: "1760620879781855017"
    uid: 4f6c042f-975b-40ab-b2f3-35506bce9619
  spec:
    replicas: 3
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
        pod-template-hash: 59454d54c4
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.7
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
          pod-template-hash: 59454d54c4
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.142.0.2
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 3
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      credential-normal-mode: "true"
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:16Z"
    generation: 39
    labels:
      k8s-app: konnectivity-agent
      pod-template-hash: 7c645856c7
    name: konnectivity-agent-7c645856c7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: e0df8ae9-9784-49a6-96a1-d0aacdffb0c4
    resourceVersion: "1760620880109119010"
    uid: 42e34360-fe1f-44f7-a24e-5c6b893c6c74
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: konnectivity-agent
        pod-template-hash: 7c645856c7
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.6
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent
          pod-template-hash: 7c645856c7
      spec:
        containers:
        - args:
          - --logtostderr=true
          - --ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - --proxy-server-host=10.142.0.2
          - --proxy-server-port=8132
          - --health-server-port=8093
          - --admin-server-port=8094
          - --sync-interval=5s
          - --sync-interval-cap=30s
          - --sync-forever=true
          - --probe-interval=5s
          - --keepalive-time=60s
          - --service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token
          - --enable-profiling
          - --count-server-leases
          - --server-count-source=max
          - --v=3
          command:
          - /proxy-agent
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/proxy-agent:v0.31.3-gke.1@sha256:aa89e06b001dd7ef9e9082de3da7ef4b7995c6c857e905d3810eb9901664158f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8093
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: konnectivity-agent
          resources:
            limits:
              memory: 125Mi
            requests:
              cpu: 10m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/secrets/tokens
            name: konnectivity-agent-token
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/konnectivity-agent-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: konnectivity-agent-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: konnectivity-agent-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: konnectivity-agent-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1000
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: sandbox.gke.io/runtime
          operator: Equal
          value: gvisor
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              k8s-app: konnectivity-agent
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
        volumes:
        - name: konnectivity-agent-token
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: system:konnectivity-server
                expirationSeconds: 3600
                path: konnectivity-agent-token
        - configMap:
            defaultMode: 420
            items:
            - key: konnectivity-agent-metrics-collector-config-data
              path: konnectivity-agent-metrics-collector-config-data.textproto
            name: konnectivity-agent-metrics-collector-config-map
          name: konnectivity-agent-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    observedGeneration: 39
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-16T13:21:10Z"
    generation: 1
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 59849cb6b9
    name: konnectivity-agent-autoscaler-59849cb6b9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 1f3980ec-0cab-4cf3-96f2-ec16f76e31c7
    resourceVersion: "1760620873830015015"
    uid: c119a046-3ef1-4d99-b29d-16679e9194c7
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
        pod-template-hash: 59849cb6b9
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.7
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
          pod-template-hash: 59849cb6b9
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.17@sha256:3b9d333418723c07ac6ee488d517fa9a9afddd20a8c3b91ac73b5de2ba736f83
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:18Z"
    generation: 2
    labels:
      k8s-app: konnectivity-agent-autoscaler
      pod-template-hash: 8567d9c95d
    name: konnectivity-agent-autoscaler-8567d9c95d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 1f3980ec-0cab-4cf3-96f2-ec16f76e31c7
    resourceVersion: "1760620874283183004"
    uid: f75b0170-84e6-488e-88e5-9e25cb01cb70
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: konnectivity-agent-autoscaler
        pod-template-hash: 8567d9c95d
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: konnectivitynetworkproxy-combined
          components.gke.io/component-version: 1.15.6
        creationTimestamp: null
        labels:
          k8s-app: konnectivity-agent-autoscaler
          pod-template-hash: 8567d9c95d
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler-config
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.9.1-gke.16@sha256:7d88a8cf5fbcea4d244f584e1dfe2214fc4065d8bb97201c4816556dddab9ef8
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 10m
              memory: 10M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          beta.kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: konnectivity-agent-cpha
        serviceAccountName: konnectivity-agent-cpha
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-24T18:13:06Z"
    generation: 2
    labels:
      k8s-app: kube-dns
      pod-template-hash: 5948965fdd
    name: kube-dns-5948965fdd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 81524424-9730-44ed-b2bf-dfdf457ec0f7
    resourceVersion: "1759346281213295024"
    uid: bef468ff-2cfe-46f8-94bf-2ff3c6713b37
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 5948965fdd
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.6
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 5948965fdd
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.7@sha256:1d2d3f962be36b000d5d429fe950f2b8a43c1501a64b7fae387ec1422878a235
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.7@sha256:392e7c5ea5ce1d0eb2c296ba112e6d1edefc8dfbc25a89a02429a3e8e82826ce
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.7@sha256:1b3d3b744fc69cd2bfee58946056f80522142b9d7ed8236409e0e2a409492d1c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250821_2300_RC0@sha256:44b242f7acad93034bf7c5d67009b5feec1eafcc53840546225b00cb03a53d37
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: Default
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:08:36Z"
    generation: 4
    labels:
      k8s-app: kube-dns
      pod-template-hash: 76bd94b47f
    name: kube-dns-76bd94b47f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns
      uid: 81524424-9730-44ed-b2bf-dfdf457ec0f7
    resourceVersion: "1758737610924415017"
    uid: d98cd1f7-71d0-4e43-abda-db7fb508c1f3
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 76bd94b47f
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.5
          prometheus.io/port: "10054"
          prometheus.io/scrape: "true"
          scheduler.alpha.kubernetes.io/critical-pod: ""
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          pod-template-hash: 76bd94b47f
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --domain=cluster.local.
          - --dns-port=10053
          - --config-dir=/kube-dns-config
          - --v=2
          env:
          - name: PROMETHEUS_PORT
            value: "10055"
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-kube-dns:1.26.4-gke.6@sha256:188952757daaf172825bd94a5889e219dabe4229f572aecff62575d23027db45
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/kubedns
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kubedns
          ports:
          - containerPort: 10053
            name: dns-local
            protocol: UDP
          - containerPort: 10053
            name: dns-tcp-local
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readiness
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 210Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /kube-dns-config
            name: kube-dns-config
        - args:
          - -v=2
          - -logtostderr
          - -configDir=/etc/k8s/dns/dnsmasq-nanny
          - -restartDnsmasq=true
          - --
          - -k
          - --cache-size=1000
          - --no-negcache
          - --dns-forward-max=1500
          - --log-facility=-
          - --server=/cluster.local/127.0.0.1#10053
          - --server=/in-addr.arpa/127.0.0.1#10053
          - --server=/ip6.arpa/127.0.0.1#10053
          - --max-ttl=30
          - --max-cache-ttl=30
          - --max-tcp-connections=200
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-dnsmasq-nanny:1.26.4-gke.6@sha256:5a4bf3b7b7024856a1e3f51d5e25967b482963a25dc52a7787e58728e6c6164f
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthcheck/dnsmasq
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: dnsmasq
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          resources:
            requests:
              cpu: 150m
              memory: 20Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - SETGID
              drop:
              - all
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/k8s/dns/dnsmasq-nanny
            name: kube-dns-config
        - args:
          - --v=2
          - --probe=kubedns,127.0.0.1:10053,kubernetes.default.svc.cluster.local,5,SRV
          - --probe=dnsmasq,127.0.0.1:53,kubernetes.default.svc.cluster.local,5,SRV
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/k8s-dns-sidecar:1.26.4-gke.6@sha256:2ef6a9508acaa3ed35a90f8c2514b1a0e0031fa57d30721d46495c99f5401d7d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 10054
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar
          ports:
          - containerPort: 10054
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/kubedns-metrics-collector-config-data.textproto,/conf/sidecar-metrics-collector-config-data.textproto
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: kubedns-metrics-collector
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250812_2300_RC0@sha256:3c68d6d1321f23b0f6b45d996d04d0ae5ade95a313e42f95d656b4a39b3597c2
          imagePullPolicy: IfNotPresent
          name: kubedns-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 45Mi
            requests:
              cpu: 10m
              memory: 45Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1001
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kubedns-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: Default
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns
        serviceAccountName: kube-dns
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: kube-dns
            optional: true
          name: kube-dns-config
        - configMap:
            defaultMode: 420
            items:
            - key: kubedns-metrics-collector-config-data
              path: kubedns-metrics-collector-config-data.textproto
            - key: sidecar-metrics-collector-config-data
              path: sidecar-metrics-collector-config-data.textproto
            name: kubedns-metrics-collector-config-map
          name: kubedns-metrics-collector-config-map-vol
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:20Z"
    generation: 2
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 6c4b7769b7
    name: kube-dns-autoscaler-6c4b7769b7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: d576a9f7-c87c-4f7a-a35d-ea941e013bec
    resourceVersion: "1758737605677039002"
    uid: 738daf98-f2d2-42fb-bb6a-2ebebcb5a4b1
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: 6c4b7769b7
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.5
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: 6c4b7769b7
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.13@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-24T18:13:23Z"
    generation: 1
    labels:
      k8s-app: kube-dns-autoscaler
      pod-template-hash: 6d46488bd4
    name: kube-dns-autoscaler-6d46488bd4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-dns-autoscaler
      uid: d576a9f7-c87c-4f7a-a35d-ea941e013bec
    resourceVersion: "1759345913332703009"
    uid: 79db9dd5-7f74-4baf-a9f6-c7f7f273f2da
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: kube-dns-autoscaler
        pod-template-hash: 6d46488bd4
    template:
      metadata:
        annotations:
          components.gke.io/component-name: kubedns
          components.gke.io/component-version: 33.2.6
        creationTimestamp: null
        labels:
          k8s-app: kube-dns-autoscaler
          pod-template-hash: 6d46488bd4
      spec:
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=kube-dns-autoscaler
          - --target=Deployment/kube-dns
          - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"preventSinglePointFailure":true,"includeUnschedulableNodes":true}}
          - --logtostderr=true
          - --v=2
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/cluster-proportional-autoscaler:v1.10.2-gke.13@sha256:5d8547afe9975d9a090a9566e4bf07430f15092f8d803414ae0323d331940624
          imagePullPolicy: IfNotPresent
          name: autoscaler
          resources:
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 65534
          runAsGroup: 1000
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          supplementalGroups:
          - 65534
        serviceAccount: kube-dns-autoscaler
        serviceAccountName: kube-dns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-10-01T18:27:45Z"
    generation: 1
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 7dc957ffb5
    name: l7-default-backend-7dc957ffb5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 337c60c6-fdd0-4c70-9f2b-81422679ad9d
    resourceVersion: "1759346252516495010"
    uid: ac3d90e3-0bc9-4b40-8c00-46a1a421acaf
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: 7dc957ffb5
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.36.4-gke.0
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: 7dc957ffb5
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:23Z"
    generation: 2
    labels:
      k8s-app: glbc
      name: glbc
      pod-template-hash: 7f7fd76487
    name: l7-default-backend-7f7fd76487
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: l7-default-backend
      uid: 337c60c6-fdd0-4c70-9f2b-81422679ad9d
    resourceVersion: "1759343269115695016"
    uid: 2e027fbe-5631-4281-8049-186a62338405
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: glbc
        pod-template-hash: 7f7fd76487
    template:
      metadata:
        annotations:
          components.gke.io/component-name: l7-lb-controller-combined
          components.gke.io/component-version: 1.36.3-gke.1
        creationTimestamp: null
        labels:
          k8s-app: glbc
          name: glbc
          pod-template-hash: 7f7fd76487
      spec:
        automountServiceAccountToken: false
        containers:
        - image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/ingress-gce-404-server-with-metrics:v1.36.2@sha256:2e2ff60c96f67592b6fa403ec192ad9e4064ec9a9589e2774e6f78eeb1804497
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: default-http-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-09-17T17:09:37Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      pod-template-hash: 5d59c97b7b
      version: v1.33.0
    name: metrics-server-v1.33.0-5d59c97b7b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.33.0
      uid: 394bc4ac-363a-47bb-890d-135874c7fcc4
    resourceVersion: "1758129905753807015"
    uid: 1f34d6fd-df42-4dad-afc3-ba961aee8393
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 5d59c97b7b
        version: v1.33.0
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 5d59c97b7b
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.45@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      components.gke.io/layer: addon
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-09-17T17:09:42Z"
    generation: 1
    labels:
      k8s-app: metrics-server
      pod-template-hash: 77d549c684
      version: v1.33.0
    name: metrics-server-v1.33.0-77d549c684
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server-v1.33.0
      uid: 394bc4ac-363a-47bb-890d-135874c7fcc4
    resourceVersion: "1759345781795967021"
    uid: 70376613-b2c7-4c9a-9c0f-08ad584541c6
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 77d549c684
        version: v1.33.0
    template:
      metadata:
        annotations:
          components.gke.io/component-name: metrics-server
          components.gke.io/component-version: 1.33.0-gke.3
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          pod-template-hash: 77d549c684
          version: v1.33.0
        name: metrics-server
      spec:
        containers:
        - command:
          - /metrics-server
          - --metric-resolution=30s
          - --kubelet-preferred-address-types=InternalIP,Hostname,InternalDNS,ExternalDNS,ExternalIP
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-allow-working-set-bytes-zero=false
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/metrics-server:v0.7.1-gke.45@sha256:6d492cdefe6ca4b4582f37318b70fb2098cb35058f04128fb9f5a4cf9bd73243
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          name: metrics-server
          ports:
          - containerPort: 10250
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 50
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 43m
              memory: 55Mi
            requests:
              cpu: 43m
              memory: 55Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - key: components.gke.io/gke-managed-components
          operator: Exists
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        volumes:
        - configMap:
            defaultMode: 420
            name: metrics-server-config
          name: metrics-server-config-volume
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2025-10-05T23:51:17Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 55f7bb978
      version: v1.0.0
    name: pixelated-55f7bb978
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759716131922303010"
    uid: 8d22424e-404a-4be7-9d05-bfdb2d50d1cb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 55f7bb978
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 55f7bb978
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:37d02f3cc9aeb21fe86f6cd9704f2cd3178d0b80
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-10-05T20:21:50Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 5b7f565b8
      version: v1.0.0
    name: pixelated-5b7f565b8
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759701522092959002"
    uid: 6fab8ce0-ee87-4471-8c96-03bd83bada97
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 5b7f565b8
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 5b7f565b8
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:001e2bb91fe3efc0c973120bb9cdfe3bb9b1aa13
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "8"
    creationTimestamp: "2025-10-05T09:17:45Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 5c56b6df94
      version: v1.0.0
    name: pixelated-5c56b6df94
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759672272615231006"
    uid: 362a1077-22a0-40e2-b891-c5632a5cc19d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 5c56b6df94
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 5c56b6df94
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:3f1104d38f68caf0991323504f717ef29abffa44
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "16"
    creationTimestamp: "2025-10-07T10:04:32Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 68d65477bb
      version: v1.0.0
    name: pixelated-68d65477bb
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759855322221007003"
    uid: 5670e687-6ade-495c-a171-22d378220dcb
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 68d65477bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 68d65477bb
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:86109e0763f0723fd3d25453f2b870fbe4a06f12
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "13"
    creationTimestamp: "2025-10-06T01:59:05Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 6fb77cb5f9
      version: v1.0.0
    name: pixelated-6fb77cb5f9
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759769507161087015"
    uid: 80205b51-5113-43e4-9675-aedf516f1177
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 6fb77cb5f9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 6fb77cb5f9
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:664a2d63595aff9271d1d99fb6404708301b33a6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2025-10-05T21:55:37Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 757886cbf4
      version: v1.0.0
    name: pixelated-757886cbf4
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759708430239263012"
    uid: 76adabc1-0d37-47e6-9f6f-fff722d73f08
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 757886cbf4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 757886cbf4
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:3b61e6d9b02a2cb59b48eb66fbe90b5f15c786a8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "15"
    creationTimestamp: "2025-10-06T23:34:34Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 77cd754b9
      version: v1.0.0
    name: pixelated-77cd754b9
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759831625616063022"
    uid: 69381b4b-69a0-41b8-9f8b-4ffd02d78f49
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 77cd754b9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 77cd754b9
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:147eb54be769508bb8b8436c94537ee98ecace95
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2025-10-05T13:47:56Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 78757d7fdd
      version: v1.0.0
    name: pixelated-78757d7fdd
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759695870551711016"
    uid: cb4a523b-11a3-4d9d-9d7a-f753f0b572d3
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 78757d7fdd
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 78757d7fdd
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:e748e9bf17b7f986089a53812c8819acf35eb81a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "18"
    creationTimestamp: "2025-10-08T01:17:59Z"
    generation: 3
    labels:
      app: pixelated-app
      pod-template-hash: 79db7959d9
      version: v1.0.0
    name: pixelated-79db7959d9
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759887300356271012"
    uid: afce64ff-feef-46f4-bc38-609f61df98ff
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 79db7959d9
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 79db7959d9
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:8ee48573226a7b25d3a61c1fefe22b72361d8154
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 3
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "14"
    creationTimestamp: "2025-10-06T16:49:14Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 7bc78c7f46
      version: v1.0.0
    name: pixelated-7bc78c7f46
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759793861982207019"
    uid: 202f01a6-d0ef-4b18-99a5-d737687db1b9
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 7bc78c7f46
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 7bc78c7f46
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:bce59c1e81e82dee12a30670f6388efcfecd8f9d
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "17"
    creationTimestamp: "2025-10-07T16:39:04Z"
    generation: 6
    labels:
      app: pixelated-app
      pod-template-hash: 956df44d4
      version: v1.0.0
    name: pixelated-956df44d4
    namespace: pixelated
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: pixelated
      uid: 22abfba1-748b-4831-a324-eeda12f1b09b
    resourceVersion: "1759886432777183023"
    uid: 4974ad41-b417-4e18-98ea-3652a2ffd7dc
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: pixelated-app
        pod-template-hash: 956df44d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: pixelated-app
          pod-template-hash: 956df44d4
          version: v1.0.0
      spec:
        automountServiceAccountToken: false
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: HOST
            value: 0.0.0.0
          - name: PORT
            value: "4321"
          image: registry.gitlab.com/pixeldeck/pixelated:932af017f2c3c769d7f649c33dc2dfc53813bd39
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: pixelated
          ports:
          - containerPort: 4321
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 10001
            runAsNonRoot: true
            runAsUser: 10001
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /api/health
              port: 4321
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/config
            name: config-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: regcred
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 10001
          runAsGroup: 10001
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: pixelated-config
          name: config-volume
  status:
    observedGeneration: 6
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: traefik
      meta.helm.sh/release-namespace: traefik
    creationTimestamp: "2025-09-20T02:28:14Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: traefik-traefik
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: traefik
      helm.sh/chart: traefik-37.1.1
      pod-template-hash: 7cf7bc96dd
    name: traefik-7cf7bc96dd
    namespace: traefik
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: traefik
      uid: 9c7a503f-26cb-4830-abaf-0544448ef87b
    resourceVersion: "1759346259349583008"
    uid: ccea9cb4-33e8-4db0-a6ff-a8e1f261b124
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: traefik-traefik
        app.kubernetes.io/name: traefik
        pod-template-hash: 7cf7bc96dd
    template:
      metadata:
        annotations:
          prometheus.io/path: /metrics
          prometheus.io/port: "9100"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: traefik-traefik
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: traefik
          helm.sh/chart: traefik-37.1.1
          pod-template-hash: 7cf7bc96dd
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --entryPoints.metrics.address=:9100/tcp
          - --entryPoints.traefik.address=:8080/tcp
          - --entryPoints.web.address=:8000/tcp
          - --entryPoints.websecure.address=:8443/tcp
          - --api.dashboard=true
          - --ping=true
          - --metrics.prometheus=true
          - --metrics.prometheus.entrypoint=metrics
          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowEmptyServices=true
          - --providers.kubernetesingress
          - --providers.kubernetesingress.allowEmptyServices=true
          - --providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik
          - --entryPoints.websecure.http.tls=true
          - --log.level=INFO
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: docker.io/traefik:v3.5.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          name: traefik
          ports:
          - containerPort: 9100
            name: metrics
            protocol: TCP
          - containerPort: 8080
            name: traefik
            protocol: TCP
          - containerPort: 8000
            name: web
            protocol: TCP
          - containerPort: 8443
            name: websecure
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: /ping
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /tmp
            name: tmp
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        serviceAccount: traefik
        serviceAccountName: traefik
        terminationGracePeriodSeconds: 60
        volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:08:46Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app.kubernetes.io/name: gke-managed-kube-state-metrics
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1759944747709999013"
    uid: 6f77bc89-1b3a-43d2-9b87-df34efbb7535
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/name: gke-managed-kube-state-metrics
    serviceName: kube-state-metrics
    template:
      metadata:
        annotations:
          components.gke.io/component-name: cluster-infra-metrics
          components.gke.io/component-version: 1.33.4-gke.3
        creationTimestamp: null
        labels:
          app.kubernetes.io/name: gke-managed-kube-state-metrics
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - amd64
                  - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --pod=$(POD_NAME)
          - --pod-namespace=$(POD_NAMESPACE)
          - --port=8080
          - --telemetry-port=8081
          - --resources=pods,persistentvolumes,persistentvolumeclaims,horizontalpodautoscalers,daemonsets,deployments,statefulsets
          - --metric-allowlist=kube_jobset_specified_replicas,kube_jobset_ready_replicas,kube_jobset_succeeded_replicas,kube_jobset_failed_replicas,kube_jobset_active_replicas,kube_jobset_suspended_replicas,kube_jobset_status_condition,kube_jobset_restarts,kube_persistentvolume_capacity_bytes,kube_persistentvolume_status_phase,kube_persistentvolume_claim_ref,kube_persistentvolume_info,kube_persistentvolumeclaim_info,kube_persistentvolumeclaim_resource_requests_storage_bytes,kube_persistentvolumeclaim_status_phase,kube_horizontalpodautoscaler_status_desired_replicas,kube_horizontalpodautoscaler_status_current_replicas,kube_horizontalpodautoscaler_spec_target_metric,kube_horizontalpodautoscaler_spec_min_replicas,kube_horizontalpodautoscaler_spec_max_replicas,kube_horizontalpodautoscaler_status_condition,kube_pod_status_phase,kube_pod_container_status_waiting_reason,kube_pod_container_status_ready,kube_pod_status_unschedulable,kube_daemonset_status_number_misscheduled,kube_daemonset_status_number_ready,kube_daemonset_status_desired_number_scheduled,kube_daemonset_status_updated_number_scheduled,kube_deployment_spec_replicas,kube_deployment_status_replicas_available,kube_deployment_status_replicas_updated,kube_statefulset_replicas,kube_statefulset_status_replicas_ready,kube_statefulset_status_replicas_updated
          - --namespaces-denylist=kube-system,kube-node-lease,gmp-system,gke-gmp-system,gke-managed-system,gke-managed-cim
          - --custom-resource-state-config-file=/conf/custom-resource-state-config.yaml
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/kube-state-metrics:v2.14.0-gke.25@sha256:85ee4852b28396e773f56f16afddeefa1e6e751d69b6721642c46c03eab5399a
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: kube-state-metrics
          ports:
          - containerPort: 8080
            name: k8s-objects
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: kube-state-metrics-cr-metrics-vol
        - env:
          - name: GOMAXPROCS
            value: "2"
          - name: PROJECT_NUMBER
            value: "751556915102"
          - name: LOCATION
            value: us-east1
          - name: CLUSTER_NAME
            value: pixelcluster
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_NAME
            value: ksm-metrics-collector
          - name: COLLECTOR_CONFIG_PATH
            value: /conf/ksm-metrics-collector-config-data.textproto
          - name: COMPONENT_VERSION
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-version']
          - name: COMPONENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.annotations['components.gke.io/component-name']
          - name: SPLIT_GAUGE_BUFFER
            value: "true"
          - name: TOKEN_SOURCE_MODE
            value: MODE_TOKEN_BROKER_WITH_FALLBACK
          - name: GKE_NODE_SYSTEM_WORKLOAD_CREDENTIALS
            value: /var/run/token_broker/adc/google-application-credentials.json
          - name: GKE_HOSTNAME
            value: container.googleapis.com
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-metrics-collector:20250508_2300_RC0@sha256:d074c77bdc0ee1c4245113e62d93ef1ed6f1a51960ea854a972861a6a0c774ce
          imagePullPolicy: IfNotPresent
          name: ksm-metrics-collector
          resources:
            limits:
              cpu: "1"
              memory: 30Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /conf
            name: ksm-metrics-collector-config-map-vol
          - mountPath: /var/run/token_broker/ksa
            name: token-broker-ksa
            readOnly: true
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
            readOnly: true
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /node_token_broker_init
          - --audience=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_url=https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
          - --token_file=/var/run/token_broker/ksa/token
          - --output_path=/var/run/token_broker/adc/google-application-credentials.json
          - --project_id=pixelated-463209-e5
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/node_token_broker/init:gke_node_token_broker_init_20250407.00_p0@sha256:8c161bd0d3f2ffc1d580f8b28a2a848cdc1867a84ff8abf7fd6908291697a075
          imagePullPolicy: IfNotPresent
          name: token-broker-adc-init
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/run/token_broker/adc
            name: token-broker-adc
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: token-broker-ksa
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                audience: https://container.googleapis.com/v1/projects/751556915102/locations/us-east1/clusters/pixelcluster/generateClusterNodeAgentToken
                expirationSeconds: 3600
                path: token
        - emptyDir: {}
          name: token-broker-adc
        - configMap:
            defaultMode: 420
            items:
            - key: ksm-metrics-collector-config-data
              path: ksm-metrics-collector-config-data.textproto
            name: ksm-metrics-collector-config-map
          name: ksm-metrics-collector-config-map-vol
        - configMap:
            defaultMode: 420
            items:
            - key: custom-resource-state-config.yaml
              path: custom-resource-state-config.yaml
            name: kube-state-metrics-cr-metrics
          name: kube-state-metrics-cr-metrics-vol
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 1
    collisionCount: 0
    currentReplicas: 1
    currentRevision: kube-state-metrics-db7bd94d7
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updateRevision: kube-state-metrics-db7bd94d7
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:09:32Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "1758129856914191014"
    uid: 14a05e22-b5a7-4b30-b273-2f56ba29ef21
  spec:
    persistentVolumeClaimRetentionPolicy:
      whenDeleted: Retain
      whenScaled: Retain
    podManagementPolicy: OrderedReady
    replicas: 0
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: managed-prometheus-alertmanager
        app.kubernetes.io/name: alertmanager
    serviceName: alertmanager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          components.gke.io/component-name: managed-prometheus
          components.gke.io/component-version: 0.15.4-gke.3
        creationTimestamp: null
        labels:
          app: managed-prometheus-alertmanager
          app.kubernetes.io/name: alertmanager
          app.kubernetes.io/version: 0.15.4
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                  - arm64
                  - amd64
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --config.file=/alertmanager/config_out/config.yaml
          - --storage.path=/alertmanager-data
          - --cluster.listen-address=[$(POD_IP)]:9094
          - --web.listen-address=:9093
          - --log.format=json
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/alertmanager:v0.27.0-gmp.4-gke.0@sha256:86611e3a9f1f734081b706474c1af649804d31c3a06e40515fb6e5d73b9c3e08
          imagePullPolicy: IfNotPresent
          name: alertmanager
          ports:
          - containerPort: 9093
            name: alertmanager
            protocol: TCP
          resources:
            limits:
              memory: 128M
            requests:
              cpu: 1m
              memory: 16M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
            readOnly: true
          - mountPath: /alertmanager-data
            name: alertmanager-data
        - args:
          - --config-file=/alertmanager/config.yaml
          - --config-file-output=/alertmanager/config_out/config.yaml
          - --reload-url=http://127.0.0.1:9093/-/reload
          - --ready-url=http://127.0.0.1:9093/-/ready
          - --listen-address=:19091
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/prometheus-engine/config-reloader:v0.15.4-gke.0@sha256:d829f291c33fd8eb83073047903ffcc1afa4fce7dea146ad6ed1f409f788d298
          imagePullPolicy: IfNotPresent
          name: config-reloader
          ports:
          - containerPort: 19091
            name: cfg-rel-metrics
            protocol: TCP
          resources:
            limits:
              memory: 32M
            requests:
              cpu: 1m
              memory: 4M
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager
            name: config
            readOnly: true
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - /bin/bash
          - -c
          - 'touch /alertmanager/config_out/config.yaml && echo -e "receivers:\n  -
            name: noop\nroute:\n  receiver: noop" > alertmanager/config_out/config.yaml'
          image: us-east1-artifactregistry.gcr.io/gke-release/gke-release/gke-distroless/bash:gke_distroless_20250707.00_p0@sha256:899ee9283648aec99fb2d6c7b90e19ba8d5edbe6c281d13014915bd60cf082fa
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - all
            privileged: false
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /alertmanager/config_out
            name: alertmanager-config
        priorityClassName: gmp-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsGroup: 1000
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: amd64
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Equal
          value: arm64
        - key: components.gke.io/gke-managed-components
          operator: Exists
        volumes:
        - name: config
          secret:
            defaultMode: 420
            secretName: alertmanager
        - emptyDir: {}
          name: alertmanager-data
        - emptyDir: {}
          name: alertmanager-config
    updateStrategy:
      rollingUpdate:
        partition: 0
      type: RollingUpdate
  status:
    availableReplicas: 0
    collisionCount: 0
    currentRevision: alertmanager-7d6978889
    observedGeneration: 2
    replicas: 0
    updateRevision: alertmanager-7d6978889
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      components.gke.io/component-name: cluster-infra-metrics
      components.gke.io/component-version: 1.33.4-gke.3
      components.gke.io/layer: addon
    creationTimestamp: "2025-09-17T17:08:47Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: kube-state-metrics
    namespace: gke-managed-cim
    resourceVersion: "1760920541536415018"
    uid: 56dab7fb-0061-44a4-8137-39e771012a02
  spec:
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 1800
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 3600
      scaleUp:
        policies:
        - periodSeconds: 300
          type: Pods
          value: 1
        selectPolicy: Max
        stabilizationWindowSeconds: 900
    maxReplicas: 10
    metrics:
    - resource:
        name: memory
        target:
          averageValue: 400Mi
          type: AverageValue
      type: Resource
    minReplicas: 1
    scaleTargetRef:
      apiVersion: apps/v1
      kind: StatefulSet
      name: kube-state-metrics
  status:
    conditions:
    - lastTransitionTime: "2025-09-17T17:10:38Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-10-08T17:32:56Z"
      message: the HPA was able to successfully calculate a replica count from memory
        resource
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-09-17T17:10:38Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 35
          averageValue: "47030272"
          value: "47030272"
        name: memory
      type: Resource
    currentReplicas: 1
    desiredReplicas: 1
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"autoscaling/v2","kind":"HorizontalPodAutoscaler","metadata":{"annotations":{},"name":"pixelated-hpa-advanced","namespace":"pixelated"},"spec":{"behavior":{"scaleDown":{"policies":[{"periodSeconds":60,"type":"Percent","value":10},{"periodSeconds":60,"type":"Pods","value":2}],"selectPolicy":"Min","stabilizationWindowSeconds":300},"scaleUp":{"policies":[{"periodSeconds":60,"type":"Percent","value":50},{"periodSeconds":60,"type":"Pods","value":4}],"selectPolicy":"Max","stabilizationWindowSeconds":60}},"maxReplicas":20,"metrics":[{"resource":{"name":"cpu","target":{"averageUtilization":70,"type":"Utilization"}},"type":"Resource"},{"resource":{"name":"memory","target":{"averageUtilization":75,"type":"Utilization"}},"type":"Resource"},{"pods":{"metric":{"name":"http_requests_per_second"},"target":{"averageValue":"1000","type":"AverageValue"}},"type":"Pods"},{"object":{"describedObject":{"apiVersion":"networking.k8s.io/v1","kind":"Ingress","name":"pixelated-ingress"},"metric":{"name":"requests-per-second"},"target":{"type":"Value","value":"10k"}},"type":"Object"}],"minReplicas":3,"scaleTargetRef":{"apiVersion":"apps/v1","kind":"Deployment","name":"pixelated"}}}
    creationTimestamp: "2025-10-04T02:09:53Z"
    name: pixelated-hpa-advanced
    namespace: pixelated
    resourceVersion: "1760920727498047002"
    uid: 9243e537-6b62-4c75-a484-a2e3e362ed2e
  spec:
    behavior:
      scaleDown:
        policies:
        - periodSeconds: 60
          type: Percent
          value: 10
        - periodSeconds: 60
          type: Pods
          value: 2
        selectPolicy: Min
        stabilizationWindowSeconds: 300
      scaleUp:
        policies:
        - periodSeconds: 60
          type: Percent
          value: 50
        - periodSeconds: 60
          type: Pods
          value: 4
        selectPolicy: Max
        stabilizationWindowSeconds: 60
    maxReplicas: 20
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
    - resource:
        name: memory
        target:
          averageUtilization: 75
          type: Utilization
      type: Resource
    - pods:
        metric:
          name: http_requests_per_second
        target:
          averageValue: 1k
          type: AverageValue
      type: Pods
    - object:
        describedObject:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          name: pixelated-ingress
        metric:
          name: requests-per-second
        target:
          type: Value
          value: 10k
      type: Object
    minReplicas: 3
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: pixelated
  status:
    conditions:
    - lastTransitionTime: "2025-10-04T05:31:38Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-10-18T20:05:11Z"
      message: 'the HPA was unable to compute the replica count: unable to get metric
        http_requests_per_second: unable to fetch metrics from custom metrics API:
        no custom metrics API (custom.metrics.k8s.io) registered'
      reason: FailedGetPodsMetric
      status: "False"
      type: ScalingActive
    - lastTransitionTime: "2025-10-04T05:31:38Z"
      message: the desired count is within the acceptable range
      reason: DesiredWithinRange
      status: "False"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 0
          averageValue: 1m
          value: 2m
        name: cpu
      type: Resource
    - resource:
        current:
          averageUtilization: 17
          averageValue: "46257493"
          value: "138772480"
        name: memory
      type: Resource
    - type: ""
    - type: ""
    currentReplicas: 3
    desiredReplicas: 3
    lastScaleTime: "2025-10-04T05:31:23Z"
kind: List
metadata:
  resourceVersion: ""
