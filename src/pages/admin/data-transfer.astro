---
export const prerender = false
// data-transfer.astro
// Admin page for managing data transfers, portability, and audit logs
import AdminLayout from '../../components/admin/AdminLayout.astro'
import DataPortabilitySystem from '../../components/admin/DataPortabilitySystem.astro'
import TransferAuditLog from '../../components/admin/TransferAuditLog.astro'
import { Icon } from 'astro-icon/components'

// Page configuration
const title = 'Data Transfer Management'
const description =
  'Secure data portability and transfer management for HIPAA compliance'

// Dashboard metrics - for demonstration
const metrics = [
  {
    id: 'transfers-completed',
    label: 'Transfers Completed',
    value: 154,
    change: '+12%',
    trend: 'up',
    icon: 'file-export',
  },
  {
    id: 'transfers-failed',
    label: 'Transfer Failures',
    value: 3,
    change: '-5%',
    trend: 'down',
    icon: 'alert-triangle',
  },
  {
    id: 'patients-accessed',
    label: 'Patients Accessed',
    value: 87,
    change: '+8%',
    trend: 'up',
    icon: 'users',
  },
  {
    id: 'data-volume',
    label: 'Data Volume (GB)',
    value: 25.4,
    change: '+15%',
    trend: 'up',
    icon: 'database',
  },
]

// Get trend class for styling
const getTrendClass = (trend: string) => {
  return trend === 'up'
    ? 'text-green-500 dark:text-green-400'
    : 'text-red-500 dark:text-red-400'
}
---

<AdminLayout {title} {description} activeItem="data-transfer">
  <div class="space-y-6">
    <!-- Header Section -->
    <div
      class="flex flex-col md:flex-row md:items-center md:justify-between gap-4"
    >
      <div>
        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
          {title}
        </h1>
        <p class="mt-1 text-gray-500 dark:text-gray-400">
          Manage patient data transfers with advanced security controls
        </p>
      </div>

      <div class="flex items-center gap-3">
        <button
          type="button"
          class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:bg-blue-700 dark:hover:bg-blue-600 flex items-center"
        >
          <Icon name="file-export" class="w-5 h-5 mr-2" />
          Export Audit Logs
        </button>

        <button
          type="button"
          class="px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:border-gray-600 dark:text-gray-300 dark:hover:bg-gray-700 flex items-center"
        >
          <Icon name="refresh" class="w-5 h-5 mr-2" />
          Refresh
        </button>
      </div>
    </div>

    <!-- Metrics Grid -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
      {
        metrics.map((metric) => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-5">
            <div class="flex justify-between items-start">
              <div>
                <p class="text-sm font-medium text-gray-500 dark:text-gray-400">
                  {metric.label}
                </p>
                <p class="text-2xl font-bold text-gray-900 dark:text-white mt-1">
                  {metric.value}
                </p>
              </div>
              <div
                class={`p-3 rounded-full bg-${metric.trend === 'up' ? 'green' : 'red'}-100 dark:bg-${metric.trend === 'up' ? 'green' : 'red'}-900/20`}
              >
                <Icon
                  name={metric.icon}
                  class={`w-6 h-6 ${getTrendClass(metric.trend)}`}
                />
              </div>
            </div>
            <div
              class={`flex items-center mt-4 ${getTrendClass(metric.trend)}`}
            >
              <Icon
                name={metric.trend === 'up' ? 'trending-up' : 'trending-down'}
                class="w-4 h-4 mr-1"
              />
              <span class="text-sm font-medium">
                {metric.change} from last month
              </span>
            </div>
          </div>
        ))
      }
    </div>

    <!-- Main Content Tabs -->
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden">
      <div class="border-b border-gray-200 dark:border-gray-700">
        <nav class="flex space-x-2 px-4" aria-label="Tabs">
          <button
            id="tab-data-portability"
            type="button"
            class="py-4 px-1 border-b-2 border-blue-500 text-blue-600 dark:text-blue-400 dark:border-blue-400 font-medium text-sm"
            aria-selected="true"
          >
            Data Portability
          </button>
          <button
            id="tab-audit-logs"
            type="button"
            class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:border-gray-600 font-medium text-sm"
            aria-selected="false"
          >
            Audit Logs
          </button>
          <button
            id="tab-settings"
            type="button"
            class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 dark:text-gray-400 dark:hover:text-gray-300 dark:hover:border-gray-600 font-medium text-sm"
            aria-selected="false"
          >
            Settings
          </button>
        </nav>
      </div>

      <!-- Tab Panels -->
      <div class="p-4">
        <!-- Data Portability Panel (Default Active) -->
        <div id="panel-data-portability" class="block">
          <DataPortabilitySystem />
        </div>

        <!-- Audit Logs Panel (Initially Hidden) -->
        <div id="panel-audit-logs" class="hidden">
          <TransferAuditLog />
        </div>

        <!-- Settings Panel (Initially Hidden) -->
        <div id="panel-settings" class="hidden">
          <div class="p-6 bg-white dark:bg-gray-800 rounded-lg">
            <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              Data Transfer Settings
            </h2>

            <div class="space-y-6">
              <!-- Encryption Settings -->
              <div class="space-y-3">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                  Encryption Settings
                </h3>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">End-to-End Encryption</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Apply FHE to all data transfers
                    </p>
                  </div>
                  <div class="relative inline-flex items-center cursor-pointer">
                    <input
                      type="checkbox"
                      id="encryption-toggle"
                      checked
                      class="sr-only peer"
                    />
                    <div
                      class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
                    >
                    </div>
                  </div>
                </div>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">Key Rotation Period</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Automatically rotate encryption keys
                    </p>
                  </div>
                  <select
                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"
                  >
                    <option value="30">30 days</option>
                    <option value="60">60 days</option>
                    <option value="90" selected>90 days</option>
                    <option value="180">180 days</option>
                  </select>
                </div>
              </div>

              <!-- Access Control Settings -->
              <div class="space-y-3">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                  Access Control
                </h3>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">
                      Two-Factor Authentication for Transfers
                    </p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Require 2FA for all data transfers
                    </p>
                  </div>
                  <div class="relative inline-flex items-center cursor-pointer">
                    <input
                      type="checkbox"
                      id="tfa-toggle"
                      checked
                      class="sr-only peer"
                    />
                    <div
                      class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
                    >
                    </div>
                  </div>
                </div>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">Allowed Export Formats</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Select permitted data formats
                    </p>
                  </div>
                  <select
                    multiple
                    size="3"
                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"
                  >
                    <option value="json" selected>JSON</option>
                    <option value="csv" selected>CSV</option>
                    <option value="fhir" selected>FHIR</option>
                    <option value="ccd" selected>CCD</option>
                    <option value="hl7" selected>HL7</option>
                  </select>
                </div>
              </div>

              <!-- Audit Settings -->
              <div class="space-y-3">
                <h3 class="text-lg font-medium text-gray-900 dark:text-white">
                  Audit Settings
                </h3>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">Log Retention Period</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Set how long audit logs are retained
                    </p>
                  </div>
                  <select
                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block p-2 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white"
                  >
                    <option value="180">6 months</option>
                    <option value="365">1 year</option>
                    <option value="730" selected>2 years</option>
                    <option value="1825">5 years</option>
                  </select>
                </div>

                <div
                  class="flex items-center justify-between py-2 border-b border-gray-200 dark:border-gray-700"
                >
                  <div>
                    <p class="font-medium">Suspicious Activity Alerts</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">
                      Notify admins about unusual transfer patterns
                    </p>
                  </div>
                  <div class="relative inline-flex items-center cursor-pointer">
                    <input
                      type="checkbox"
                      id="alerts-toggle"
                      checked
                      class="sr-only peer"
                    />
                    <div
                      class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600"
                    >
                    </div>
                  </div>
                </div>
              </div>

              <!-- Save Button -->
              <div class="mt-6">
                <button
                  type="button"
                  class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 dark:bg-blue-700 dark:hover:bg-blue-600"
                >
                  Save Settings
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Tab functionality
    const tabs = document.querySelectorAll('[id^="tab-"]')
    const panels = document.querySelectorAll('[id^="panel-"]')

    tabs.forEach((tab) => {
      tab.addEventListener('click', () => {
        // Toggle tabs
        tabs.forEach((t) => {
          t.classList.remove(
            'border-blue-500',
            'text-blue-600',
            'dark:text-blue-400',
            'dark:border-blue-400',
          )
          t.classList.add(
            'border-transparent',
            'text-gray-500',
            'hover:text-gray-700',
            'hover:border-gray-300',
            'dark:text-gray-400',
            'dark:hover:text-gray-300',
            'dark:hover:border-gray-600',
          )
          t.setAttribute('aria-selected', 'false')
        })

        tab.classList.remove(
          'border-transparent',
          'text-gray-500',
          'hover:text-gray-700',
          'hover:border-gray-300',
          'dark:text-gray-400',
          'dark:hover:text-gray-300',
          'dark:hover:border-gray-600',
        )
        tab.classList.add(
          'border-blue-500',
          'text-blue-600',
          'dark:text-blue-400',
          'dark:border-blue-400',
        )
        tab.setAttribute('aria-selected', 'true')

        // Toggle panels
        const tabName = tab.id.replace('tab-', '')
        panels.forEach((panel) => {
          panel.classList.add('hidden')
        })
        document.getElementById(`panel-${tabName}`)?.classList.remove('hidden')
      })
    })

    // Handle form submissions and settings changes
    // In a real implementation, these would save to a database
    document
      .querySelector('button[type="submit"]')
      ?.addEventListener('click', (e) => {
        e.preventDefault()
        alert(
          'In a production environment, this would save your settings to the database.',
        )
      })
  })
</script>
