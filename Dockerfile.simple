# syntax = docker/dockerfile:1

ARG NODE_VERSION=24
FROM node:${NODE_VERSION}-alpine AS base

LABEL org.opencontainers.image.description="Pixelated Empathy - Production"

# Install pnpm
ARG PNPM_VERSION=10.20.0
RUN npm install -g pnpm@$PNPM_VERSION

# Install only essential system dependencies
RUN apk add --no-cache \
    curl \
    ca-certificates \
    && rm -rf /var/cache/apk/*

WORKDIR /app

ENV NODE_ENV="production"
ENV ASTRO_TELEMETRY_DISABLED=1
ENV ASTRO_CACHE_DIR=/tmp/.astro
ENV VITE_CACHE_DIR=/tmp/.vite
ENV PORT=4321
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Create non-root user
RUN addgroup -g 1001 -S astro && \
    adduser -S astro -u 1001 -G astro

FROM base AS build

# Copy package files
COPY package.json pnpm-lock.yaml* ./

# Install all dependencies (including dev for build)
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm config set store-dir /pnpm/store && \
    pnpm install --frozen-lockfile

# Copy source files
COPY . .

# Build the application
RUN pnpm build

FROM base AS runtime

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:4321/health || exit 1

USER astro

# Copy production dependencies
COPY --from=build --chown=astro:astro /app/node_modules ./node_modules
COPY --from=build --chown=astro:astro /app/package.json ./
COPY --from=build --chown=astro:astro /app/dist ./dist

# Create minimal start script
RUN echo '#!/bin/sh\nnode ./dist/server/entry.mjs' > start.sh && \
    chmod +x start.sh

EXPOSE 4321

CMD ["./start.sh"]