---
import AdminLayout from '../../../../layouts/AdminLayout.astro'

// Mock data for the disaster recovery dashboard
const recoveryMetrics = {
  totalRecoveryPlans: 8,
  testedPlans: 6,
  averageRecoveryTime: 45, // minutes
  successfulTests: 18,
  failedTests: 2,
  lastTestDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000), // 7 days ago
}

const recoveryPlans = [
  {
    id: 'DR-001',
    name: 'Database Failure Recovery',
    systems: ['Patient Database', 'Analytics Database'],
    rto: 30, // minutes
    rpo: 15, // minutes
    lastTested: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000),
    status: 'verified',
  },
  {
    id: 'DR-002',
    name: 'API Service Recovery',
    systems: ['Authentication API', 'Data Access API'],
    rto: 15, // minutes
    rpo: 5, // minutes
    lastTested: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),
    status: 'needs-testing',
  },
  {
    id: 'DR-003',
    name: 'Web Application Recovery',
    systems: ['Admin Portal', 'Patient Portal'],
    rto: 60, // minutes
    rpo: 30, // minutes
    lastTested: new Date(Date.now() - 21 * 24 * 60 * 60 * 1000),
    status: 'verified',
  },
  {
    id: 'DR-004',
    name: 'Ransomware Response',
    systems: ['All Systems'],
    rto: 120, // minutes
    rpo: 30, // minutes
    lastTested: new Date(Date.now() - 45 * 24 * 60 * 60 * 1000),
    status: 'needs-update',
  },
  {
    id: 'DR-005',
    name: 'Data Center Outage',
    systems: ['All Systems'],
    rto: 240, // minutes
    rpo: 60, // minutes
    lastTested: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000),
    status: 'needs-testing',
  },
]

const scheduledTests = [
  {
    id: 'TEST-001',
    plan: 'Database Failure Recovery',
    scheduledDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
    type: 'Automated',
    duration: '45 minutes',
  },
  {
    id: 'TEST-002',
    plan: 'API Service Recovery',
    scheduledDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
    type: 'Automated',
    duration: '30 minutes',
  },
  {
    id: 'TEST-003',
    plan: 'Ransomware Response',
    scheduledDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),
    type: 'Tabletop Exercise',
    duration: '2 hours',
  },
]

// Helper function to format dates
function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  }).format(date)
}

// Helper function to get status badge class
function getStatusBadgeClass(status: 'verified' | 'needs-testing' | 'needs-update' | 'in-development'): string {
  switch (status) {
    case 'verified':
      return 'bg-green-100 text-green-800'
    case 'needs-testing':
      return 'bg-amber-100 text-amber-800'
    case 'needs-update':
      return 'bg-red-100 text-red-800'
    case 'in-development':
      return 'bg-blue-100 text-blue-800'
    default:
      return 'bg-gray-100 text-gray-800'
  }
}

// Helper function to get status display text
function getStatusDisplayText(status: 'verified' | 'needs-testing' | 'needs-update' | 'in-development'): string {
  switch (status) {
    case 'verified':
      return 'Verified'
    case 'needs-testing':
      return 'Needs Testing'
    case 'needs-update':
      return 'Needs Update'
    case 'in-development':
      return 'In Development'
    default:
      return 'Unknown'
  }
}
---

<AdminLayout
  title="Disaster Recovery"
  description="Disaster Recovery and Business Continuity Planning"
>
  <div class="px-6 py-8">
    <div class="flex justify-between items-center mb-6">
      <h1 class="text-2xl font-bold text-gray-800">
        Disaster Recovery Management
      </h1>
      <div class="flex space-x-3">
        <a
          href="/admin/security/disaster-recovery/plans"
          class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors"
        >
          Recovery Plans
        </a>
        <a
          href="/admin/security/disaster-recovery/tests"
          class="px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700 transition-colors"
        >
          Test Results
        </a>
        <button
          id="run-test-btn"
          class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 transition-colors"
        >
          Run Test
        </button>
      </div>
    </div>

    <!-- Recovery Metrics Cards -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
      <div class="bg-white rounded-lg shadow-sm p-4">
        <h3 class="text-sm font-medium text-gray-500">Recovery Plans</h3>
        <p class="text-2xl font-bold text-gray-800">
          {recoveryMetrics.totalRecoveryPlans}
        </p>
        <p class="text-xs text-gray-500 mt-1">
          {recoveryMetrics.testedPlans} tested in last 90 days
        </p>
      </div>
      <div class="bg-white rounded-lg shadow-sm p-4">
        <h3 class="text-sm font-medium text-gray-500">Avg Recovery Time</h3>
        <p class="text-2xl font-bold text-blue-600">
          {recoveryMetrics.averageRecoveryTime} min
        </p>
        <p class="text-xs text-gray-500 mt-1">Target: 60 minutes</p>
      </div>
      <div class="bg-white rounded-lg shadow-sm p-4">
        <h3 class="text-sm font-medium text-gray-500">Test Success Rate</h3>
        <p class="text-2xl font-bold text-green-600">
          {
            Math.round(
              (recoveryMetrics.successfulTests /
                (recoveryMetrics.successfulTests +
                  recoveryMetrics.failedTests)) *
                100,
            )
          }%
        </p>
        <p class="text-xs text-gray-500 mt-1">
          {recoveryMetrics.successfulTests} of {
            recoveryMetrics.successfulTests + recoveryMetrics.failedTests
          } tests passed
        </p>
      </div>
      <div class="bg-white rounded-lg shadow-sm p-4">
        <h3 class="text-sm font-medium text-gray-500">Last Test Conducted</h3>
        <p class="text-2xl font-bold text-gray-800">
          {formatDate(recoveryMetrics.lastTestDate)}
        </p>
        <p class="text-xs text-gray-500 mt-1">Database Recovery Simulation</p>
      </div>
    </div>

    <!-- Recovery Plans Table -->
    <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
      <h2 class="text-lg font-semibold mb-4">Disaster Recovery Plans</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Plan ID</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Recovery Plan</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Systems</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >RTO</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >RPO</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Last Tested</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Status</th
              >
              <th
                scope="col"
                class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >Actions</th
              >
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            {
              recoveryPlans.map((plan) => (
                <tr>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    {plan.id}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {plan.name}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    <div class="flex flex-wrap gap-1">
                      {plan.systems.map((system) => (
                        <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800">
                          {system}
                        </span>
                      ))}
                    </div>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {plan.rto} min
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {plan.rpo} min
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {formatDate(plan.lastTested)}
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap">
                    <span
                      class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusBadgeClass(plan.status)}`}
                    >
                      {getStatusDisplayText(plan.status)}
                    </span>
                  </td>
                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                    <a
                      href={`/admin/security/disaster-recovery/plans/${plan.id}`}
                      class="text-indigo-600 hover:text-indigo-900 mr-3"
                    >
                      View
                    </a>
                    <button
                      data-plan-id={plan.id}
                      class="test-plan text-green-600 hover:text-green-900 mr-3"
                    >
                      Test
                    </button>
                    <button
                      data-plan-id={plan.id}
                      class="edit-plan text-amber-600 hover:text-amber-900"
                    >
                      Edit
                    </button>
                  </td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>
      <div class="mt-4 text-right">
        <a
          href="/admin/security/disaster-recovery/plans"
          class="text-indigo-600 hover:text-indigo-900 text-sm font-medium"
          >View All Recovery Plans</a
        >
      </div>
    </div>

    <!-- Scheduled Tests and Business Continuity -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
      <div class="bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-lg font-semibold mb-4">Upcoming Recovery Tests</h2>
        {
          scheduledTests.length === 0 ? (
            <p class="text-gray-500 text-center py-4">
              No scheduled tests found.
            </p>
          ) : (
            <ul class="divide-y divide-gray-200">
              {scheduledTests.map((test) => (
                <li class="py-4">
                  <div class="flex items-center justify-between">
                    <div>
                      <h3 class="text-sm font-medium text-gray-800">
                        {test.plan}
                      </h3>
                      <p class="text-xs text-gray-500">
                        Type: {test.type} | Duration: {test.duration}
                      </p>
                    </div>
                    <div class="text-right">
                      <p class="text-sm font-medium text-gray-800">
                        {formatDate(test.scheduledDate)}
                      </p>
                      <div class="mt-1">
                        <button
                          data-test-id={test.id}
                          class="text-xs text-indigo-600 hover:text-indigo-900"
                        >
                          View Details
                        </button>
                      </div>
                    </div>
                  </div>
                </li>
              ))}
            </ul>
          )
        }
        <div class="mt-4">
          <button
            id="schedule-test-btn"
            class="w-full px-4 py-2 bg-gray-100 text-gray-800 rounded hover:bg-gray-200 transition-colors text-sm"
          >
            Schedule New Test
          </button>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-lg font-semibold mb-4">Business Continuity Planning</h2>
        <div class="space-y-4">
          <div class="p-4 rounded-lg bg-gray-50">
            <h3 class="text-sm font-medium text-gray-800 mb-2">
              Critical Business Functions
            </h3>
            <div class="space-y-2">
              <div class="flex items-center">
                <div class="w-32 text-xs text-gray-500">
                  Patient Data Access
                </div>
                <div class="w-full h-2 bg-gray-200 rounded-full">
                  <div class="h-2 bg-green-600 rounded-full" style="width: 95%">
                  </div>
                </div>
                <div class="w-12 text-right text-xs font-medium text-gray-700">
                  95%
                </div>
              </div>
              <div class="flex items-center">
                <div class="w-32 text-xs text-gray-500">Authentication</div>
                <div class="w-full h-2 bg-gray-200 rounded-full">
                  <div
                    class="h-2 bg-green-600 rounded-full"
                    style="width: 100%"
                  >
                  </div>
                </div>
                <div class="w-12 text-right text-xs font-medium text-gray-700">
                  100%
                </div>
              </div>
              <div class="flex items-center">
                <div class="w-32 text-xs text-gray-500">Analytics</div>
                <div class="w-full h-2 bg-gray-200 rounded-full">
                  <div class="h-2 bg-amber-500 rounded-full" style="width: 80%">
                  </div>
                </div>
                <div class="w-12 text-right text-xs font-medium text-gray-700">
                  80%
                </div>
              </div>
              <div class="flex items-center">
                <div class="w-32 text-xs text-gray-500">Reporting</div>
                <div class="w-full h-2 bg-gray-200 rounded-full">
                  <div class="h-2 bg-amber-500 rounded-full" style="width: 75%">
                  </div>
                </div>
                <div class="w-12 text-right text-xs font-medium text-gray-700">
                  75%
                </div>
              </div>
            </div>
          </div>

          <div class="space-y-2">
            <h3 class="text-sm font-medium text-gray-800">BCP Documentation</h3>
            <ul class="space-y-2">
              <li class="flex justify-between items-center text-sm">
                <span>Business Impact Analysis</span>
                <a
                  href="/admin/security/disaster-recovery/bcp/impact-analysis"
                  class="text-indigo-600 hover:text-indigo-900">View</a
                >
              </li>
              <li class="flex justify-between items-center text-sm">
                <span>Recovery Strategies</span>
                <a
                  href="/admin/security/disaster-recovery/bcp/strategies"
                  class="text-indigo-600 hover:text-indigo-900">View</a
                >
              </li>
              <li class="flex justify-between items-center text-sm">
                <span>Communication Plan</span>
                <a
                  href="/admin/security/disaster-recovery/bcp/communication"
                  class="text-indigo-600 hover:text-indigo-900">View</a
                >
              </li>
              <li class="flex justify-between items-center text-sm">
                <span>Training Materials</span>
                <a
                  href="/admin/security/disaster-recovery/bcp/training"
                  class="text-indigo-600 hover:text-indigo-900">View</a
                >
              </li>
            </ul>
          </div>

          <div class="mt-4">
            <a
              href="/admin/security/disaster-recovery/bcp"
              class="block w-full px-4 py-2 bg-indigo-100 text-indigo-800 rounded hover:bg-indigo-200 transition-colors text-sm text-center"
            >
              Manage Business Continuity Plan
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Testing History -->
    <div class="bg-white rounded-lg shadow-sm p-6">
      <h2 class="text-lg font-semibold mb-4">Recent Test Results</h2>
      <div class="overflow-hidden">
        <div
          class="flex items-center p-4 rounded-lg bg-green-50 border border-green-200 mb-4"
        >
          <div
            class="flex-shrink-0 h-10 w-10 rounded-full bg-green-100 flex items-center justify-center mr-4"
          >
            <span class="text-green-600 text-lg">✓</span>
          </div>
          <div>
            <h3 class="text-sm font-medium text-gray-800">
              Database Recovery Test
            </h3>
            <p class="text-xs text-gray-500">
              Successfully completed on {
                formatDate(new Date(Date.now() - 7 * 24 * 60 * 60 * 1000))
              }
            </p>
          </div>
          <div class="ml-auto text-right">
            <span
              class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800"
            >
              Success
            </span>
            <p class="text-xs text-gray-500 mt-1">Recovery time: 28 minutes</p>
          </div>
        </div>

        <div
          class="flex items-center p-4 rounded-lg bg-red-50 border border-red-200 mb-4"
        >
          <div
            class="flex-shrink-0 h-10 w-10 rounded-full bg-red-100 flex items-center justify-center mr-4"
          >
            <span class="text-red-600 text-lg">×</span>
          </div>
          <div>
            <h3 class="text-sm font-medium text-gray-800">
              Ransomware Recovery Test
            </h3>
            <p class="text-xs text-gray-500">
              Failed on {
                formatDate(new Date(Date.now() - 21 * 24 * 60 * 60 * 1000))
              }
            </p>
          </div>
          <div class="ml-auto text-right">
            <span
              class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800"
            >
              Failed
            </span>
            <p class="text-xs text-gray-500 mt-1">
              Issue: Incomplete data recovery
            </p>
          </div>
        </div>

        <div
          class="flex items-center p-4 rounded-lg bg-green-50 border border-green-200"
        >
          <div
            class="flex-shrink-0 h-10 w-10 rounded-full bg-green-100 flex items-center justify-center mr-4"
          >
            <span class="text-green-600 text-lg">✓</span>
          </div>
          <div>
            <h3 class="text-sm font-medium text-gray-800">
              API Service Recovery Test
            </h3>
            <p class="text-xs text-gray-500">
              Successfully completed on {
                formatDate(new Date(Date.now() - 30 * 24 * 60 * 60 * 1000))
              }
            </p>
          </div>
          <div class="ml-auto text-right">
            <span
              class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800"
            >
              Success
            </span>
            <p class="text-xs text-gray-500 mt-1">Recovery time: 12 minutes</p>
          </div>
        </div>
      </div>

      <div class="mt-4 text-right">
        <a
          href="/admin/security/disaster-recovery/tests"
          class="text-indigo-600 hover:text-indigo-900 text-sm font-medium"
          >View All Test Results</a
        >
      </div>
    </div>
  </div>
</AdminLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Handle "Run Test" button
    const runTestBtn = document.getElementById('run-test-btn')
    runTestBtn?.addEventListener('click', () => {
      // In a real implementation, this would open a modal to select a test to run
      alert(
        'In a production environment, this would open the test configuration dialog.',
      )
    })

    // Handle "Schedule Test" button
    const scheduleTestBtn = document.getElementById('schedule-test-btn')
    scheduleTestBtn?.addEventListener('click', () => {
      window.location.href = '/admin/security/disaster-recovery/tests/schedule'
    })

    // Handle "Test Plan" buttons
    const testPlanBtns = document.querySelectorAll('.test-plan')
    testPlanBtns.forEach((button) => {
      button.addEventListener('click', (e) => {
        const planId = (e.target as HTMLElement).getAttribute('data-plan-id')
        window.location.href = `/admin/security/disaster-recovery/plans/${planId}/test`
      })
    })

    // Handle "Edit Plan" buttons
    const editPlanBtns = document.querySelectorAll('.edit-plan')
    editPlanBtns.forEach((button) => {
      button.addEventListener('click', (e) => {
        const planId = (e.target as HTMLElement).getAttribute('data-plan-id')
        window.location.href = `/admin/security/disaster-recovery/plans/${planId}/edit`
      })
    })

    // Handle test detail buttons
    const testDetailBtns = document.querySelectorAll('[data-test-id]')
    testDetailBtns.forEach((button) => {
      button.addEventListener('click', (e) => {
        const testId = (e.target as HTMLElement).getAttribute('data-test-id')
        window.location.href = `/admin/security/disaster-recovery/tests/${testId}`
      })
    })
  })
</script>
