# Advanced Load Balancer Configuration
# =====================================

# Upstream configuration with health checks
upstream pixelated_empathy {
    least_conn;
    
    # Primary servers
    server app1:3000 max_fails=3 fail_timeout=30s weight=3;
    server app2:3000 max_fails=3 fail_timeout=30s weight=3;
    server app3:3000 max_fails=3 fail_timeout=30s weight=3;
    
    # Backup server
    server backup:3000 backup;
    
    # Health check
    keepalive 32;
}

# Advanced rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
limit_req_zone $request_uri zone=per_uri:10m rate=5r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# Geo-blocking (example)
geo $blocked_country {
    default 0;
    # Add blocked countries as needed
}

# Load balancing with session affinity for specific endpoints
map $request_uri $upstream_pool {
    ~^/api/chat/  pixelated_empathy_sticky;
    default       pixelated_empathy;
}

upstream pixelated_empathy_sticky {
    ip_hash;
    server app1:3000 max_fails=3 fail_timeout=30s;
    server app2:3000 max_fails=3 fail_timeout=30s;
    server app3:3000 max_fails=3 fail_timeout=30s;
}

server {
    listen 443 ssl http2;
    server_name pixelated-empathy.com www.pixelated-empathy.com;

    # Advanced SSL configuration
    ssl_certificate /etc/ssl/certs/pixelated-empathy.crt;
    ssl_certificate_key /etc/ssl/private/pixelated-empathy.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Connection limits
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 1000;

    # Advanced security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';" always;

    # Advanced caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Conditional compression
        gzip_static on;
        brotli_static on;
    }

    # API endpoints with advanced rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req zone=per_uri burst=10 nodelay;
        
        # Circuit breaker pattern
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
        
        proxy_pass http://$upstream_pool;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Advanced timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Response buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # File upload with special handling
    location /api/upload {
        limit_req zone=upload burst=5 nodelay;
        client_max_body_size 50M;
        
        proxy_pass http://pixelated_empathy;
        proxy_request_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Health check endpoint for load balancer
server {
    listen 8081;
    server_name localhost;
    
    location /lb-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
