---
# Memory monitoring and alerting configuration for Pixelated Empathy
# This configuration monitors memory usage and triggers alerts when thresholds are exceeded

apiVersion: v1
kind: ConfigMap
metadata:
  name: memory-monitoring-config
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
    app.kubernetes.io/component: configuration
data:
  memory-thresholds.yaml: |
    # Memory threshold configuration
    thresholds:
      warning: 75  # 75% memory usage
      critical: 85  # 85% memory usage
      emergency: 95  # 95% memory usage
    
    # Build-specific thresholds
    build_thresholds:
      warning: 70
      critical: 80
      emergency: 90
    
    # Alert configuration
    alerts:
      enabled: true
      channels:
        - slack
        - email
      cooldown: 300  # 5 minutes between alerts
    
    # Monitoring intervals
    intervals:
      check: 30  # Check every 30 seconds
      report: 300  # Report every 5 minutes

---
# PrometheusRule for memory alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: memory-alerts
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
    app.kubernetes.io/component: alerting
spec:
  groups:
    - name: memory-alerts
      interval: 30s
      rules:
        # High memory usage alert
        - alert: HighMemoryUsage
          expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 75
          for: 2m
          labels:
            severity: warning
            component: memory
          annotations:
            summary: "High memory usage detected"
            description: "Memory usage is above 75% for more than 2 minutes"
            runbook_url: "https://docs.pixelatedempathy.com/runbooks/memory-alerts"
        
        # Critical memory usage alert
        - alert: CriticalMemoryUsage
          expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
          for: 1m
          labels:
            severity: critical
            component: memory
          annotations:
            summary: "Critical memory usage detected"
            description: "Memory usage is above 85% for more than 1 minute"
            runbook_url: "https://docs.pixelatedempathy.com/runbooks/memory-alerts"
        
        # Emergency memory usage alert
        - alert: EmergencyMemoryUsage
          expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 95
          for: 30s
          labels:
            severity: emergency
            component: memory
          annotations:
            summary: "Emergency memory usage detected"
            description: "Memory usage is above 95% for more than 30 seconds"
            runbook_url: "https://docs.pixelatedempathy.com/runbooks/memory-alerts"
        
        # GitLab runner memory alert
        - alert: GitLabRunnerHighMemory
          expr: container_memory_usage_bytes{pod_name=~"gitlab-runner-.*"} / container_spec_memory_limit_bytes > 0.8
          for: 2m
          labels:
            severity: warning
            component: gitlab-runner
          annotations:
            summary: "GitLab Runner high memory usage"
            description: "GitLab Runner memory usage is above 80%"
            runbook_url: "https://docs.pixelatedempathy.com/runbooks/gitlab-runner-memory"
        
        # Build process memory alert
        - alert: BuildProcessHighMemory
          expr: container_memory_usage_bytes{container_name=~"build", pod_name=~"runner-.*"} / container_spec_memory_limit_bytes > 0.9
          for: 1m
          labels:
            severity: critical
            component: build
          annotations:
            summary: "Build process high memory usage"
            description: "Build process memory usage is above 90%"
            runbook_url: "https://docs.pixelatedempathy.com/runbooks/build-memory-alerts"

---
# ServiceMonitor for memory metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: memory-metrics
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
    app.kubernetes.io/component: metrics
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: gitlab-runner
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics
      honorLabels: true
  namespaceSelector:
    matchNames:
      - gitlab-runner

---
# Memory monitoring dashboard ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: memory-dashboard
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
    app.kubernetes.io/component: dashboard
    grafana_dashboard: "1"
data:
  memory-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Memory Monitoring Dashboard",
        "tags": ["memory", "gitlab-runner", "build"],
        "timezone": "browser",
        "panels": [
          {
            "title": "Memory Usage Overview",
            "type": "graph",
            "targets": [
              {
                "expr": "(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100",
                "legendFormat": "Memory Usage %"
              }
            ],
            "yAxes": [
              {
                "max": 100,
                "min": 0,
                "unit": "percent"
              }
            ],
            "alert": {
              "conditions": [
                {
                  "query": {
                    "params": ["A", "2m", "now"]
                  },
                  "reducer": {
                    "type": "avg"
                  },
                  "evaluator": {
                    "params": [75],
                    "type": "gt"
                  }
                }
              ],
              "executionErrorState": "alerting",
              "frequency": "30s",
              "handler": 1,
              "name": "Memory Usage Alert"
            }
          },
          {
            "title": "GitLab Runner Memory",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{pod_name=~\"gitlab-runner-.*\"} / 1024 / 1024",
                "legendFormat": "Memory Usage (MB)"
              }
            ],
            "yAxes": [
              {
                "unit": "MB"
              }
            ]
          },
          {
            "title": "Build Process Memory",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{container_name=~\"build\", pod_name=~\"runner-.*\"} / 1024 / 1024",
                "legendFormat": "Build Memory (MB)"
              }
            ],
            "yAxes": [
              {
                "unit": "MB"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
# Memory monitoring deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memory-monitor
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
    app.kubernetes.io/component: monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: memory-monitoring
  template:
    metadata:
      labels:
        app.kubernetes.io/name: memory-monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: memory-monitor
          image: prom/node-exporter:latest
          ports:
            - containerPort: 8080
              name: metrics
          args:
            - --path.procfs=/host/proc
            - --path.sysfs=/host/sys
            - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
          volumeMounts:
            - name: proc
              mountPath: /host/proc
              readOnly: true
            - name: sys
              mountPath: /host/sys
              readOnly: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys

---
# Service for memory monitor
apiVersion: v1
kind: Service
metadata:
  name: memory-monitor
  namespace: gitlab-runner
  labels:
    app.kubernetes.io/name: memory-monitoring
spec:
  selector:
    app.kubernetes.io/name: memory-monitoring
  ports:
    - port: 8080
      targetPort: 8080
      name: metrics
  type: ClusterIP