---
import type { CollectionEntry } from 'astro:content';

export interface Props {
  post: CollectionEntry<'blog'>;
  variant?: 'default' | 'minimal';
}

const { post, variant = 'default' } = Astro.props;

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

function getReadingTime(content: string) {
  const wordsPerMinute = 200;
  const words = content.split(/\s+/).length;
  const minutes = Math.ceil(words / wordsPerMinute);
  return `${minutes} min read`;
}
---

{variant === 'minimal' ? (
  <!-- Minimal variant for blog index -->
  <article class="group">
    <div class="flex flex-col sm:flex-row gap-4">
      <div class="flex-shrink-0 text-sm text-slate-400 sm:w-32">
        {formatDate(new Date(post.data.pubDate))}
        <span class="hidden sm:block mt-1">
          {getReadingTime(post.body)}
        </span>
      </div>

      <div class="flex-1">
        <h3 class="text-xl font-bold mb-2 group-hover:text-green-400 transition-colors">
          <a href={`/blog/${post.slug}`} class="block">
            {post.data.title}
          </a>
        </h3>

        <p class="text-slate-300 mb-3 leading-relaxed">
          {post.data.description}
        </p>

        {post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-3">
            {post.data.tags.map((tag: string) => (
              <a
                href={`/blog/tags/${tag}`}
                class="text-xs text-green-400 hover:text-green-300 transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        )}

        <a
          href={`/blog/${post.slug}`}
          class="inline-flex items-center text-sm text-slate-400 hover:text-green-400 transition-colors group-hover:text-green-400"
        >
          Read article
          <span class="ml-1 group-hover:translate-x-1 transition-transform">â†’</span>
        </a>
      </div>
    </div>
  </article>
) : (
  <!-- Default card variant -->
  <li class="transition-all duration-300">
    <a href={`/blog/${post.slug}`} class="group block rounded-xl border border-slate-700 bg-slate-800/40 backdrop-blur-md shadow-lg hover:border-green-400/70 hover:shadow-green-400/10 transition-all overflow-hidden focus:outline-none focus:ring-2 focus:ring-green-400/70 hover:scale-[1.03] duration-200">
      {post.data.image?.url && (
        <img src={post.data.image.url} alt={post.data.image.alt ?? post.data.title} class="w-full h-44 object-cover object-center opacity-90 group-hover:opacity-100 transition-opacity" loading="lazy" />
      )}
      <div class="p-5 flex flex-col gap-2">
        <span class="inline-block px-2 py-0.5 rounded-full text-xs font-semibold text-green-300 bg-green-900/30 mb-1">
          {post.data.category ?? 'Blog'}
        </span>
        <h2 class="text-xl font-bold text-slate-100 group-hover:text-green-400 mb-1 transition-colors line-clamp-2 tracking-tight font-geist">{post.data.title}</h2>
        <p class="text-sm text-slate-300 line-clamp-3 mb-2">{post.data.description}</p>
        <div class="flex items-center gap-2 mt-auto">
          <img src="/assets/avatar-default.svg" alt="Author avatar" class="w-7 h-7 rounded-full border border-green-400/30" />
          <span class="text-xs text-slate-400">By {post.data.author ?? 'Pixelated Empathy'}</span>
          <time class="text-xs text-slate-400 ml-auto">{formatDate(new Date(post.data.pubDate))}</time>
        </div>
      </div>
    </a>
  </li>
)}
