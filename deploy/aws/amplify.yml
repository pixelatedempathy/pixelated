version: 1

frontend:
  environment:
    variables:
      NODE_VERSION: '22'
      PNPM_VERSION: '10.13.1'
      ENABLE_PNPM_STORE: 'true'
      NODE_ENV: 'production'
      ASTRO_TELEMETRY_DISABLED: '1'
      NODE_OPTIONS: '--max-old-space-size=12288'
      AWS_DEPLOYMENT: '1'
      CUSTOM_IMAGE: 'amplify:al2023'

  phases:
    install:
      commands:
        - echo Installing nvm...
        - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
        - export NVM_DIR="$HOME/.nvm"
        - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
        - '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'

    preBuild:
      commands:
        - '. "$NVM_DIR/nvm.sh" && nvm install v22.16.0 && echo "node installed by arun"'
        - nvm use v22.16.0
        - npm i npm@latest -g
        - npm install -g pnpm
        - export SHELL=bash
        - pnpm setup
        - 'export PNPM_HOME="/root/.local/share/pnpm"'
        - 'export PATH="$PNPM_HOME:$PATH"'
        - 'export NODE_OPTIONS=--max-old-space-size=12288'
        - pnpm config set store-dir .pnpm-store
        - pnpm config set auto-install-peers true
        - pnpm config set strict-peer-dependencies false
        - pnpm config set dangerouslyallowallbuilds true
        - pnpm install --no-frozen-lockfile
        - pnpm rebuild

    build:
      commands:
        - echo "ðŸ”¨ Building Astro application..."
        - mkdir -p .amplify-hosting/compute/default
        - 'node -e "const pkg = require(\"./package.json\"); const serverPkg = {dependencies: {react: pkg.dependencies.react, \"react-dom\": pkg.dependencies[\"react-dom\"]}}; Object.entries(pkg.dependencies).filter(([k]) => !k.includes(\"@astrojs\") && !k.includes(\"astro-\")).forEach(([k, v]) => { serverPkg.dependencies[k] = v }); require(\"fs\").writeFileSync(\".amplify-hosting/compute/default/package.json\", JSON.stringify(serverPkg, null, 2));"'
        - 'echo "CDN_BASE_URL=${CDN_BASE_URL:-/}" >> .env.amplify'
        - echo "NODE_ENV=production" > .env.amplify
        - echo "NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-https://dihivzkwbwpkpebichlk.supabase.co}" >> .env.amplify
        - echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}" >> .env.amplify
        - echo "PUBLIC_URL=${PUBLIC_URL:-https://pixelatedempathy.com}" >> .env.amplify
        - echo "SENTRY_DSN=${SENTRY_DSN}" >> .env.amplify
        - echo "REDIS_URL=${REDIS_URL}" >> .env.amplify
        - AWS_DEPLOYMENT=1 pnpm run build
        - cp .env.amplify .amplify-hosting/compute/default/.env
        - mkdir -p .amplify-hosting/server
        - cp -r dist/server/* .amplify-hosting/server/
        - (cd .amplify-hosting/compute/default && pnpm install --prod --no-frozen-lockfile)
        - echo "âœ… Build completed"

    postBuild:
      commands:
        - echo "ðŸ§¹ Post-build optimizations..."
        - ls -la .amplify-hosting/compute/default/
        - mkdir -p .amplify-hosting/static
        - echo '{"status":"ok","version":"'$(node -e "console.log(require('./package.json').version)")'"}' > .amplify-hosting/static/health.json
        - echo '{"version":1,"framework":"astro","frameworkVersion":"'$(node -e "console.log(require('./package.json').dependencies.astro)")'", "path":"server/entry.mjs"}' > .amplify-hosting/deploy-manifest.json
        - ./scripts/check-amplify-deployment.sh

  artifacts:
    baseDirectory: .amplify-hosting
    files:
      - '**/*'

  cache:
    paths:
      - '.pnpm-store/**/*'
      - '.astro/**/*'
