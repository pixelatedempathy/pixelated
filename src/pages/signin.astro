---
import BaseLayout from '../layouts/BaseLayout.astro'
import { LoginForm } from '../components/auth/LoginForm.tsx'
import { ClientRouter } from 'astro:transitions'
import { Icon } from 'astro-icon/components'

// Get the redirect URL from the query parameters
const redirectUrl = Astro.url.searchParams.get('redirect') || '/dashboard'

// Check if the redirection is coming from the dashboard
const isFromDashboard = redirectUrl.includes('/dashboard')
---

<BaseLayout
  title="Sign In | Pixelated Empathy"
  description="Log in to your Pixelated Empathy account to access mental health resources and personal therapy chat."
  bgType={false}
  centered={true}
  transitionMode="fade"
  isLoginPage={true}
>
  <ClientRouter />
  <div
    class="w-full max-w-md mx-auto p-6 rounded-xl backdrop-blur-sm shadow-xl card-gradient"
  >
    <div class="text-center mb-8">
      <h1 class="text-2xl font-semibold">Welcome Back</h1>
      <p class="text-sm text-muted-foreground mt-1">
        Sign in to continue to your therapy space
      </p>
    </div>

    <LoginForm client:load redirectTo={redirectUrl} />

    <div class="mt-6 text-center">
      <p class="text-sm text-muted-foreground">
        Don't have an account?{' '}
        <a
          href="/register"
          class="text-primary hover:underline"
          data-astro-prefetch
        >
          Sign up
        </a>
      </p>
    </div>

    {
      isFromDashboard && (
        <div class="mt-8 p-4 border border-border/50 rounded-lg bg-card/50">
          <div class="flex items-start">
            <div class="mr-3 mt-1">
              <Icon name="lucide:info" class="w-5 h-5 text-primary" />
            </div>
            <div>
              <h3 class="text-sm font-medium">Session Required</h3>
              <p class="text-xs text-muted-foreground mt-1">
                You need to be logged in to access the dashboard. Please sign in
                with your credentials or create a new account.
              </p>
            </div>
          </div>
        </div>
      )
    }
  </div>
</BaseLayout>

<style>
  .card-gradient {
    background: linear-gradient(
      135deg,
      rgba(20, 20, 20, 0.8) 0%,
      rgba(20, 20, 20, 0.4) 100%
    );
    backdrop-filter: blur(10px);
    border: 1px solid rgba(50, 50, 50, 0.3);
  }

  :global(.dark) .card-gradient {
    background: linear-gradient(
      135deg,
      rgba(20, 20, 20, 0.8) 0%,
      rgba(20, 20, 20, 0.4) 100%
    );
  }
</style>
