# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Kubesec

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
  - cron: '30 3 * * 4'

jobs:
  lint:
    name: Kubesec
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Validate Kubernetes YAML syntax
      # Install PyYAML and parse manifests to ensure kubes manifests are valid before scanning
      run: |
        python -m pip install --upgrade pip
        python -m pip install PyYAML
        python - <<'PY'
        import sys, yaml
        try:
            list(yaml.safe_load_all(open('k8s/deployment.yaml', 'r')))
        except Exception as e:
            print(f'YAML syntax error: {e}', file=sys.stderr)
            sys.exit(1)
        print('YAML syntax OK')
        PY

    - name: Run yamllint (style, non-blocking)
      continue-on-error: true
      run: |
        python -m pip install yamllint
        yamllint k8s/*.yaml || true

    - name: Run kubesec scanner
      uses: controlplaneio/kubesec-action@43d0ddff5ffee89a6bb9f29b64cd865411137b14
      with:
        input: k8s/deployment.yaml
        format: sarif
        output: kubesec-results.sarif
        exit-code: "0"

    - name: Upload Kubesec scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: kubesec-results.sarif
