name: Build and Push to Docker Hub

on:
  push:
    branches: [master]
    tags:
      - 'v*'
      - 'release-*'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v5

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Generate build timestamp tag
      id: buildts
      run: echo "BUILD_TS=$(date +%s)" >> $GITHUB_ENV

    - name: Check Docker Hub credentials
      id: check_creds
      run: |
        if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
          echo "has_creds=true" >> $GITHUB_OUTPUT
        elif [ -n "${{ secrets.DOCKER_USER }}" ] && [ -n "${{ secrets.DOCKER_PAT }}" ]; then
          echo "has_creds=true" >> $GITHUB_OUTPUT
        else
          echo "has_creds=false" >> $GITHUB_OUTPUT
        fi

    - name: Login to Docker Hub
      if: steps.check_creds.outputs.has_creds == 'true'
      id: docker_login
      continue-on-error: true
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME || secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN || secrets.DOCKER_PAT }}
        logout: true

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: ${{ steps.docker_login.outcome == 'success' }}
        tags: |
          pixelatedempathy/pixelated-empathy:latest
          pixelatedempathy/pixelated-empathy:${{ github.sha }}
          pixelatedempathy/pixelated-empathy:build-${{ env.BUILD_TS }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          NODE_ENV=production
