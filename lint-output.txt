
> pixelated@0.0.1 lint:fix /home/vivi/pixelated
> oxlint --fix src


  x Unexpected token
     ,-[src/pages/dev/live-region-demo.astro:163:50]
 162 |   // Progress demo functionality
 163 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 164 |     const progressButton = document.getElementById('progress-demo')
     `----

  x Expected `,` but found `:`
     ,-[src/pages/dev/browser-compatibility-test.astro:387:51]
 386 |   const form = document.getElementById('compatibility-form') as HTMLFormElement
 387 |   form?.addEventListener('submit', (e: SubmitEvent: Event) => {
     :                                                   |
     :                                                   `-- `,` expected
 388 |     e.preventDefault()
     `----

  x Unexpected token
     ,-[src/pages/dev/accessibility-test.astro:118:52]
 117 |     // Add interactivity for the screen reader tes
 118 |     document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                    ^
 119 |       const announceBtn = document.getElementById('announce-btn')
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/audit.ts:296:41]
 295 |     const existingLogs: AuditLogEntry[] = existingLogsJson
 296 |       ? JSON.parse(existingLogsJson) as any
     :                                         ^^^
 297 |       : []
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/audit.ts:453:47]
 452 |     const logsJson = localStorage.getItem('hipaa-audit-logs')
 453 |     return logsJson ? JSON.parse(logsJson) as any : []
     :                                               ^^^
 454 |   } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/settings/ai-preferences.astro:363:50]
 362 | <script>
 363 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 364 |     const form = document.getElementById('ai-preferences-form') as HTMLFormElement | null
     `----

  x Unexpected token
     ,-[src/pages/browser-compatibility/visual-regression.astro:536:71]
 535 |   // Refresh button
 536 |   document.getElementById('refresh-data')?.addEventListener('click', (: Event) => {
     :                                                                       ^
 537 |     window.location.reload()
     `----

  x Unexpected token
     ,-[src/pages/browser-compatibility/dashboard.astro:622:71]
 621 |   // Refresh button logic
 622 |   document.getElementById('refresh-data')?.addEventListener('click', (: Event) => {
     :                                                                       ^
 623 |     window.location.reload()
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security.ts:439:47]
 438 |     const dataString = atob(encodedData)
 439 |     const payload = JSON.parse(dataString) as any
     :                                               ^^^
 440 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/hooks/usePatternDetection.ts:90:54]
 89 | 
 90 |         const patterns = JSON.parse(analysisText) as any
    :                                                      ^^^
 91 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/hooks/useRiskAssessment.ts:47:54]
 46 | 
 47 |         const analysis = JSON.parse(analysisText) as any
    :                                                      ^^^
 48 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/layouts/DocumentationLayout.astro:374:53]
 373 |       // Generate table of contents from headings
 374 |       document.addEventListener('astro:page-load', (: Event) => {
     :                                                     ^
 375 |         const headings = document.querySelectorAll(
     `----

  x Unexpected token
     ,-[src/layouts/DashboardLayout.astro:146:38]
 145 |         .matchMedia('(prefers-color-scheme: dark)')
 146 |         .addEventListener('change', (: Event) => {
     :                                      ^
 147 |           const theme = getTheme()
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/hooks/useMemory.ts:357:62]
 356 |           const match = prefMemory.content.match(/= (.+)$/)
 357 |           return match && match[1] ? JSON.parse(match[1]) as any : null
     :                                                              ^^^
 358 |         } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/analytics/breach-analytics.ts:199:57]
 198 | 
 199 |   const notificationData = JSON.parse(notifications) as any
     :                                                         ^^^
 200 |   return notificationData.completedAt - breach.timestamp
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/middleware/monitoring.ts:51:71]
 50 |     if (sessionCookie) {
 51 |       const session = JSON.parse(decodeURIComponent(sessionCookie) as any)
    :                                                                       ^^^
 52 |       userId = session.userId
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Cannot assign to this expression
     ,-[src/hooks/auth-types.ts:166:3]
 165 |   const error = new Error(message) as AuthError
 166 |   (error as Error)?.name = 'AuthError'
     :   ^^^^^^^^^^^^^^^^^^^^^^
 167 |   if (code) error.code = code
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/hooks/useEmotionDetection.ts:62:54]
 61 | 
 62 |         const analysis = JSON.parse(analysisText) as any
    :                                                      ^^^
 63 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/workers/analytics-worker.ts:76:59]
 75 |           try {
 76 |             const message = JSON.parse(data.toString() as any)
    :                                                           ^^^
 77 |             if (message.type === 'authenticate' && message.userId) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/backup/verify.ts:111:52]
 110 |       // Parse backup data
 111 |       const backup = JSON.parse(data.toString() as any)
     :                                                    ^^^
 112 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/backup/verify.ts:245:58]
 244 |       const backupData = await fs.readFile(backupPath)
 245 |       const backup = JSON.parse(backupData.toString() as any)
     :                                                          ^^^
 246 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/backup/verify.ts:338:34]
 337 |       const data = await fs.readFile(metadataPath, 'utf-8')
 338 |       return JSON.parse(data) as any
     :                                  ^^^
 339 |     } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/pages/api/memory/list.ts:19:56]
 18 | 
 19 |     const session = JSON.parse(sessionCookie.value) as any
    :                                                        ^^^
 20 |     const userId = session.userId
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/simulator/hooks/useAnonymizedMetrics.ts:43:60]
 42 |         // Use stored metrics if available
 43 |         const parsedMetrics = JSON.parse(storedMetrics) as any
    :                                                            ^^^
 44 |         setMetrics(parsedMetrics)
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/pages/api/browser-compatibility/data.ts:82:49]
 81 |       const fileContent = fs.readFileSync(reportPath, 'utf8')
 82 |       const report = JSON.parse(fileContent) as any
    :                                                 ^^^
 83 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/uptime-monitor.ts:157:44]
 156 |         const data = readFileSync(this.dataFile, 'utf8')
 157 |         this.records = JSON.parse(data) as any
     :                                            ^^^
 158 |       }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/monitoring/AIPerformanceDashboard.astro:648:41]
 647 |     tabButtons.forEach((button) => {
 648 |       button.addEventListener('click', (: Event) => {
     :                                         ^
 649 |         // Update active tab
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/redis.ts:81:33]
 80 |     try {
 81 |       return JSON.parse(raw) as any as T
    :                                 ^^^
 82 |     } catch {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/demo/bias-detection.astro:391:40]
 390 |           .getElementById('preset-bias-high')
 391 |           ?.addEventListener('click', (: Event) =>
     :                                        ^
 392 |             this.loadPresetScenario('high-bias'),
     `----

  x Unexpected token
     ,-[src/pages/demo/enhanced-bias-detection.astro:356:50]
 355 |   // Analytics tracking for demo interactions
 356 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 357 |     // Track demo page view
     `----

  x Unexpected token
     ,-[src/pages/demo/security-bias-detection-engine.astro:681:50]
 680 |   // Analytics tracking for demo interactions
 681 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 682 |     // Track page view
     `----

  x Unexpected token
     ,-[src/pages/demo/chat.astro:331:46]
 330 | 
 331 |       anxietyBtn?.addEventListener('click', (: Event) => {
     :                                              ^
 332 |         this.sendSampleMessage("I'm feeling really anxious about my presentation tomorrow. My heart won't stop racing and I can't sleep.")
     `----

  x Unexpected token
     ,-[src/pages/demo/psychology-pipeline-processor.astro:700:50]
 699 |   // Analytics tracking for demo interactions
 700 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 701 |     // Track page view
     `----

  x Unexpected token
     ,-[src/pages/demo/synthetic-training-generator.astro:688:50]
 687 |   // Analytics tracking for demo interactions
 688 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 689 |     // Track page view
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/hooks/useWebSocket.ts:81:71]
 80 |         try {
 81 |           const message: WebSocketMessage = JSON.parse(event.data) as any
    :                                                                       ^^^
 82 |           let wsError: Error
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/scripts/security-tests.ts:66:42]
 65 |   try {
 66 |     return JSON.parse(result?.stdout) as any
    :                                          ^^^
 67 |   } catch (error: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/monitoring/WebPerformanceDashboard.astro:700:50]
 699 |   // Initialize dashboard when DOM is loaded
 700 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 701 |     updateDashboard()
     `----

  x Unexpected token
     ,-[src/pages/demo/clinical-vault-trainer.astro:382:50]
 381 |   // Analytics tracking for demo interactions
 382 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 383 |     // Track page view
     `----

  x Unexpected token
     ,-[src/pages/auth-callback.astro:101:50]
 100 |   // Show toast notification when the page loads
 101 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 102 |     toast.info('Verifying authentication...', {
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/scripts/rollback.ts:125:64]
 124 | 
 125 |     const deployments = JSON.parse(result.stdout.toString() as any) as DeploymentInfo[]
     :                                                                ^^^
 126 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/security/verification.ts:23:48]
 22 |     const token = {
 23 |       ...JSON.parse(JSON.stringify(payload) as any),
    :                                                ^^^
 24 |       iat: timestamp,
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/security/verification.ts:46:47]
 45 |     // Use atob for browser compatibility instead of Buffer
 46 |     const decoded = JSON.parse(atob(token) as any)
    :                                               ^^^
 47 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/breach-notification.ts:322:43]
 321 |     const breach = await redis.get(getBreachKey(id))
 322 |     return breach ? JSON.parse(breach) as any : null
     :                                           ^^^
 323 |   } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/breach-notification.ts:335:47]
 334 |         const breach = await redis.get(key)
 335 |         return breach ? JSON.parse(breach) as any : null
     :                                               ^^^
 336 |       }),
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/pages/reset-password.astro:53:64]
 52 | 
 53 |   document.addEventListener('password-reset-request-success', (: Event) => {
    :                                                                ^
 54 |     toast.success('Password reset email sent! Please check your inbox.', {
    `----

  x Unexpected token
     ,-[src/pages/register.astro:131:50]
 130 |   // Add smooth rendering for card animation
 131 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 132 |     const cardElement = document.querySelector('.card-gradient')
     `----

  x Identifier `FC` has already been declared
   ,-[src/components/demos/bias-detection/BiasDetectionDemo.tsx:4:10]
 3 | import React, { useState, useCallback } from 'react'
 4 | import { FC, BiasAnalysisDisplay } from './BiasAnalysisDisplay'
   :          ^|
   :           `-- `FC` has already been declared here
 5 | import { FC, PresetScenarioSelector } from './PresetScenarioSelector'
   :          ^|
   :           `-- It can not be redeclared here
 6 | import { FC, CounterfactualAnalysis } from './CounterfactualAnalysis'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demos/bias-detection/BiasDetectionDemo.tsx:4:10]
 3 | import React, { useState, useCallback } from 'react'
 4 | import { FC, BiasAnalysisDisplay } from './BiasAnalysisDisplay'
   :          ^|
   :           `-- `FC` has already been declared here
 5 | import { FC, PresetScenarioSelector } from './PresetScenarioSelector'
 6 | import { FC, CounterfactualAnalysis } from './CounterfactualAnalysis'
   :          ^|
   :           `-- It can not be redeclared here
 7 | import { FC, HistoricalProgressTracker } from './HistoricalProgressTracker'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demos/bias-detection/BiasDetectionDemo.tsx:4:10]
 3 | import React, { useState, useCallback } from 'react'
 4 | import { FC, BiasAnalysisDisplay } from './BiasAnalysisDisplay'
   :          ^|
   :           `-- `FC` has already been declared here
 5 | import { FC, PresetScenarioSelector } from './PresetScenarioSelector'
 6 | import { FC, CounterfactualAnalysis } from './CounterfactualAnalysis'
 7 | import { FC, HistoricalProgressTracker } from './HistoricalProgressTracker'
   :          ^|
   :           `-- It can not be redeclared here
 8 | import { FC, SessionInputForm } from './SessionInputForm'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demos/bias-detection/BiasDetectionDemo.tsx:4:10]
 3 | import React, { useState, useCallback } from 'react'
 4 | import { FC, BiasAnalysisDisplay } from './BiasAnalysisDisplay'
   :          ^|
   :           `-- `FC` has already been declared here
 5 | import { FC, PresetScenarioSelector } from './PresetScenarioSelector'
 6 | import { FC, CounterfactualAnalysis } from './CounterfactualAnalysis'
 7 | import { FC, HistoricalProgressTracker } from './HistoricalProgressTracker'
 8 | import { FC, SessionInputForm } from './SessionInputForm'
   :          ^|
   :           `-- It can not be redeclared here
 9 | import { FC, ExportControls } from './ExportControls'
   `----

  x Identifier `FC` has already been declared
    ,-[src/components/demos/bias-detection/BiasDetectionDemo.tsx:4:10]
  3 | import React, { useState, useCallback } from 'react'
  4 | import { FC, BiasAnalysisDisplay } from './BiasAnalysisDisplay'
    :          ^|
    :           `-- `FC` has already been declared here
  5 | import { FC, PresetScenarioSelector } from './PresetScenarioSelector'
  6 | import { FC, CounterfactualAnalysis } from './CounterfactualAnalysis'
  7 | import { FC, HistoricalProgressTracker } from './HistoricalProgressTracker'
  8 | import { FC, SessionInputForm } from './SessionInputForm'
  9 | import { FC, ExportControls } from './ExportControls'
    :          ^|
    :           `-- It can not be redeclared here
 10 | import {
    `----

  x Unexpected token
     ,-[src/pages/blog/[...slug].astro:531:50]
 530 |   // Track blog post interactions
 531 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 532 |     // Handle navigation buttons
     `----

  x Unexpected token
     ,-[src/components/admin/RetentionReports.astro:525:50]
 524 | <script>
 525 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 526 |     // Generate report button handler
     `----

  x Unexpected token
     ,-[src/components/admin/SecuritySettingsPanel.astro:133:50]
 132 |   // Client-side functionality for the security settings panel
 133 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 134 |     const form = document.getElementById('security-settings-form')
     `----

  x Expected `,` but found `:`
     ,-[src/components/admin/PatientRightsSystem.astro:798:56]
 797 |           const eventType = key === 'search' ? 'input' : 'change'
 798 |           element.addEventListener(eventType, (e: Event: Event) => {
     :                                                        |
     :                                                        `-- `,` expected
 799 |             const target = e.target as HTMLInputElement | HTMLSelectElement;
     `----

  x Unexpected token
     ,-[src/pages/client/[clientId]/temporal-analysis.astro:424:50]
 423 |   // In a production environment, this would connect to your actual API
 424 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 425 |     // For demo purposes we'll populate with mock data
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/dlp-integration.ts:107:60]
 106 |                 ? dlpResult.redactedContent
 107 |                 : JSON.parse(dlpResult.redactedContent) as any
     :                                                            ^^^
 108 |           } catch (e) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/dlp-integration.ts:140:65]
 139 |               try {
 140 |                 body = JSON.parse(dlpResult.redactedContent) as any
     :                                                                 ^^^
 141 |               } catch (e) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/pages/api/bias-detection/export.test.new.ts:458:63]
 457 |           status: init?.status || 500,
 458 |           json: vi.fn().mockResolvedValue(JSON.parse(body) as any),
     :                                                               ^^^
 459 |           headers: { get: vi.fn(() => 'application/json') },
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/admin/dlp/DLPRulesList.astro:152:45]
 151 |   // Set up event listeners when the component mounts
 152 |   document.addEventListener('astro:mount', (: Event) => {
     :                                             ^
 153 |     // Set up edit handlers
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/WebSocketServer.ts:233:52]
 232 |     try {
 233 |       const message: unknown = JSON.parse(data) as any
     :                                                    ^^^
 234 |       const validatedMessage = ClientMessageSchema.parse(message)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/components/toc/TocButton.astro:35:49]
 34 | 
 35 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 36 |     /* Open toc panel when user click on button */
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
    :          ^|
    :           `-- It can not be redeclared here
 28 | import { FC, Button } from '@/components/ui/button';
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
 28 | import { FC, Button } from '@/components/ui/button';
    :          ^|
    :           `-- It can not be redeclared here
 29 | import { FC, Badge } from '@/components/ui/badge';
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
 28 | import { FC, Button } from '@/components/ui/button';
 29 | import { FC, Badge } from '@/components/ui/badge';
    :          ^|
    :           `-- It can not be redeclared here
 30 | import { FC, Progress } from '@/components/ui/progress';
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
 28 | import { FC, Button } from '@/components/ui/button';
 29 | import { FC, Badge } from '@/components/ui/badge';
 30 | import { FC, Progress } from '@/components/ui/progress';
    :          ^|
    :           `-- It can not be redeclared here
 31 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
 28 | import { FC, Button } from '@/components/ui/button';
 29 | import { FC, Badge } from '@/components/ui/badge';
 30 | import { FC, Progress } from '@/components/ui/progress';
 31 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
    :          ^|
    :           `-- It can not be redeclared here
 32 | import { FC, Alert } from '@/components/ui/alert';
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
 24 | // Lazy load the charts component to reduce initial bundle size
 25 | // const _BiasCharts = lazy(() => import('./BiasCharts').then(module => ({ default: module.BiasCharts })));
 26 | // Note: Removing lazy import as it's currently commented out
 27 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
 28 | import { FC, Button } from '@/components/ui/button';
 29 | import { FC, Badge } from '@/components/ui/badge';
 30 | import { FC, Progress } from '@/components/ui/progress';
 31 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
 32 | import { FC, Alert } from '@/components/ui/alert';
    :          ^|
    :           `-- It can not be redeclared here
 33 | // Use lazy-loaded chart components to reduce bundle size
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:22:10]
 21 | import type React from 'react';
 22 | import { FC, useState, useEffect, useCallback, useRef } from 'react';
    :          ^|
    :           `-- `FC` has already been declared here
 23 | 
    `----
    ,-[src/components/admin/bias-detection/BiasDashboard.tsx:77:10]
 76 | } from 'lucide-react';
 77 | import { FC, createBuildSafeLogger } from '@/lib/logging/build-safe-logger';
    :          ^|
    :           `-- It can not be redeclared here
 78 | import type { BiasDashboardData, BiasAnalysisResult, DashboardRecommendation } from '@/lib/ai/bias-detection';
    `----

  x Unexpected token
    ,-[src/components/ui/Alert.astro:96:50]
 95 |   // Client-side dismiss functionality for all alerts
 96 |   document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                  ^
 97 |     document.querySelectorAll('.alert-dismiss').forEach(button => {
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/NotificationService.ts:346:77]
 345 | 
 346 |       const notification = NotificationItemSchema.parse(JSON.parse(item) as any)
     :                                                                             ^^^
 347 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/NotificationService.ts:426:77]
 425 | 
 426 |     const parsed = NotificationItemSchema.parse(JSON.parse(notification) as any)
     :                                                                             ^^^
 427 |     parsed.status = NotificationStatus.READ
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/NotificationService.ts:451:75]
 450 |     return Object.values(notifications)
 451 |       .map((n) => NotificationItemSchema.parse(JSON.parse(n as string) as any))
     :                                                                           ^^^
 452 |       .sort((a, b) => b.createdAt - a.createdAt)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/NotificationService.ts:466:75]
 465 |     return Object.values(notifications)
 466 |       .map((n) => NotificationItemSchema.parse(JSON.parse(n as string) as any))
     :                                                                           ^^^
 467 |       .filter((n) => n.status !== NotificationStatus.READ).length
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/notification/NotificationService.ts:534:40]
 533 |     }
 534 |     return JSON.parse(subscription) as any
     :                                        ^^^
 535 |   }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/utils/json-extraction.ts:102:38]
 101 |   try {
 102 |     return JSON.parse(jsonString) as any as T
     :                                      ^^^
 103 |   } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/contact.astro:290:44]
 289 |   // Character counter for message
 290 |   messageInput?.addEventListener('input', (: Event) => {
     :                                            ^
 291 |     const length = messageInput.value.length
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/analytics/AnalyticsService.ts:139:50]
 138 | 
 139 |           const event = JSON.parse(eventJson) as any as Event
     :                                                  ^^^
 140 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/analytics/AnalyticsService.ts:196:40]
 195 |             }
 196 |             return JSON.parse(json) as any as Event
     :                                        ^^^
 197 |           } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/analytics/AnalyticsService.ts:234:40]
 233 |             }
 234 |             return JSON.parse(json) as any as Metric
     :                                        ^^^
 235 |           } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/components/ui/ToTopButton.astro:31:49]
 30 | <script>
 31 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 32 |     const toTopButton = document.getElementById('to-top-button')
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/analytics/analytics-types.ts:116:40]
 115 |   try {
 116 |     const parsed = JSON.parse(json) as any
     :                                        ^^^
 117 |     return isEvent(parsed)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/analytics/analytics-types.ts:125:40]
 124 |   try {
 125 |     const parsed = JSON.parse(json) as any
     :                                        ^^^
 126 |     return isMetric(parsed)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/admin/all-demos-analytics.astro:574:50]
 573 |   // Initialize dashboard when DOM is ready
 574 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 575 |     const dashboard = new AllDemosAnalyticsDashboard();
     `----

  x Unexpected token
    ,-[src/pages/admin/dlp.astro:64:50]
 63 |   // Simulate loading the DLP configuration
 64 |   document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                  ^
 65 |     setTimeout(() => {
    `----

  x Unexpected token
     ,-[src/pages/admin/patient-rights.astro:253:50]
 252 | <script>
 253 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 254 |     // Tab functionality
     `----

  x Unexpected token
     ,-[src/pages/admin/demo-analytics.astro:570:50]
 569 |   // Initialize dashboard when DOM is ready
 570 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 571 |     const dashboard = new DemoAnalyticsDashboard()
     `----

  x Unexpected token
    ,-[src/pages/admin/bias-detection.astro:61:52]
 60 |     // Mount the React component when the page loads
 61 |     document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                    ^
 62 |       const container = document.getElementById('bias-dashboard')
    `----

  x Unexpected token
     ,-[src/pages/admin/ai/model-performance.astro:187:50]
 186 |   // Initialize the page
 187 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 188 |     // Set up tab switching
     `----

  x Unexpected token
     ,-[src/pages/admin/ai/high-risk-crises.astro:238:41]
 237 |     document.querySelectorAll('.view-details').forEach((button) => {
 238 |       button.addEventListener('click', (: Event) => {
     :                                         ^
 239 |         const index = parseInt(button.getAttribute('data-index') || '0')
     `----

  x Unexpected token
     ,-[src/pages/admin/ai/validation-pipeline.astro:453:50]
 452 |   // Client-side functionality for the validation pipeline
 453 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 454 |     const runValidationBtn = document.getElementById('run-validation') as HTMLButtonElement | null
     `----

  x Unexpected token
     ,-[src/components/ui/Navigation.astro:143:49]
 142 |   // Mobile menu toggle
 143 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 144 |     const mobileMenuToggle = document.getElementById('mobile-menu-toggle')
     `----

  x Unexpected token
     ,-[src/components/admin/DataDeletionLog.astro:460:50]
 459 | 
 460 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 461 |     // Modal elements
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/stores/fhe-store.ts:230:64]
 229 |           encryptedMessage.startsWith('{')
 230 |             ? (isEncryptedData(JSON.parse(encryptedMessage) as any) ? JSON.parse(encryptedMessage) as any : { id: '', data: null, dataType: 'object' })
     :                                                                ^^^
 231 |             : (isEncryptedData(encryptedMessage) ? encryptedMessage : { id: '', data: null, dataType: 'object' })
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/stores/fhe-store.ts:230:103]
 229 |           encryptedMessage.startsWith('{')
 230 |             ? (isEncryptedData(JSON.parse(encryptedMessage) as any) ? JSON.parse(encryptedMessage) as any : { id: '', data: null, dataType: 'object' })
     :                                                                                                       ^^^
 231 |             : (isEncryptedData(encryptedMessage) ? encryptedMessage : { id: '', data: null, dataType: 'object' })
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/stores/fhe-store.ts:300:66]
 299 |             encryptedMessage.startsWith('{')
 300 |               ? (isEncryptedData(JSON.parse(encryptedMessage) as any) ? JSON.parse(encryptedMessage) as any : { id: '', data: null, dataType: 'object' })
     :                                                                  ^^^
 301 |               : (isEncryptedData(encryptedMessage) ? encryptedMessage : { id: '', data: null, dataType: 'object' })
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/stores/fhe-store.ts:300:105]
 299 |             encryptedMessage.startsWith('{')
 300 |               ? (isEncryptedData(JSON.parse(encryptedMessage) as any) ? JSON.parse(encryptedMessage) as any : { id: '', data: null, dataType: 'object' })
     :                                                                                                         ^^^
 301 |               : (isEncryptedData(encryptedMessage) ? encryptedMessage : { id: '', data: null, dataType: 'object' })
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/admin/DataRetentionSystem.astro:398:50]
 397 |   // Initialize the data retention form
 398 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 399 |     // Destruction method change handler
     `----

  ! eslint(no-unused-vars): Type 'APIRoute' is imported but never used.
   ,-[src/pages/api/websocket/bias-alerts.ts:1:15]
 1 | import type { APIRoute } from "astro";
   :               ^^^^|^^^
   :                   `-- 'APIRoute' is imported here
 2 | /**
   `----
  help: Consider removing this import.

  x Unexpected token
     ,-[src/pages/admin/data-transfer.astro:353:50]
 352 | <script>
 353 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 354 |     // Tab functionality
     `----

  x Unexpected token
     ,-[src/components/admin/DataDeletionRequestForm.astro:328:50]
 327 |   // Toggle data categories visibility based on deletion scope selection
 328 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 329 |     const scopeAllRadio = document.getElementById('scope-all') as HTMLInputElement | null
     `----

  x Unexpected token
     ,-[src/components/admin/DataPortabilitySystem.astro:315:50]
 314 |   // Initialize the data portability form
 315 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 316 |     const form = document.getElementById('data-portability-form')
     `----

  x Unexpected token
     ,-[src/pages/admin/data-retention.astro:256:50]
 255 | <script>
 256 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 257 |     // Tab functionality
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:117:56]
 116 | 
 117 |     const job: Job = JSON.parse(jobString[0].value) as any
     :                                                        ^^^
 118 |     job.status = JobStatus.IN_PROGRESS
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:145:44]
 144 |       job = {
 145 |         ...JSON.parse(currentJobString) as any,
     :                                            ^^^
 146 |         ...updates,
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:202:49]
 201 |     const jobString = await redis.hget(this.jobStatusKeyPrefix + jobId, jobId)
 202 |     return jobString ? JSON.parse(jobString) as any : null
     :                                                 ^^^
 203 |   }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:246:67]
 245 |     }
 246 |     return jobStrings.map((jobString) => JSON.parse(jobString) as any)
     :                                                                   ^^^
 247 |   }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:258:45]
 257 |         jobIds = pendingJobs.map((jobStr) => {
 258 |           const job = JSON.parse(jobStr) as any as Job
     :                                             ^^^
 259 |           return job.id
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/jobs/queue.ts:331:41]
 330 |     const cancelledCount = allFailedJobs.filter((jobStr) => {
 331 |       const job = JSON.parse(jobStr) as any as Job
     :                                         ^^^
 332 |       return job.status === JobStatus.CANCELLED
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/mental-arena/MentalArenaPythonBridge.ts:279:51]
 278 |         const resultData = await fs.readFile(outputFile, 'utf-8')
 279 |         result.output = JSON.parse(resultData) as any
     :                                                   ^^^
 280 |       }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/admin/BackupSecurityManager.astro:340:50]
 339 |   // Client-side initialization and event handlers
 340 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 341 |     // Initialize alert system for backup notifications
     `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupConfigurationTab.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupConfigurationTab.tsx:10:10]
  9 | } from '@/components/ui/card'
 10 | import { FC, Input } from '@/components/ui/input'
    :          ^|
    :           `-- It can not be redeclared here
 11 | import {
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupConfigurationTab.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupConfigurationTab.tsx:18:10]
 17 | } from '@/components/ui/select'
 18 | import { FC, Label } from '@/components/ui/label'
    :          ^|
    :           `-- It can not be redeclared here
 19 | import type { BackupType } from '../../../lib/security/backup/types'
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupConfigurationTab.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupConfigurationTab.tsx:20:10]
 19 | import type { BackupType } from '../../../lib/security/backup/types'
 20 | import { FC, StorageLocation } from '../../../lib/security/backup/backup-types'
    :          ^|
    :           `-- It can not be redeclared here
 21 | import { FC, Switch } from '@/components/ui/switch'
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupConfigurationTab.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupConfigurationTab.tsx:21:10]
 20 | import { FC, StorageLocation } from '../../../lib/security/backup/backup-types'
 21 | import { FC, Switch } from '@/components/ui/switch'
    :          ^|
    :           `-- It can not be redeclared here
 22 | 
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/analytics.ts:307:45]
 306 |       const existingEvents: AnalyticsEvent[] = existingEventsJson
 307 |         ? JSON.parse(existingEventsJson) as any
     :                                             ^^^
 308 |         : []
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/analytics.ts:639:53]
 638 |       const eventsJson = localStorage.getItem('analytics_events')
 639 |       return eventsJson ? JSON.parse(eventsJson) as any : []
     :                                                     ^^^
 640 |     } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/admin/compatibility-dashboard.astro:190:49]
 189 |   // Initialize charts once the page has loaded
 190 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 191 |     setupCharts()
     `----

  x Unexpected token
     ,-[src/pages/admin/backups/index.astro:263:50]
 262 | <script>
 263 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 264 |     const tabs = document.querySelectorAll('ul.flex a')
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/vendors.astro:488:50]
 487 |   // Initialize interactive elements
 488 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 489 |     // Handle add vendor button
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/templates.astro:214:50]
 213 |   // Client-side JavaScript for template management
 214 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 215 |     // Handle create template button
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/vendors/[id]/verify.astro:271:50]
 270 |   // Document form submission (demo only)
 271 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 272 |     const documentForm = document.getElementById('document-form')
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/vendors/[id]/verify.astro:485:50]
 484 |   // Document selection modal - this would be implemented with a proper modal in production
 485 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 486 |     const selectDocumentsBtn = document.getElementById('select-documents-btn')
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/vendors/requirements.astro:559:50]
 558 | <script>
 559 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 560 |     const modal = document.getElementById('add-requirement-modal')
     `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/templates/new.astro:265:50]
 264 |   // Client-side JavaScript for template form management
 265 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 266 |     const sectionsContainer = document.getElementById('sections-container')
     `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupReportTab.tsx:2:10]
 1 | import React, { useState } from 'react';
 2 | import { FC, Button } from '@/components/ui/button';
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupReportTab.tsx:11:10]
 10 | } from '@/components/ui/card';
 11 | import { FC, Badge } from '@/components/ui/badge';
    :          ^|
    :           `-- It can not be redeclared here
 12 | import {
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupStatusTab.tsx:2:10]
 1 | import React from 'react'
 2 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupStatusTab.tsx:11:10]
 10 | } from '@/components/ui/card'
 11 | import { FC, Badge } from '@/components/ui/badge'
    :          ^|
    :           `-- It can not be redeclared here
 12 | import {
    `----

  x Unexpected token
     ,-[src/pages/admin/security/baa/management.astro:529:50]
 528 | <script>
 529 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 530 |     // Auto-submit form when status changes
     `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupRecoveryTab.tsx:2:10]
 1 | import React, { useState } from 'react';
 2 | import { FC, Button } from '@/components/ui/button';
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupRecoveryTab.tsx:10:10]
  9 | } from '@/components/ui/card';
 10 | import { FC, Badge } from '@/components/ui/badge';
    :          ^|
    :           `-- It can not be redeclared here
 11 | import {
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupRecoveryTab.tsx:2:10]
 1 | import React, { useState } from 'react';
 2 | import { FC, Button } from '@/components/ui/button';
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupRecoveryTab.tsx:18:10]
 17 | } from '@/components/ui/select';
 18 | import { FC, RecoveryTestStatus } from '../../../lib/security/backup/backup-types';
    :          ^|
    :           `-- It can not be redeclared here
 19 | import type { BackupType, BackupStatus } from '../../../lib/security/backup';
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/admin/backup/BackupRecoveryTab.tsx:2:10]
 1 | import React, { useState } from 'react';
 2 | import { FC, Button } from '@/components/ui/button';
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import {
   `----
    ,-[src/components/admin/backup/BackupRecoveryTab.tsx:20:10]
 19 | import type { BackupType, BackupStatus } from '../../../lib/security/backup';
 20 | import { FC, toast } from '@/components/ui/toast';
    :          ^|
    :           `-- It can not be redeclared here
 21 | 
    `----

  x Unexpected token
     ,-[src/components/admin/TransferAuditLog.astro:297:50]
 296 |   // Initialize filters and search functionality
 297 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 298 |     const searchInput = document.getElementById('search')
     `----

  x Unexpected token
     ,-[src/components/admin/SimpleAdminLayout.astro:105:50]
 104 |   // Simple sidebar toggle functionality
 105 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 106 |     const sidebarToggle = document.getElementById('sidebar-toggle')
     `----

  x Unexpected token
     ,-[src/components/admin/AdminLayout.astro:248:54]
 247 |       // Simple sidebar toggle functionality
 248 |       document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                      ^
 249 |         const sidebarToggle = document.getElementById('sidebar-toggle')
     `----

  x Unexpected token
     ,-[src/components/admin/RetentionAuditLogs.astro:349:50]
 348 | <script>
 349 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 350 |     // Filter functionality
     `----

  x Unexpected token
     ,-[src/components/admin/DLPRulesManager.astro:123:50]
 122 |   // Set up event listeners for relevant actions
 123 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 124 |     // Listen for custom events from the DLP components
     `----

  x Unexpected token
     ,-[src/components/media/CMSImage.astro:169:50]
 168 |   // Handle blur-up loading effect
 169 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 170 |     const images = document.querySelectorAll('.blur-up')
     `----

  x Unexpected token
    ,-[src/components/media/OptimizedImage.astro:91:49]
 90 |   // Add loaded class when image is loaded
 91 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 92 |     const images = document.querySelectorAll('.optimized-image')
    `----

  x Unexpected token
     ,-[src/components/media/ResponsiveImage.astro:170:50]
 169 |   // Handle blur-up loading effect
 170 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 171 |     const images = document.querySelectorAll('.blur-up')
     `----

  x Unexpected token
     ,-[src/pages/admin/security/risk-assessment/index.astro:502:50]
 501 | <script>
 502 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 503 |     // Handle "Start New Scan" button
     `----

  x Unexpected token
     ,-[src/pages/admin/security/disaster-recovery/index.astro:579:50]
 578 | <script>
 579 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 580 |     // Handle "Run Test" button
     `----

  x Unexpected token
     ,-[src/pages/admin/system-health.astro:310:50]
 309 |   // Initialize the dashboard
 310 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 311 |     // Initial health check
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/documentation/DocumentationSystem.ts:72:54]
 71 |         try {
 72 |           const sessionData = JSON.parse(message) as any
    :                                                      ^^^
 73 |           if (sessionData && sessionData.sessionId) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/documentation/DocumentationSystem.ts:84:54]
 83 |         try {
 84 |           const sessionData = JSON.parse(message) as any
    :                                                      ^^^
 85 |           if (sessionData && sessionData.sessionId) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/documentation/DocumentationSystem.ts:98:56]
 97 |           try {
 98 |             const sessionData = JSON.parse(message) as any
    :                                                        ^^^
 99 |             if (sessionData && sessionData.sessionId) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/pages/admin/security-settings.astro:121:50]
 120 |   // Client-side functionality
 121 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 122 |     // Sync Security Settings button
     `----

  x Unexpected token
    ,-[src/pages/reset-password-confirm.astro:85:56]
 84 | 
 85 |   document.addEventListener('password-reset-success', (: Event) => {
    :                                                        ^
 86 |     toast.success('Password successfully reset!', {
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/server-only/MentalLLaMAPythonBridge.ts:83:37]
 82 |               const response: PythonBridgeResponse & { id?: string } =
 83 |                 JSON.parse(line) as any
    :                                     ^^^
 84 |               if (
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Identifier `FC` has already been declared
   ,-[src/components/demo/ClientFacingDemo.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- It can not be redeclared here
 4 | import { FC, Progress } from '@/components/ui/progress'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demo/ClientFacingDemo.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
 4 | import { FC, Progress } from '@/components/ui/progress'
   :          ^|
   :           `-- It can not be redeclared here
 5 | import { FC, Badge } from '@/components/ui/badge'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demo/ClientFacingDemo.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
 4 | import { FC, Progress } from '@/components/ui/progress'
 5 | import { FC, Badge } from '@/components/ui/badge'
   :          ^|
   :           `-- It can not be redeclared here
 6 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/demo/ClientFacingDemo.tsx:2:10]
 1 | import React, { useState } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
   `----
   ,-[src/components/demo/ClientFacingDemo.tsx:6:10]
 5 | import { FC, Badge } from '@/components/ui/badge'
 6 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
   :          ^|
   :           `-- It can not be redeclared here
 7 | import {
   `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/services/crisis-detection.ts:287:47]
 286 |       try {
 287 |         const parsed = JSON.parse(content) as any
     :                                               ^^^
 288 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Identifier `FC` has already been declared
   ,-[src/components/ui/ServiceWorkerUpdater.tsx:2:10]
 1 | import React, { useEffect, useState } from 'react'
 2 | import { FC, toast } from 'react-hot-toast'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, serviceWorkerManager } from '../../utils/serviceWorkerRegistration'
   :          ^|
   :           `-- It can not be redeclared here
 4 | 
   `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/services/intervention-analysis.ts:126:44]
 125 |       try {
 126 |         parsed = JSON.parse(rawContent) as any as Record<string, unknown>
     :                                            ^^^
 127 |       } catch (err: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/services/together.ts:528:82]
 527 |                   const jsonData = trimmedLine.slice(6) // Remove 'data: ' prefix
 528 |                   const parsed: TogetherStreamResponse = JSON.parse(jsonData) as any
     :                                                                                  ^^^
 529 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Identifier `FC` has already been declared
   ,-[src/components/ui/EnhancedMentalHealthChat.tsx:2:10]
 1 | import React, { useState, useRef, useEffect, useCallback } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
   :          ^|
   :           `-- It can not be redeclared here
 4 | import { FC, Badge } from '@/components/ui/badge'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/EnhancedMentalHealthChat.tsx:2:10]
 1 | import React, { useState, useRef, useEffect, useCallback } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
 4 | import { FC, Badge } from '@/components/ui/badge'
   :          ^|
   :           `-- It can not be redeclared here
 5 | import { FC, Textarea } from '@/components/ui/textarea'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/EnhancedMentalHealthChat.tsx:2:10]
 1 | import React, { useState, useRef, useEffect, useCallback } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Button } from '@/components/ui/button'
 4 | import { FC, Badge } from '@/components/ui/badge'
 5 | import { FC, Textarea } from '@/components/ui/textarea'
   :          ^|
   :           `-- It can not be redeclared here
 6 | import {
   `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/backup/index.ts:962:51]
 961 |       // Parse the data
 962 |       const restoredData = JSON.parse(dataStr) as any
     :                                                   ^^^
 963 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/services/email/EmailService.ts:111:72]
 110 | 
 111 |       const queueItem = EmailQueueItemSchema.parse(JSON.parse(item) as any)
     :                                                                        ^^^
 112 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/EnhancedTodo.astro:438:49]
 437 | <script define:vars={{ initialTodos, storageKey }} is:inline>
 438 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 439 |     // DOM elements
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/security/pii/index.ts:537:55]
 536 |     // Create a copy of the data to avoid modifying the original
 537 |     const result = JSON.parse(JSON.stringify(data) as any) as T
     :                                                       ^^^
 538 |     let detectedPII = false
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/providers/StatePersistenceProvider.tsx:361:65]
 360 |       try {
 361 |         const state = JSON.parse(e.target?.result as string) as any
     :                                                                 ^^^
 362 |         await importState(state)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/providers/SecurityProvider.tsx:211:34]
 210 |     if (securityState.level === 'standard') {
 211 |       return JSON.parse(data) as any
     :                                  ^^^
 212 |     }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/providers/SecurityProvider.tsx:223:40]
 222 |         try {
 223 |           return JSON.parse(result) as any
     :                                        ^^^
 224 |         } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/providers/SecurityProvider.tsx:233:44]
 232 |       try {
 233 |         const parsed = JSON.parse(data) as any
     :                                            ^^^
 234 |         if (parsed.data) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/providers/SecurityProvider.tsx:235:45]
 234 |         if (parsed.data) {
 235 |           return JSON.parse(parsed.data) as any
     :                                             ^^^
 236 |         }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Identifier `FC` has already been declared
   ,-[src/components/ui/MindMirrorDashboard.tsx:2:10]
 1 | import React, { useState, useMemo } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Badge } from '@/components/ui/badge'
   :          ^|
   :           `-- It can not be redeclared here
 4 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/MindMirrorDashboard.tsx:2:10]
 1 | import React, { useState, useMemo } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Badge } from '@/components/ui/badge'
 4 | import { FC, Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'
   :          ^|
   :           `-- It can not be redeclared here
 5 | import {
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/MindMirrorDashboard.tsx:2:10]
 1 | import React, { useState, useMemo } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Badge } from '@/components/ui/badge'
   `----
    ,-[src/components/ui/MindMirrorDashboard.tsx:12:10]
 11 | } from 'lucide-react'
 12 | import { FC, Activity, Eye, Sparkles, TrendingUp } from 'lucide-react'
    :          ^|
    :           `-- It can not be redeclared here
 13 | 
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/mental-llama/createProductionLLMInvoker.ts:424:66]
 423 |         try {
 424 |           parsedResponse = JSON.parse(choice.message.content) as any
     :                                                                  ^^^
 425 |         } catch (parseError) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/logging/performance-logger.ts:115:48]
 114 |             .filter((line) => line.trim())
 115 |             .map((line) => JSON.parse(line) as any)
     :                                                ^^^
 116 |           metrics.push(...fileMetrics)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/demo/KnowledgeParsingDemo.tsx:215:56]
 214 |       try {
 215 |         setAnalysisHistory(JSON.parse(savedHistory) as any)
     :                                                        ^^^
 216 |       } catch (e) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/mock/mock-fhe-service.ts:202:52]
 201 |       // Use the mockData which has been cast to MockEncryptedData<T>
 202 |       return JSON.parse(mockData.originalValue) as any as T
     :                                                    ^^^
 203 |     } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/mock/mock-fhe-service.ts:223:43]
 222 |     try {
 223 |       data = JSON.parse(encryptedData) as any as MockEncryptedData
     :                                           ^^^
 224 |     } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/mock/mock-fhe-service.ts:254:62]
 253 |     try {
 254 |       const originalText = JSON.parse(data.originalValue) as any
     :                                                              ^^^
 255 |       if (typeof originalText === 'string') {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/mock/mock-fhe-service.ts:334:62]
 333 |     try {
 334 |       const originalText = JSON.parse(data.originalValue) as any
     :                                                              ^^^
 335 |       if (typeof originalText === 'string') {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/mental-llama/adapter/MentalLLaMAAdapter.ts:405:73]
 404 |       try {
 405 |         const parsedLlmResponse = JSON.parse(llmResponseRaw.content) as any
     :                                                                         ^^^
 406 |         llmAnalysisResult.mentalHealthCategory =
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/mental-llama/adapter/MentalLLaMAAdapter.ts:591:54]
 590 |       })
 591 |       const parsed = JSON.parse(response.content) as any
     :                                                      ^^^
 592 |       return {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/ehr/services/redis.storage.ts:40:41]
 39 |     const value = await this.client.get(key)
 40 |     return value ? JSON.parse(value) as any : null
    :                                         ^^^
 41 |   }
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/components/widgets/ToTopButton.astro:18:49]
 17 | <script>
 18 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 19 |     const handleClick = () => {
    `----

  x Unexpected token
     ,-[src/components/Todo.astro:149:49]
 148 |   // Wait for client-side hydration
 149 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 150 |     const todoInput = document.getElementById('todo-input') as HTMLInputElement
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/ai/mental-llama/bridge/MentalLLaMAPythonBridge.ts:84:37]
 83 |               const response: PythonBridgeResponse & { id?: string } =
 84 |                 JSON.parse(line) as any
    :                                     ^^^
 85 |               if (
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/widgets/ShareLink.astro:120:49]
 119 | <script>
 120 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 121 |     interface _ShareLink {
     `----

  x Unexpected token
    ,-[src/components/widgets/ThemeSwitch.astro:51:49]
 50 | <script>
 51 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 52 |     let isDark: boolean
    `----

  x Unexpected token
     ,-[src/components/widgets/SpinningGlobe.astro:140:52]
 139 |     // Handle visibility change
 140 |     document.addEventListener('visibilitychange', (: Event) => {
     :                                                    ^
 141 |       running = !document.hidden
     `----

  x Unexpected token
    ,-[src/components/widgets/NavSwitch.astro:34:49]
 33 | 
 34 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 35 |     /* Open nav panel when user click on button */
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/homomorphic-ops.ts:223:53]
 222 |         try {
 223 |           parsedData = JSON.parse(encryptedData) as any
     :                                                     ^^^
 224 |         } catch {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/homomorphic-ops.ts:433:47]
 432 |         const decoded = atob(encryptedData)
 433 |         const parsed = JSON.parse(decoded) as any
     :                                               ^^^
 434 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/components/widgets/SearchSwitch.astro:58:49]
 57 |   /* Handle click on search switch to open or close */
 58 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 59 |     const handleToggle = () => {
    `----

  x Unexpected token
     ,-[src/components/widgets/SearchSwitch.astro:177:50]
 176 |   // and will be available as window.searchIndex
 177 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 178 |     if (window.searchClient && window.searchIndex) {
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/ai/mental-llama/ClinicalAnalysisHelpers.ts:70:37]
 69 |     try {
 70 |       return JSON.parse(content) as any
    :                                     ^^^
 71 |     } catch (error: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Identifier `FC` has already been declared
    ,-[src/components/therapy/TreatmentPlanManager.tsx:11:10]
 10 | } from '@/types/treatment'
 11 | import { FC, Button } from '@/components/ui/button'
    :          ^|
    :           `-- `FC` has already been declared here
 12 | import {
 13 |   TableBody,
 14 |   TableCell,
 15 |   TableHead,
 16 |   TableHeader,
 17 |   TableRow,
 18 | } from '@/components/ui/table'
 19 | import { FC, DialogModal } from '@/components/ui/dialog'
    :          ^|
    :           `-- It can not be redeclared here
 20 | import { FC, Input } from '@/components/ui/input'
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/therapy/TreatmentPlanManager.tsx:11:10]
 10 | } from '@/types/treatment'
 11 | import { FC, Button } from '@/components/ui/button'
    :          ^|
    :           `-- `FC` has already been declared here
 12 | import {
 13 |   TableBody,
 14 |   TableCell,
 15 |   TableHead,
 16 |   TableHeader,
 17 |   TableRow,
 18 | } from '@/components/ui/table'
 19 | import { FC, DialogModal } from '@/components/ui/dialog'
 20 | import { FC, Input } from '@/components/ui/input'
    :          ^|
    :           `-- It can not be redeclared here
 21 | import { FC, Textarea } from '@/components/ui/textarea'
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/therapy/TreatmentPlanManager.tsx:11:10]
 10 | } from '@/types/treatment'
 11 | import { FC, Button } from '@/components/ui/button'
    :          ^|
    :           `-- `FC` has already been declared here
 12 | import {
 13 |   TableBody,
 14 |   TableCell,
 15 |   TableHead,
 16 |   TableHeader,
 17 |   TableRow,
 18 | } from '@/components/ui/table'
 19 | import { FC, DialogModal } from '@/components/ui/dialog'
 20 | import { FC, Input } from '@/components/ui/input'
 21 | import { FC, Textarea } from '@/components/ui/textarea'
    :          ^|
    :           `-- It can not be redeclared here
 22 | import {
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/therapy/TreatmentPlanManager.tsx:11:10]
 10 | } from '@/types/treatment'
 11 | import { FC, Button } from '@/components/ui/button'
    :          ^|
    :           `-- `FC` has already been declared here
 12 | import {
    `----
    ,-[src/components/therapy/TreatmentPlanManager.tsx:40:10]
 39 | } from '@/components/ui/alert-dialog'
 40 | import { FC, toast } from 'sonner'
    :          ^|
    :           `-- It can not be redeclared here
 41 | import { FC, PlusCircle, Trash2 } from 'lucide-react'
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/therapy/TreatmentPlanManager.tsx:11:10]
 10 | } from '@/types/treatment'
 11 | import { FC, Button } from '@/components/ui/button'
    :          ^|
    :           `-- `FC` has already been declared here
 12 | import {
    `----
    ,-[src/components/therapy/TreatmentPlanManager.tsx:41:10]
 40 | import { FC, toast } from 'sonner'
 41 | import { FC, PlusCircle, Trash2 } from 'lucide-react'
    :          ^|
    :           `-- It can not be redeclared here
 42 | 
    `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/BrainVisualization.tsx:2:10]
 1 | import React, { useEffect, useRef, useMemo, useCallback } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Badge } from '@/components/ui/badge'
   :          ^|
   :           `-- It can not be redeclared here
 4 | import { FC, Brain, Activity, Zap } from 'lucide-react'
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/BrainVisualization.tsx:2:10]
 1 | import React, { useEffect, useRef, useMemo, useCallback } from 'react'
 2 | import { FC, Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, Badge } from '@/components/ui/badge'
 4 | import { FC, Brain, Activity, Zap } from 'lucide-react'
   :          ^|
   :           `-- It can not be redeclared here
 5 | 
   `----

  x Identifier `FC` has already been declared
   ,-[src/components/ui/OfflineIndicator.tsx:2:10]
 1 | import React from 'react'
 2 | import { FC, toast } from 'react-hot-toast'
   :          ^|
   :           `-- `FC` has already been declared here
 3 | import { FC, useOffline } from '../../hooks/useOffline'
   :          ^|
   :           `-- It can not be redeclared here
 4 | 
   `----

  x Unexpected token
     ,-[src/components/ui/ThemeToggle.astro:105:43]
 104 |   // Toggle theme on click
 105 |   themeToggle?.addEventListener('click', (: Event) => {
     :                                           ^
 106 |     const currentTheme = localStorage.getItem('theme') || 'dark'
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/key-rotation.ts:932:52]
 931 |             if (value) {
 932 |               const keyPair = JSON.parse(value) as any as TFHEKeyPair
     :                                                    ^^^
 933 |               allKeys.push(keyPair)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/ui/DarkThemeToggle.astro:119:43]
 118 |   // Toggle theme on click
 119 |   themeToggle?.addEventListener('click', (: Event) => {
     :                                           ^
 120 |     const currentTheme = localStorage.getItem('theme') || 'dark'
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/ai/mental-llama/evidence/utils/semanticEvidenceParser.ts:41:48]
 40 |     try {
 41 |       parsedResponse = JSON.parse(response) as any
    :                                                ^^^
 42 |     } catch (parseError) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useChatCompletion.ts:196:55]
 195 |         if (saved) {
 196 |           const parsedMessages = JSON.parse(saved) as any as AIMessage[]
     :                                                       ^^^
 197 |           setMessages(parsedMessages)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useChatCompletion.ts:386:52]
 385 |                 try {
 386 |                   const data = JSON.parse(line) as any as AIStreamChunk
     :                                                    ^^^
 387 |                   const content = data?.content
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useChatCompletion.ts:573:48]
 572 |             try {
 573 |               const data = JSON.parse(line) as any as AIStreamChunk
     :                                                ^^^
 574 |               const content = data?.content
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useChatCompletion.ts:699:55]
 698 |         if (saved) {
 699 |           const parsedMessages = JSON.parse(saved) as any as AIMessage[]
     :                                                       ^^^
 700 |           setMessages(parsedMessages)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useChatCompletion.ts:721:42]
 720 |     try {
 721 |       const parsed = JSON.parse(data) as any
     :                                          ^^^
 722 |       if (parsed.messages && Array.isArray(parsed.messages)) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/components/ai/chat/useResponseGeneration.ts:416:48]
 415 |             try {
 416 |               const data = JSON.parse(line) as any as AIStreamChunk
     :                                                ^^^
 417 |               const content = data?.content || ''
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/layout/Header.astro:103:49]
 102 |   if (mobileMenuButton && mobileMenu) {
 103 |     mobileMenuButton.addEventListener('click', (: Event) => {
     :                                                 ^
 104 |       const isOpen = !mobileMenu.classList.contains('hidden');
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/ai/PixelatedEmpathyAgent.ts:160:58]
 159 |               try {
 160 |                 const data = JSON.parse(line.slice(6) as any);
     :                                                          ^^^
 161 |                 yield data;
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Expected `,` but found `:`
     ,-[src/components/analytics/AdvancedFilteringComponent.astro:478:61]
 477 |       if (button instanceof HTMLElement) {
 478 |         button.addEventListener('click', (_event: MouseEvent: Event) => {
     :                                                             |
     :                                                             `-- `,` expected
 479 |           const tab = button.getAttribute('data-tab')
     `----

  x Unexpected token
     ,-[src/components/backgrounds/GradientAnimation.astro:154:50]
 153 |   // This adds a subtle parallax effect to the gradient
 154 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 155 |     const gradients = document.querySelectorAll('.gradient-animation')
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/components/TodoReact.tsx:23:55]
 22 |         const savedTodos = localStorage.getItem('todos')
 23 |         return savedTodos ? JSON.parse(savedTodos) as any : initialTodos
    :                                                       ^^^
 24 |       } catch (err: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/crypto/encryption.ts:85:71]
 84 |       // Parse the encrypted data
 85 |       const encrypted: EncryptedData = JSON.parse(encryptedString) as any
    :                                                                       ^^^
 86 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/crypto/encryption.ts:133:69]
 132 |     // Parse the encrypted data to get the purpose
 133 |     const encrypted: EncryptedData = JSON.parse(encryptedString) as any
     :                                                                     ^^^
 134 |     const oldKey = await this.keyStorage.getKey(encrypted.keyId)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/components/Todo.tsx:23:55]
 22 |         const savedTodos = localStorage.getItem('todos')
 23 |         return savedTodos ? JSON.parse(savedTodos) as any : initialTodos
    :                                                       ^^^
 24 |       } catch (err: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/db/KVStore.ts:82:60]
 81 |           try {
 82 |             const parsedValue = JSON.parse(storedValue) as any as T
    :                                                            ^^^
 83 |             this.cache.set(prefixedKey, parsedValue)
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
    ,-[src/components/docs/Expandable.astro:86:50]
 85 |   // Add smooth animation for expand/collapse
 86 |   document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                  ^
 87 |     const expandables = document.querySelectorAll('.expandable')
    `----

  x Unexpected token
    ,-[src/components/docs/Tabs.astro:54:50]
 53 |   // Add basic tab functionality
 54 |   document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                  ^
 55 |     const tabContainers = document.querySelectorAll('.tabs')
    `----

  x Unexpected token
    ,-[src/components/docs/Latex.astro:43:50]
 42 | 
 43 |   document.addEventListener('DOMContentLoaded', (: Event) => {
    :                                                  ^
 44 |     const latexElements = document.querySelectorAll('.latex-container')
    `----

  x Unexpected token
    ,-[src/components/base/Backdrop.astro:23:49]
 22 |   /* Close panel when user click on backdrop */
 23 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 24 |     const handleClick = () => {
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/security/AuditLogDashboard.tsx:9:10]
  8 | } from '../ui/card'
  9 | import { FC, Input } from '../ui/input'
    :          ^|
    :           `-- `FC` has already been declared here
 10 | import {
 11 |   Select,
 12 |   SelectContent,
 13 |   SelectItem,
 14 |   SelectTrigger,
 15 |   SelectValue,
 16 | } from '../ui/select'
 17 | import { FC, Button } from '../ui/button'
    :          ^|
    :           `-- It can not be redeclared here
 18 | import {
    `----

  x Identifier `FC` has already been declared
    ,-[src/components/security/AuditLogDashboard.tsx:9:10]
  8 | } from '../ui/card'
  9 | import { FC, Input } from '../ui/input'
    :          ^|
    :           `-- `FC` has already been declared here
 10 | import {
    `----
    ,-[src/components/security/AuditLogDashboard.tsx:35:10]
 34 | } from 'recharts'
 35 | import { FC, format } from 'date-fns'
    :          ^|
    :           `-- It can not be redeclared here
 36 | 
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/crypto/index.ts:430:45]
 429 |         try {
 430 |           return JSON.parse(keyDataJson) as any as KeyData
     :                                             ^^^
 431 |         } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/Navbar.astro:260:49]
 259 |   // Handle mobile menu toggle
 260 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 261 |     const button = document.getElementById('mobile-menu-button')
     `----

  x Unexpected token
    ,-[src/components/ThemeSwitcher.astro:46:49]
 45 |   // Theme toggling functionality
 46 |   document.addEventListener('astro:page-load', (: Event) => {
    :                                                 ^
 47 |     const themeToggle = document.getElementById('theme-toggle')
    `----

  x Unexpected token
     ,-[src/components/transitions/PageTransitions.astro:170:49]
 169 | <script>
 170 |   document.addEventListener('astro:page-load', (: Event) => {
     :                                                 ^
 171 |     // Add here any JS that needs to run on page transitions
     `----

  x Unexpected token
    ,-[src/components/marketing/HeroTabs.astro:91:57]
 90 | 
 91 |   tabs.forEach((t, idx) => t.addEventListener('click', (: Event) => { setActive(idx); start(); }));
    :                                                         ^
 92 | 
    `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/encryption.ts:164:52]
 163 |     const decoder = new TextDecoder()
 164 |     return JSON.parse(decoder.decode(decrypted) as any)
     :                                                    ^^^
 165 |   } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  x Unexpected token
     ,-[src/components/tailus/AppHeader.astro:122:50]
 121 |   // Mobile navigation toggle functionality
 122 |   document.addEventListener('DOMContentLoaded', (: Event) => {
     :                                                  ^
 123 |     const hamburger = document.getElementById('hamburger')
     `----

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/metaaligner/prioritization/EducationalContextRecognizer.ts:217:45]
 216 |     try {
 217 |       const parsed = JSON.parse(content) as any
     :                                             ^^^
 218 |       return {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/metaaligner/prioritization/context-detector.ts:299:45]
 298 |     try {
 299 |       const parsed = JSON.parse(content) as any as Record<string, unknown>
     :                                             ^^^
 300 |       return {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/seal-pattern-recognition.ts:183:65]
 182 |       for (const encryptedData of encryptedPatterns) {
 183 |         const data = JSON.parse(encryptedData.encryptedData) as any
     :                                                                 ^^^
 184 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/seal-pattern-recognition.ts:298:63]
 297 |       // Parse the encrypted data
 298 |       const data = JSON.parse(encryptedData.encryptedData) as any
     :                                                               ^^^
 299 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/fhe/seal-pattern-recognition.ts:425:52]
 424 |       for (const encryptedData of encryptedCorrelations) {
 425 |         JSON.parse(encryptedData.encryptedData) as any
     :                                                    ^^^
 426 |         // ...existing logic to generate RiskCorrelation(s) from _data...
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/state/persistence.ts:80:31]
 79 |         ? this.config.deserialize(data)
 80 |         : JSON.parse(data) as any
    :                               ^^^
 81 |     } catch (error: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/state/jotai-persistence.ts:132:72]
 131 | 
 132 |       const storedState: StoredState<Value> = JSON.parse(decrypted) as any
     :                                                                        ^^^
 133 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/state/jotai-persistence.ts:375:48]
 374 |         if (value) {
 375 |           exported[key] = JSON.parse(value) as any
     :                                                ^^^
 376 |         }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/state/enhanced-persistence.ts:159:75]
 158 |         try {
 159 |           const newValue = event.newValue ? JSON.parse(event.newValue) as any : null
     :                                                                           ^^^
 160 |           this.notifyStorageChange(event.key, newValue)
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/state/enhanced-persistence.ts:438:45]
 437 |       const stored = localStorage.getItem(key)
 438 |       return stored ? JSON.parse(stored) as any : defaultValue
     :                                             ^^^
 439 |     } catch (error: unknown) {
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/state/enhanced-persistence.ts:481:50]
 480 |           if (value) {
 481 |             exported[key] = JSON.parse(value) as any
     :                                                  ^^^
 482 |           }
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/metaaligner/prioritization/support-context-identifier.ts:640:45]
 639 | 
 640 |       const parsed = JSON.parse(jsonStr) as any
     :                                             ^^^
 641 | 
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/websocket/server.ts:39:63]
 38 |       try {
 39 |         const message: WebSocketMessage = JSON.parse(data) as any
    :                                                               ^^^
 40 | 
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
    ,-[src/lib/cache/invalidation.ts:97:43]
 96 |       const value = await this.redis.get(cacheKey)
 97 |       return value ? JSON.parse(value) as any : null
    :                                           ^^^
 98 |     } catch (error: unknown) {
    `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

  ! typescript-eslint(no-explicit-any): Unexpected any. Specify a different type.
     ,-[src/lib/metaaligner/prioritization/educational-context-recognizer.ts:574:45]
 573 |       logger.info('Extracted JSON string from AI response', { jsonStr })
 574 |       const parsed = JSON.parse(jsonStr) as any
     :                                             ^^^
 575 |       logger.info('Parsed AI response JSON', { parsed })
     `----
  help: Use `unknown` instead, this will force you to explicitly, and safely, assert the type is correct.

Found 114 warnings and 134 errors.
Finished in 305ms on 1449 files using 8 threads.
 ELIFECYCLE  Command failed with exit code 1.
