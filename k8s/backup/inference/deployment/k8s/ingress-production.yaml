apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pixelated-empathy-ingress
  namespace: pixelated-empathy-monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Pixelated Empathy Monitoring'
spec:
  tls:
  - hosts:
    - monitoring.pixelatedempathy.tech
    - prometheus.pixelatedempathy.tech
    secretName: monitoring-tls
  rules:
  - host: monitoring.pixelatedempathy.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  - host: prometheus.pixelatedempathy.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090

---
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: pixelated-empathy-monitoring
type: Opaque
data:
  # Generated with: htpasswd -nb admin <password> | base64
  # Default: admin / pixelated_monitoring_2025
  auth: YWRtaW46JGFwcjEkSDZlNzFIZUokdTFmVUZQSDJlSHFkNzNuZjNMdVBhLgoK

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pixelated-empathy-api-ingress
  namespace: pixelated-empathy
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - api.pixelatedempathy.tech
    secretName: api-tls
  rules:
  - host: api.pixelatedempathy.tech
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pixelated-empathy-api-service
            port:
              number: 8000

---
# ClusterIssuer for Let's Encrypt SSL certificates
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@pixelatedempathy.tech  # Replace with your email
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
# Network Policy for monitoring namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-network-policy
  namespace: pixelated-empathy-monitoring
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: pixelated-empathy
    - namespaceSelector:
        matchLabels:
          name: pixelated-empathy-data
  - ports:
    - protocol: TCP
      port: 9090  # Prometheus
    - protocol: TCP
      port: 3000  # Grafana
  egress:
  - {}  # Allow all egress

---
# Network Policy for data namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: data-network-policy
  namespace: pixelated-empathy-data
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: pixelated-empathy
    - namespaceSelector:
        matchLabels:
          name: pixelated-empathy-monitoring
  - ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
  egress:
  - {}  # Allow all egress

---
# HorizontalPodAutoscaler for Grafana
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: grafana-hpa
  namespace: pixelated-empathy-monitoring
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: grafana
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
# PodDisruptionBudget for Prometheus
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: prometheus-pdb
  namespace: pixelated-empathy-monitoring
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: prometheus

---
# PodDisruptionBudget for PostgreSQL
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: pixelated-empathy-data
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: postgres
