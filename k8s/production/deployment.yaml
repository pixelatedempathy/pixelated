apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelated-app
  namespace: pixelated-prod
  labels:
    app: pixelated
    component: web
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurplus: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: pixelated
      component: web
  template:
    metadata:
      labels:
        app: pixelated
        component: web
        environment: production
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001

      # Node Affinity for performance
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - high-performance
                - gpu-enabled

      # Pod Disruption Budget
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: pixelated

      containers:
      - name: pixelated-web
        image: pixelated/pixelated-web:latest
        imagePullPolicy: Always

        # Resource Limits
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi

        # Health Checks
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/health/simple
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 8
          failureThreshold: 5
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /api/health/simple
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 10
          failureThreshold: 6
          successThreshold: 1

        # Environment Variables
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"

        # Database Configuration
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-port
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-password

        # Redis Configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: pixelated-config
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: pixelated-config
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: redis-password

        # AI Service Configuration
        - name: AI_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: pixelated-config
              key: ai-service-url
        - name: AI_SERVICE_API_KEY
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: ai-service-api-key

        # Security Headers
        - name: SECURITY_HEADERS_ENABLED
          value: "true"
        - name: HTTPS_REDIRECT
          value: "true"

        # Ports
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP

        # Volume Mounts
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/.cache

      # Init Container for database migration
      initContainers:
      - name: db-migration
        image: pixelated/pixelated-web:latest
        command: ['npm', 'run', 'db:migrate']
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-host
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pixelated-secrets
              key: db-password

      # Volumes
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir: {}

      # Service Account
      serviceAccountName: pixelated-service-account

      # Image Pull Secrets
      imagePullSecrets:
      - name: pixelated-registry-secret
