apiVersion: v1
kind: ConfigMap
metadata:
  name: pixelated-source
  namespace: default
data:
  # This will be populated with the current source code
  placeholder: "source code will be added here"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelated-empathy-app
  namespace: default
  labels:
    app: pixelated-empathy
spec:
  replicas: 3
  selector:
    matchLabels:
      app: pixelated-empathy
  template:
    metadata:
      labels:
        app: pixelated-empathy
    spec:
      initContainers:
      - name: prepare-app
        image: node:24-alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            # Install pnpm
            npm install -g pnpm@10.20.0
            
            # Copy source code
            cp -r /source/* /app/
            cd /app
            
            # Install dependencies and build
            pnpm install --no-frozen-lockfile
            pnpm build
            
            # Create a simple server script
            cat > server.js << 'EOF'
            const express = require('express');
            const path = require('path');
            const app = express();
            
            app.use(express.static('dist'));
            
            app.get('*', (req, res) => {
              res.sendFile(path.join(__dirname, 'dist', 'index.html'));
            });
            
            const port = process.env.PORT || 3000;
            app.listen(port, () => {
              console.log(`Server running on port ${port}`);
            });
            EOF
            
            echo "Application prepared successfully"
        volumeMounts:
        - name: source-code
          mountPath: /source
        - name: app-data
          mountPath: /app
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      containers:
      - name: pixelated-empathy
        image: node:24-alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            cd /app
            node server.js
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        volumeMounts:
        - name: app-data
          mountPath: /app
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: source-code
        configMap:
          name: pixelated-source
      - name: app-data
        emptyDir: {}
      restartPolicy: Always